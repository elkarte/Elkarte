<?xml version="1.0"?>
<!DOCTYPE modification SYSTEM "http://www.elkarte.net/site/modification">
<modification xmlns="http://www.elkarte.net/site/modification" xmlns:elk="http://www.elkarte.net/">

	<id>Elkarte Contributors:ElkArte_103_patch</id>
	<version>1.0</version>
	<file name="BOARDDIR/SSI.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[define('ELK', 'SSI');

// Shortcut for the browser cache stale
define('CACHE_STALE', '?102');

// We're going to want a few globals... these are all set later.
global $time_start, $maintenance, $msubject, $mmessage, $mbname, $language;]]></search>
			<add><![CDATA[define('ELK', 'SSI');

// Shortcut for the browser cache stale
define('CACHE_STALE', '?103');

// We're going to want a few globals... these are all set later.
global $time_start, $maintenance, $msubject, $mmessage, $mbname, $language;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Find all the posts in distinct topics. Newer ones will have higher IDs.
	$request = $db->query('substring', '
		SELECT
			mf.poster_time, mf.subject, ml.id_topic, mf.id_member, ml.id_msg, t.num_replies, t.num_views, mg.online_color,
			IFNULL(mem.real_name, mf.poster_name) AS poster_name, ' . ($user_info['is_guest'] ? '1 AS is_read, 0 AS new_from' : '
			IFNULL(lt.id_msg, IFNULL(lmr.id_msg, 0)) >= ml.id_msg_modified AS is_read,
			IFNULL(lt.id_msg, IFNULL(lmr.id_msg, -1)) + 1 AS new_from') . ', SUBSTRING(mf.body, 1, 384) AS body, mf.smileys_enabled, mf.icon
		FROM {db_prefix}topics AS t
			INNER JOIN {db_prefix}messages AS ml ON (ml.id_msg = t.id_last_msg)
			INNER JOIN {db_prefix}messages AS mf ON (mf.id_msg = t.id_last_msg)
			LEFT JOIN {db_prefix}members AS mem ON (mem.id_member = mf.id_member)' . (!$user_info['is_guest'] ? '
			LEFT JOIN {db_prefix}log_topics AS lt ON (lt.id_topic = t.id_topic AND lt.id_member = {int:current_member})
			LEFT JOIN {db_prefix}log_mark_read AS lmr ON (lmr.id_board = t.id_board AND lmr.id_member = {int:current_member})' : '') . '
			LEFT JOIN {db_prefix}membergroups AS mg ON (mg.id_group = mem.id_group)
		WHERE t.id_topic IN ({array_int:topic_list})',
		array(
			'current_member' => $user_info['id'],
			'topic_list' => array_keys($topics),]]></search>
			<add><![CDATA[	// Find all the posts in distinct topics. Newer ones will have higher IDs.
	$request = $db->query('substring', '
		SELECT
			ml.poster_time, mf.subject, ml.id_member, ml.id_msg, t.id_topic, t.num_replies, t.num_views, mg.online_color,
			IFNULL(mem.real_name, ml.poster_name) AS poster_name, ' . ($user_info['is_guest'] ? '1 AS is_read, 0 AS new_from' : '
			IFNULL(lt.id_msg, IFNULL(lmr.id_msg, 0)) >= ml.id_msg_modified AS is_read,
			IFNULL(lt.id_msg, IFNULL(lmr.id_msg, -1)) + 1 AS new_from') . ', SUBSTRING(ml.body, 1, 384) AS body, ml.smileys_enabled, ml.icon
		FROM {db_prefix}topics AS t
			INNER JOIN {db_prefix}messages AS ml ON (ml.id_msg = t.id_last_msg)
			INNER JOIN {db_prefix}messages AS mf ON (mf.id_msg = t.id_first_msg)
			LEFT JOIN {db_prefix}members AS mem ON (mem.id_member = ml.id_member)' . (!$user_info['is_guest'] ? '
			LEFT JOIN {db_prefix}log_topics AS lt ON (lt.id_topic = t.id_topic AND lt.id_member = {int:current_member})
			LEFT JOIN {db_prefix}log_mark_read AS lmr ON (lmr.id_board = t.id_board AND lmr.id_member = {int:current_member})' : '') . '
			LEFT JOIN {db_prefix}membergroups AS mg ON (mg.id_group = mem.id_group)
		WHERE t.id_topic IN ({array_int:topic_list})
		ORDER BY t.id_last_msg DESC',
		array(
			'current_member' => $user_info['id'],
			'topic_list' => array_keys($topics),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			</tr>';
	echo '
		</table>';
}]]></search>
			<add><![CDATA[			</tr>';
	echo '
		</table>';
}]]></add>
		</operation>
	</file>
	<file name="BOARDDIR/index.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */

$forum_version = 'ElkArte 1.0.2';
define('FORUM_VERSION', $forum_version);

// First things first, but not necessarily in that order.
define('ELK', 1);

// Shortcut for the browser cache stale
define('CACHE_STALE', '?102');

if (function_exists('set_magic_quotes_runtime'))
	@set_magic_quotes_runtime(0);]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */

$forum_version = 'ElkArte 1.0.3';
define('FORUM_VERSION', $forum_version);

// First things first, but not necessarily in that order.
define('ELK', 1);

// Shortcut for the browser cache stale
define('CACHE_STALE', '?103');

if (function_exists('set_magic_quotes_runtime'))
	@set_magic_quotes_runtime(0);]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/CurlFetchWebdata.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		);

		// If this a redirect with a location header and we have not given up, then we play it again Sam
		if (preg_match('~30[127]~i', $http_code) === 1 && $this->_headers['location'] !== '' && $this->_current_redirect <= $this->_max_redirect)
		{
			$this->_current_redirect++;
			$header_location = $this->_getRedirectURL($url, $this->_headers['location']);]]></search>
			<add><![CDATA[		);

		// If this a redirect with a location header and we have not given up, then we play it again Sam
		if (preg_match('~30[127]~i', $http_code) === 1 && !empty($this->_headers['location']) && $this->_current_redirect <= $this->_max_redirect)
		{
			$this->_current_redirect++;
			$header_location = $this->_getRedirectURL($url, $this->_headers['location']);]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/Load.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				' . $spider_restrict,
			array(
				'member_groups' => $user_info['groups'],
				'spider_group' => !empty($modSettings['spider_group']) ? $modSettings['spider_group'] : 0,
			)
		);
		$removals = array();]]></search>
			<add><![CDATA[				' . $spider_restrict,
			array(
				'member_groups' => $user_info['groups'],
				'spider_group' => !empty($modSettings['spider_group']) && $modSettings['spider_group'] != 1 ? $modSettings['spider_group'] : 0,
			)
		);
		$removals = array();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			array(
				'member_groups' => $user_info['groups'],
				'id_profile' => $board_info['profile'],
				'spider_group' => !empty($modSettings['spider_group']) ? $modSettings['spider_group'] : 0,
			)
		);
		while ($row = $db->fetch_assoc($request))]]></search>
			<add><![CDATA[			array(
				'member_groups' => $user_info['groups'],
				'id_profile' => $board_info['profile'],
				'spider_group' => !empty($modSettings['spider_group']) && $modSettings['spider_group'] != 1 ? $modSettings['spider_group'] : 0,
			)
		);
		while ($row = $db->fetch_assoc($request))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'group_id' => $profile['id_group'],
			'post_group' => $profile['post_group'],
			'post_group_color' => $profile['post_group_color'],
			'group_icons' => str_repeat('<img src="' . str_replace('$language', $context['user']['language'], isset($profile['icons'][1]) ? $settings['images_url'] . '/group_icons/' . $profile['icons'][1] : '') . '" alt="*" />', empty($profile['icons'][0]) || empty($profile['icons'][1]) ? 0 : $profile['icons'][0]),
			'warning' => $profile['warning'],
			'warning_status' => !empty($modSettings['warning_mute']) && $modSettings['warning_mute'] <= $profile['warning'] ? 'mute' : (!empty($modSettings['warning_moderate']) && $modSettings['warning_moderate'] <= $profile['warning'] ? 'moderate' : (!empty($modSettings['warning_watch']) && $modSettings['warning_watch'] <= $profile['warning'] ? 'watch' : (''))),
			'local_time' => standardTime(time() + ($profile['time_offset'] - $user_info['time_offset']) * 3600, false),]]></search>
			<add><![CDATA[			'group_id' => $profile['id_group'],
			'post_group' => $profile['post_group'],
			'post_group_color' => $profile['post_group_color'],
			'group_icons' => str_repeat('<img src="' . str_replace('$language', $context['user']['language'], isset($profile['icons'][1]) ? $settings['images_url'] . '/group_icons/' . $profile['icons'][1] : '') . '" alt="[*]" />', empty($profile['icons'][0]) || empty($profile['icons'][1]) ? 0 : $profile['icons'][0]),
			'warning' => $profile['warning'],
			'warning_status' => !empty($modSettings['warning_mute']) && $modSettings['warning_mute'] <= $profile['warning'] ? 'mute' : (!empty($modSettings['warning_moderate']) && $modSettings['warning_moderate'] <= $profile['warning'] ? 'moderate' : (!empty($modSettings['warning_watch']) && $modSettings['warning_watch'] <= $profile['warning'] ? 'watch' : (''))),
			'local_time' => standardTime(time() + ($profile['time_offset'] - $user_info['time_offset']) * 3600, false),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Assume we want this.
	$context['forum_name'] = $mbname;

	// Check loadLanguage actually exists!
	if (!function_exists('loadLanguage'))]]></search>
			<add><![CDATA[
	// Assume we want this.
	$context['forum_name'] = $mbname;
	$context['forum_name_html_safe'] = $context['forum_name'];

	// Check loadLanguage actually exists!
	if (!function_exists('loadLanguage'))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	elseif (!empty($profile['avatar']) && $profile['avatar'] === 'gravatar')
	{
		// Gravatars URL.
		$gravatar_url = '//www.gravatar.com/avatar/' . md5(strtolower($profile['email_address'])) . 'd=' . $modSettings['avatar_max_height'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');

		$avatar = array(
			'name' => $profile['avatar'],]]></search>
			<add><![CDATA[	elseif (!empty($profile['avatar']) && $profile['avatar'] === 'gravatar')
	{
		// Gravatars URL.
		$gravatar_url = '//www.gravatar.com/avatar/' . md5(strtolower($profile['email_address'])) . ';s=' . $modSettings['avatar_max_height'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');

		$avatar = array(
			'name' => $profile['avatar'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		);

	// Make sure there's a preview for gravatars available.
	$avatar['gravatar_preview'] = '//www.gravatar.com/avatar/' . md5(strtolower($profile['email_address'])) . 'd=' . $modSettings['avatar_max_height'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');

	return $avatar;
}]]></search>
			<add><![CDATA[		);

	// Make sure there's a preview for gravatars available.
	$avatar['gravatar_preview'] = '//www.gravatar.com/avatar/' . md5(strtolower($profile['email_address'])) . ';s=' . $modSettings['avatar_max_height'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');

	call_integration_hook('integrate_avatar', array(&$avatar));

	return $avatar;
}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$index = 'new_in_' . str_replace(array('ElkArte ', '.'), array('', '_'), FORUM_VERSION);
			if (!empty($modSettings[$index]) && empty($options['dismissed_' . $index]))
			{
				$context['new_version_updates'] = array(
					'title' => $txt['new_version_updates'],
					'errors' => array(replaceBasicActionUrl($txt['new_version_updates_text'])),]]></search>
			<add><![CDATA[			$index = 'new_in_' . str_replace(array('ElkArte ', '.'), array('', '_'), FORUM_VERSION);
			if (!empty($modSettings[$index]) && empty($options['dismissed_' . $index]))
			{
				$show_warnings = true;
				$context['new_version_updates'] = array(
					'title' => $txt['new_version_updates'],
					'errors' => array(replaceBasicActionUrl($txt['new_version_updates_text'])),]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/Session.php">
		<operation>
			<search position="replace"><![CDATA[
/**
 * Implementation of PHP's session API.
 * 
 * What it does:
 *  - it handles the session data in the database (more scalable.)
 *  - it uses the databaseSession_lifetime setting for garbage collection.]]></search>
			<add><![CDATA[
/**
 * Implementation of PHP's session API.
 *
 * What it does:
 *  - it handles the session data in the database (more scalable.)
 *  - it uses the databaseSession_lifetime setting for garbage collection.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			register_shutdown_function('session_write_close');

		// Change it so the cache settings are a little looser than default.
		if (!empty($modSettings['databaseSession_loose']))
			header('Cache-Control: private');
	}
]]></search>
			<add><![CDATA[			register_shutdown_function('session_write_close');

		// Change it so the cache settings are a little looser than default.
		if (!empty($modSettings['databaseSession_loose']) || (isset($_REQUEST['action']) && $_REQUEST['action'] == 'search'))
			header('Cache-Control: private');
	}
]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/Subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function htmlTime($timestamp)
{
	if (empty($timestamp))
		return '';
]]></search>
			<add><![CDATA[ */
function htmlTime($timestamp)
{
	global $txt, $context;

	if (empty($timestamp))
		return '';
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$stdtime = standardTime($timestamp, true, true);

	// @todo maybe htmlspecialchars on the title attribute?
	return '<time title="' . $stdtime . '" datetime="' . $time . '" data-timestamp="' . $timestamp . '">' . $stdtime . '</time>';
}

/**]]></search>
			<add><![CDATA[	$stdtime = standardTime($timestamp, true, true);

	// @todo maybe htmlspecialchars on the title attribute?
	return '<time title="' . (!empty($context['using_relative_time']) ? $stdtime : $txt['last_post']) . '" datetime="' . $time . '" data-timestamp="' . $timestamp . '">' . $stdtime . '</time>';
}

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			// For parsed content, we must recurse to avoid security problems.
			if ($tag['type'] !== 'unparsed_equals')
				$data = parse_bbc($data, !empty($tag['parsed_tags_allowed']) ? false : true, '', !empty($tag['parsed_tags_allowed']) ? $tag['parsed_tags_allowed'] : array());

			$tag['after'] = strtr($tag['after'], array('$1' => $data));

			$open_tags[] = $tag;]]></search>
			<add><![CDATA[
			// For parsed content, we must recurse to avoid security problems.
			if ($tag['type'] !== 'unparsed_equals')
			{
				$data = parse_bbc($data, !empty($tag['parsed_tags_allowed']) ? false : true, '', !empty($tag['parsed_tags_allowed']) ? $tag['parsed_tags_allowed'] : array());

				// Unfortunately after we recurse, we must manually reset the static disabled tags to what they were
				parse_bbc('dummy');
			}

			$tag['after'] = strtr($tag['after'], array('$1' => $data));

			$open_tags[] = $tag;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$req = request();

	// Remember this URL in case someone doesn't like sending HTTP_REFERER.
	if (strpos($_SERVER['REQUEST_URL'], 'action=dlattach') === false && strpos($_SERVER['REQUEST_URL'], 'action=viewadminfile') === false && strpos($_SERVER['REQUEST_URL'], ';xml') === false)
		$_SESSION['old_url'] = $_SERVER['REQUEST_URL'];

	// For session check verification.... don't switch browsers...]]></search>
			<add><![CDATA[	$req = request();

	// Remember this URL in case someone doesn't like sending HTTP_REFERER.
	if (strpos($_SERVER['REQUEST_URL'], 'action=dlattach') === false && strpos($_SERVER['REQUEST_URL'], 'action=viewadminfile') === false && strpos($_SERVER['REQUEST_URL'], ';xml') === false && strpos($_SERVER['REQUEST_URL'], ';api') === false)
		$_SESSION['old_url'] = $_SERVER['REQUEST_URL'];

	// For session check verification.... don't switch browsers...]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$context['user']['popup_messages'] = false;
		$_SESSION['unread_messages'] = $user_info['unread_messages'];

		$context['user']['avatar'] = array();

		// Figure out the avatar... uploaded?
		if ($user_info['avatar']['url'] == '' && !empty($user_info['avatar']['id_attach']))
			$context['user']['avatar']['href'] = $user_info['avatar']['custom_dir'] ? $modSettings['custom_avatar_url'] . '/' . $user_info['avatar']['filename'] : $scripturl . '?action=dlattach;attach=' . $user_info['avatar']['id_attach'] . ';type=avatar';
		// Full URL?
		elseif (substr($user_info['avatar']['url'], 0, 7) == 'http://' || substr($user_info['avatar']['url'], 0, 8) == 'https://')
		{
			$context['user']['avatar']['href'] = $user_info['avatar']['url'];

			if (!empty($modSettings['avatar_max_width']))
				$context['user']['avatar']['width'] = $modSettings['avatar_max_width'];

			if (!empty($modSettings['avatar_max_height']))
				$context['user']['avatar']['height'] = $modSettings['avatar_max_height'];
		}
		// Gravatars URL.
		elseif ($user_info['avatar']['url'] === 'gravatar')
			$context['user']['avatar']['href'] = '//www.gravatar.com/avatar/' . md5(strtolower($user_settings['email_address'])) . 'd=' . $modSettings['avatar_max_height'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');
		// Otherwise we assume it's server stored?
		elseif ($user_info['avatar']['url'] !== '')
			$context['user']['avatar']['href'] = $modSettings['avatar_url'] . '/' . htmlspecialchars($user_info['avatar']['url']);

		if (!empty($context['user']['avatar']))
			$context['user']['avatar']['image'] = '<img src="' . $context['user']['avatar']['href'] . '" style="' . (isset($context['user']['avatar']['width']) ? 'width: ' . $context['user']['avatar']['width'] . 'px;' : '') . (isset($context['user']['avatar']['height']) ? 'height: ' . $context['user']['avatar']['height'] . 'px' : '') . '" alt="" class="avatar" />';

		// Figure out how long they've been logged in.
		$context['user']['total_time_logged_in'] = array(]]></search>
			<add><![CDATA[			$context['user']['popup_messages'] = false;
		$_SESSION['unread_messages'] = $user_info['unread_messages'];

		$context['user']['avatar'] = array(
			'href' => !empty($user_info['avatar']['href']) ? $user_info['avatar']['href'] : '',
			'image' => !empty($user_info['avatar']['image']) ? $user_info['avatar']['image'] : '',
		);

		// @deprecated since 1.0.2
		if (!empty($modSettings['avatar_max_width']))
			$context['user']['avatar']['width'] = $modSettings['avatar_max_width'];

		// @deprecated since 1.0.2
		if (!empty($modSettings['avatar_max_height']))
			$context['user']['avatar']['height'] = $modSettings['avatar_max_height'];

		// Figure out how long they've been logged in.
		$context['user']['total_time_logged_in'] = array(]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		return $value;
	else
		return false;
}]]></search>
			<add><![CDATA[		return $value;
	else
		return false;
}]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/Admin.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$context['quick_admin_tasks'] = getQuickAdminTasks();

		$index = 'new_in_' . str_replace(array('ElkArte ', '.'), array('', '_'), FORUM_VERSION);
		if (!empty($modSettings[$index]) && isset($txt[$index]))
		{
			$context['latest_updates'] = replaceBasicActionUrl($txt[$index]);
			require_once(SUBSDIR . '/Themes.subs.php');]]></search>
			<add><![CDATA[		$context['quick_admin_tasks'] = getQuickAdminTasks();

		$index = 'new_in_' . str_replace(array('ElkArte ', '.'), array('', '_'), FORUM_VERSION);
		if (isset($txt[$index]))
		{
			$context['latest_updates'] = replaceBasicActionUrl($txt[$index]);
			require_once(SUBSDIR . '/Themes.subs.php');]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageFeatures.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			checkSession();

			if ((!isset($_POST['mentions_buddy']) && !empty($modSettings['mentions_buddy'])) || (isset($_POST['mentions_buddy']) && $_POST['mentions_buddy'] != $modSettings['mentions_buddy']))
			{
				require_once(SUBSDIR . '/Mentions.subs.php');]]></search>
			<add><![CDATA[		{
			checkSession();

			if ((!isset($_POST['mentions_dont_notify_rlike']) && !empty($modSettings['mentions_dont_notify_rlike'])) || (isset($_POST['mentions_dont_notify_rlike']) && $_POST['mentions_dont_notify_rlike'] != $modSettings['mentions_dont_notify_rlike']))
			{
				require_once(SUBSDIR . '/Mentions.subs.php');
				toggleMentionsVisibility('rlike', empty($_POST['mentions_dont_notify_rlike']));
			}

			if ((!isset($_POST['mentions_buddy']) && !empty($modSettings['mentions_buddy'])) || (isset($_POST['mentions_buddy']) && $_POST['mentions_buddy'] != $modSettings['mentions_buddy']))
			{
				require_once(SUBSDIR . '/Mentions.subs.php');]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageMaillist.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						'value' => $txt['error'],
					),
					'data' => array(
						'db' => 'error',
					),
					'sort' => array(
						'default' => 'error ',]]></search>
			<add><![CDATA[						'value' => $txt['error'],
					),
					'data' => array(
						'function' => create_function('$rowData', '
							$error = $rowData[\'error_code\'];
							if ($error === \'error_pm_not_found\')
								return \'<span class="errorbox">\' . $rowData[\'error\'] . \'<span>\';
							else
								return $rowData[\'error\'];
						'),
					),
					'sort' => array(
						'default' => 'error ',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						'value' => $txt['message_action'],
					),
					'data' => array(
						'sprintf' => array(
							'format' => '<a href="?action=admin;area=maillist;sa=approve;item=%1$s;' . $context['session_var'] . '=' . $context['session_id'] . ';' . $context['admin-ml_token_var'] . '=' . $context['admin-ml_token'] . '"><img title="' . $txt['approve'] . '" src="' . $settings['images_url'] . '/icons/field_valid.png" alt="*" /></a>&nbsp;
						<a href="?action=admin;area=maillist;sa=delete;item=%1$s;' . $context['session_var'] . '=' . $context['session_id'] . ';' . $context['admin-ml_token_var'] . '=' . $context['admin-ml_token'] . '" onclick="return confirm(' . JavaScriptEscape($txt['delete_warning']) . ') && submitThisOnce(this);" accesskey="d"><img title="' . $txt['delete'] . '" src="' . $settings['images_url'] . '/icons/quick_remove.png" alt="*" /></a><br />
						<a href="?action=admin;area=maillist;sa=bounce;item=%1$s;' . $context['session_var'] . '=' . $context['session_id'] . ';' . $context['admin-ml_token_var'] . '=' . $context['admin-ml_token'] . '"><img title="' . $txt['bounce'] . '" src="' . $settings['images_url'] . '/icons/pm_replied.png" alt="*" /></a>&nbsp;
						<a href="?action=admin;area=maillist;sa=view;item=%1$s;' . $context['session_var'] . '=' . $context['session_id'] . ';' . $context['admin-ml_token_var'] . '=' . $context['admin-ml_token'] . '"><img title="' . $txt['view'] . '" src="' . $settings['images_url'] . '/icons/pm_read.png" alt="*" /></a>',
							'params' => array(
								'id_email' => true,
							),
						),
						'class' => 'listaction',
					),]]></search>
			<add><![CDATA[						'value' => $txt['message_action'],
					),
					'data' => array(
						'function' => create_function('$rowData', '
							global $context, $txt, $settings;

							$id = $rowData[\'id_email\'] . \';\';
							$commands = array();

							if ($rowData[\'error_code\'] === \'error_pm_not_found\')
								$commands[] = \'<a href="?action=admin;area=maillist;sa=approve;item=\' . $id . $context[\'session_var\'] . \'=\' . $context[\'session_id\'] . \';\' . $context[\'admin-ml_token_var\'] . \'=\' . $context[\'admin-ml_token\'] . \'" onclick="return confirm(\' . JavaScriptEscape($txt[\'pm_approve_warning\']) . \') && submitThisOnce(this);"><img title="\' . $txt[\'approve\'] . \'" src="\' . $settings[\'images_url\'] . \'/icons/field_valid.png" alt="*" /></a>&nbsp;\';
							else
								$commands[] = \'<a href="?action=admin;area=maillist;sa=approve;item=\' . $id . $context[\'session_var\'] . \'=\' . $context[\'session_id\'] . \';\' . $context[\'admin-ml_token_var\'] . \'=\' . $context[\'admin-ml_token\'] . \'"><img title="\' . $txt[\'approve\'] . \'" src="\' . $settings[\'images_url\'] . \'/icons/field_valid.png" alt="*" /></a>&nbsp;\';

							$commands[] = \'<a href="?action=admin;area=maillist;sa=delete;item=\' . $id . $context[\'session_var\'] . \'=\' . $context[\'session_id\'] . \';\' . $context[\'admin-ml_token_var\'] . \'=\' . $context[\'admin-ml_token\'] . \'" onclick="return confirm(\' . JavaScriptEscape($txt[\'delete_warning\']) . \') && submitThisOnce(this);" accesskey="d"><img title="\' . $txt[\'delete\'] . \'" src="\' . $settings[\'images_url\'] . \'/icons/quick_remove.png" alt="*" /></a><br />\';
							$commands[] = \'<a href="?action=admin;area=maillist;sa=bounce;item=\' . $id . $context[\'session_var\'] . \'=\' . $context[\'session_id\'] . \';\' . $context[\'admin-ml_token_var\'] . \'=\' . $context[\'admin-ml_token\'] . \'"><img title="\' . $txt[\'bounce\'] . \'" src="\' . $settings[\'images_url\'] . \'/icons/pm_replied.png" alt="*" /></a>&nbsp;\';
							$commands[] = \'<a href="?action=admin;area=maillist;sa=view;item=\' . $id . $context[\'session_var\'] . \'=\' . $context[\'session_id\'] . \';\' . $context[\'admin-ml_token_var\'] . \'=\' . $context[\'admin-ml_token\'] . \'"><img title="\' . $txt[\'view\'] . \'" src="\' . $settings[\'images_url\'] . \'/icons/pm_read.png" alt="*" /></a>\';

							return implode(\'\', $commands);'
						),
						'class' => 'listaction',
					),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			if (!empty($temp_email))
			{
				// Do we have the needed data to approve this, after all it failed for a reason yes?
				if (!empty($temp_email[0]['key']) && (!in_array($temp_email[0]['error_code'], array('error_pm_not_found', 'error_no_message', 'error_not_find_board', 'error_topic_gone'))))
				{
					// Set up the details needed to get this posted
					$force = true;
					$key = $temp_email[0]['key'] . $temp_email[0]['type'] . $temp_email[0]['message'];
					$data = $temp_email[0]['body'];

					// Unknown from email?  Update the message ONLY if we found an appropriate one during the error checking process]]></search>
			<add><![CDATA[			if (!empty($temp_email))
			{
				// Do we have the needed data to approve this, after all it failed for a reason yes?
				if (!empty($temp_email[0]['key']) && (!in_array($temp_email[0]['error_code'], array('error_no_message', 'error_not_find_board', 'error_topic_gone'))))
				{
					// Set up the details needed to get this posted
					$force = true;
					$key = $temp_email[0]['key'];
					$data = $temp_email[0]['body'];

					// Unknown from email?  Update the message ONLY if we found an appropriate one during the error checking process]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageSearchEngines.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		$groups = getBasicMembergroupData(array('globalmod', 'postgroups', 'protected', 'member'));
		foreach ($groups as $row)
			$config_vars['spider_group'][2][$row['id']] = $row['name'];

		// Make sure it's valid - note that regular members are given id_group = 1 which is reversed in Load.php - no admins here!
		if (isset($_POST['spider_group']) && !isset($config_vars['spider_group'][2][$_POST['spider_group']]))]]></search>
			<add><![CDATA[
		$groups = getBasicMembergroupData(array('globalmod', 'postgroups', 'protected', 'member'));
		foreach ($groups as $row)
		{
			// Unfortunately, regular members have to be 1 because 0 is for disabled.
			if ($row['id'] == 0)
				$config_vars['spider_group'][2][1] = $row['name'];
			else
				$config_vars['spider_group'][2][$row['id']] = $row['name'];
		}

		// Make sure it's valid - note that regular members are given id_group = 1 which is reversed in Load.php - no admins here!
		if (isset($_POST['spider_group']) && !isset($config_vars['spider_group'][2][$_POST['spider_group']]))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$config_vars = array(
			// How much detail?
			array('select', 'spider_mode', 'subtext' => $txt['spider_mode_note'], array($txt['spider_mode_off'], $txt['spider_mode_standard'], $txt['spider_mode_high'], $txt['spider_mode_vhigh']), 'onchange' => 'disableFields();'),
			'spider_group' => array('select', 'spider_group', 'subtext' => $txt['spider_group_note'], array($txt['spider_group_none'], $txt['membergroups_members'])),
			array('select', 'show_spider_online', array($txt['show_spider_online_no'], $txt['show_spider_online_summary'], $txt['show_spider_online_detail'], $txt['show_spider_online_detail_admin'])),
		);
]]></search>
			<add><![CDATA[		$config_vars = array(
			// How much detail?
			array('select', 'spider_mode', 'subtext' => $txt['spider_mode_note'], array($txt['spider_mode_off'], $txt['spider_mode_standard'], $txt['spider_mode_high'], $txt['spider_mode_vhigh']), 'onchange' => 'disableFields();'),
			'spider_group' => array('select', 'spider_group', 'subtext' => $txt['spider_group_note'], array($txt['spider_group_none'])),
			array('select', 'show_spider_online', array($txt['show_spider_online_no'], $txt['show_spider_online_summary'], $txt['show_spider_online_detail'], $txt['show_spider_online_detail_admin'])),
		);
]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Emailpost.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			return pbe_emailError('error_email_notenabled', $email_message);

		// Spam I am?
		if ($email_message->load_spam())
			return pbe_emailError('error_found_spam', $email_message);

		// Load the user from the database based on the sending email address]]></search>
			<add><![CDATA[			return pbe_emailError('error_email_notenabled', $email_message);

		// Spam I am?
		if ($email_message->load_spam() && !$force)
			return pbe_emailError('error_found_spam', $email_message);

		// Load the user from the database based on the sending email address]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Can't find this key in the database, either
		// a) spam attempt or b) replying with an expired/consumed key
		if (empty($key_owner))
			return pbe_emailError('error_' . ($email_message->message_type === 'p' ? 'pm_' : '') . 'not_find_entry', $email_message);

		// The key received was not sent to this member ... how we love those email aggregators]]></search>
			<add><![CDATA[
		// Can't find this key in the database, either
		// a) spam attempt or b) replying with an expired/consumed key
		if (empty($key_owner) && !$force)
			return pbe_emailError('error_' . ($email_message->message_type === 'p' ? 'pm_' : '') . 'not_find_entry', $email_message);

		// The key received was not sent to this member ... how we love those email aggregators]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			query_key_maintenance($email_message);

			// Update this user so the log shows they were/are active, no luking in the email ether
			query_update_member_stats($pbe, $email_message, $topic_info);
		}

		return !empty($result);]]></search>
			<add><![CDATA[			query_key_maintenance($email_message);

			// Update this user so the log shows they were/are active, no luking in the email ether
			query_update_member_stats($pbe, $email_message, $email_message->message_type === 'p' ? $pm_info : $topic_info);
		}

		return !empty($result);]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Emailuser.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		elseif (isset($_REQUEST['msg']))
		{
			require_once(SUBSDIR . '/Messages.subs.php');
			$row = mailFromMesasge((int) $_REQUEST['msg']);

			$context['form_hidden_vars']['msg'] = (int) $_REQUEST['msg'];
		}]]></search>
			<add><![CDATA[		elseif (isset($_REQUEST['msg']))
		{
			require_once(SUBSDIR . '/Messages.subs.php');
			$row = mailFromMessage((int) $_REQUEST['msg']);

			$context['form_hidden_vars']['msg'] = (int) $_REQUEST['msg'];
		}]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Memberlist.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Set up the standard columns...
		$context['columns'] = array(
			'online' => array(
				'label' => $txt['status'],
				'class' => 'status',
				'sort' => array(
					'down' => allowedTo('moderate_forum') ? 'IFNULL(lo.log_time, 1) ASC, real_name ASC' : 'CASE WHEN mem.show_online THEN IFNULL(lo.log_time, 1) ELSE 1 END ASC, real_name ASC',
					'up' => allowedTo('moderate_forum') ? 'IFNULL(lo.log_time, 1) DESC, real_name DESC' : 'CASE WHEN mem.show_online THEN IFNULL(lo.log_time, 1) ELSE 1 END DESC, real_name DESC'
				),
			),
			'real_name' => array(
				'label' => $txt['username'],]]></search>
			<add><![CDATA[
		// Set up the standard columns...
		$context['columns'] = array(
			'avatar' => array(
				'label' => '',
				'class' => 'avatar',
			),
			'real_name' => array(
				'label' => $txt['username'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					'up' => 'mem.real_name ASC'
				),
			),
			'email_address' => array(
				'label' => $txt['email'],
				'class' => 'email',]]></search>
			<add><![CDATA[					'up' => 'mem.real_name ASC'
				),
			),
			'online' => array(
				'label' => $txt['status'],
				'class' => 'status',
				'sort' => array(
					'down' => allowedTo('moderate_forum') ? 'IFNULL(lo.log_time, 1) ASC, real_name ASC' : 'CASE WHEN mem.show_online THEN IFNULL(lo.log_time, 1) ELSE 1 END ASC, real_name ASC',
					'up' => allowedTo('moderate_forum') ? 'IFNULL(lo.log_time, 1) DESC, real_name DESC' : 'CASE WHEN mem.show_online THEN IFNULL(lo.log_time, 1) ELSE 1 END DESC, real_name DESC'
				),
			),
			'email_address' => array(
				'label' => $txt['email'],
				'class' => 'email',]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/MergeTopics.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 * Original module by Mach8 - We'll never forget you.
 * ETA: Sorry, we did.]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 * Original module by Mach8 - We'll never forget you.
 * ETA: Sorry, we did.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Get info about the topics and polls that will be merged.
		$request = $db->query('', '
			SELECT
				t.id_topic, t.id_board, t.id_poll, t.num_views, t.is_sticky, t.approved, t.num_replies, t.unapproved_posts,
				m1.subject, m1.poster_time AS time_started, IFNULL(mem1.id_member, 0) AS id_member_started, IFNULL(mem1.real_name, m1.poster_name) AS name_started,
				m2.poster_time AS time_updated, IFNULL(mem2.id_member, 0) AS id_member_updated, IFNULL(mem2.real_name, m2.poster_name) AS name_updated
			FROM {db_prefix}topics AS t]]></search>
			<add><![CDATA[		// Get info about the topics and polls that will be merged.
		$request = $db->query('', '
			SELECT
				t.id_topic, t.id_board, b.id_cat, t.id_poll, t.num_views, t.is_sticky, t.approved, t.num_replies, t.unapproved_posts,
				m1.subject, m1.poster_time AS time_started, IFNULL(mem1.id_member, 0) AS id_member_started, IFNULL(mem1.real_name, m1.poster_name) AS name_started,
				m2.poster_time AS time_updated, IFNULL(mem2.id_member, 0) AS id_member_updated, IFNULL(mem2.real_name, m2.poster_name) AS name_updated
			FROM {db_prefix}topics AS t]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				INNER JOIN {db_prefix}messages AS m2 ON (m2.id_msg = t.id_last_msg)
				LEFT JOIN {db_prefix}members AS mem1 ON (mem1.id_member = m1.id_member)
				LEFT JOIN {db_prefix}members AS mem2 ON (mem2.id_member = m2.id_member)
			WHERE t.id_topic IN ({array_int:topic_list})
			ORDER BY t.id_first_msg
			LIMIT ' . count($topics),]]></search>
			<add><![CDATA[				INNER JOIN {db_prefix}messages AS m2 ON (m2.id_msg = t.id_last_msg)
				LEFT JOIN {db_prefix}members AS mem1 ON (mem1.id_member = m1.id_member)
				LEFT JOIN {db_prefix}members AS mem2 ON (mem2.id_member = m2.id_member)
				LEFT JOIN {db_prefix}boards AS b ON (b.id_board = t.id_board)
			WHERE t.id_topic IN ({array_int:topic_list})
			ORDER BY t.id_first_msg
			LIMIT ' . count($topics),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$boards = array();
		$polls = array();
		$firstTopic = 0;
		while ($row = $db->fetch_assoc($request))
		{
			// Make a note for the board counts...]]></search>
			<add><![CDATA[		$boards = array();
		$polls = array();
		$firstTopic = 0;
		$firstBoard = 0;
		while ($row = $db->fetch_assoc($request))
		{
			// Make a note for the board counts...]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			// Store the id_topic with the lowest id_first_msg.
			if (empty($firstTopic))
				$firstTopic = $row['id_topic'];

			$is_sticky = max($is_sticky, $row['is_sticky']);
		}]]></search>
			<add><![CDATA[
			// Store the id_topic with the lowest id_first_msg.
			if (empty($firstTopic))
			{
				$firstTopic = $row['id_topic'];
				$firstBoard = $row['id_board'];
			}

			$is_sticky = max($is_sticky, $row['is_sticky']);
		}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Saved in a variable to (potentially) save a query later
		$boards_info = fetchBoardsInfo($query_boards);

		// This happens when a member is moderator of a board he cannot see
		foreach ($boards as $board)
			if (!isset($boards_info[$board]))]]></search>
			<add><![CDATA[		// Saved in a variable to (potentially) save a query later
		$boards_info = fetchBoardsInfo($query_boards);

		$boardListOptions = array(
			'not_redirection' => true,
			'selected_board' => $firstBoard
		);

		if (!in_array(0, $merge_boards))
			$boardListOptions['included_boards'] = $merge_boards;
		$context += getBoardList($boardListOptions);
		// This is removed to avoid the board not being selectable.
		$context['current_board'] = null;

		// This happens when a member is moderator of a board he cannot see
		foreach ($boards as $board)
			if (!isset($boards_info[$board]))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			}
			if (count($boards) > 1)
			{
				foreach ($boards_info as $row)
					$context['boards'][] = array(
						'id' => $row['id_board'],
						'name' => $row['name'],
						'selected' => $row['id_board'] == $topic_data[$firstTopic]['board']
					);
			}

			$context['topics'] = $topic_data;]]></search>
			<add><![CDATA[			}
			if (count($boards) > 1)
			{
				// @deprecated since 1.0.3 - Kept in the remote case someone created a theme changing MergeTopics.template.php
				foreach ($boards_info as $row)
				{
					$context['boards'][] = array(
						'id' => $row['id_board'],
						'name' => $row['name'],
						'selected' => $row['id_board'] == $topic_data[$firstTopic]['board']
					);
				}
			}

			$context['topics'] = $topic_data;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Determine target board.
		$target_board = count($boards) > 1 ? (int) $_REQUEST['board'] : $boards[0];
		if (!in_array($target_board, $boards))
			fatal_lang_error('no_board');

		// Determine which poll will survive and which polls won't.]]></search>
			<add><![CDATA[
		// Determine target board.
		$target_board = count($boards) > 1 ? (int) $_REQUEST['board'] : $boards[0];
		if (!in_array($target_board, array_keys($boards_info)))
			fatal_lang_error('no_board');

		// Determine which poll will survive and which polls won't.]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Poll.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			else
				$add_options[] = array($bcinfo['id_poll'], $k, $option, 0);
		}
		if (!empty($add_options))
			insertPollOptions($add_options);
]]></search>
			<add><![CDATA[			else
				$add_options[] = array($bcinfo['id_poll'], $k, $option, 0);
		}
		if (!empty($update_options))
			modifyPollOption($update_options);

		if (!empty($add_options))
			insertPollOptions($add_options);
]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/ProfileInfo.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'buttons' => array(
					// How about... even... remove it entirely?!
					'remove' => array(
						'href' => $scripturl . '?action=deletemsg;msg=' . $row['id_msg'] . ';topic=' . $row['id_topic'] . ';profile;u=' . $context['member']['id'] . ';start=' . $context['start'],
						'text' => $txt['remove'],
						'test' => 'can_delete',
						'custom' => 'onclick="return confirm(' . JavaScriptEscape($txt['remove_message'] . '?') . ');"',]]></search>
			<add><![CDATA[				'buttons' => array(
					// How about... even... remove it entirely?!
					'remove' => array(
						'href' => $scripturl . '?action=deletemsg;msg=' . $row['id_msg'] . ';topic=' . $row['id_topic'] . ';profile;u=' . $context['member']['id'] . ';start=' . $context['start'] . ';'.  $context['session_var'] . '=' . $context['session_id'],
						'text' => $txt['remove'],
						'test' => 'can_delete',
						'custom' => 'onclick="return confirm(' . JavaScriptEscape($txt['remove_message'] . '?') . ');"',]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/ProfileOptions.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'delete' => array(
					'header' => array(
						'value' => '<input type="checkbox" class="input_check" onclick="invertAll(this, this.form);" />',
						'style' => 'width: 4%;text-align: center',
					),
					'data' => array(
						'sprintf' => array(]]></search>
			<add><![CDATA[				'delete' => array(
					'header' => array(
						'value' => '<input type="checkbox" class="input_check" onclick="invertAll(this, this.form);" />',
						'class' => 'centertext',
						'style' => 'width:4%;',
					),
					'data' => array(
						'sprintf' => array(]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[								'id' => false,
								'checked' => false,
							),
						'class' => 'centertext',
						),
					),
				),
			),]]></search>
			<add><![CDATA[								'id' => false,
								'checked' => false,
							),
						),
						'class' => 'centertext',
					),
				),
			),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'delete' => array(
					'header' => array(
						'value' => '<input type="checkbox" class="input_check" onclick="invertAll(this, this.form);" />',
						'style' => 'width: 4%;text-align: center',
					),
					'data' => array(
						'sprintf' => array(]]></search>
			<add><![CDATA[				'delete' => array(
					'header' => array(
						'value' => '<input type="checkbox" class="input_check" onclick="invertAll(this, this.form);" />',
						'class' => 'centertext',
						'style' => 'width:4%;',
					),
					'data' => array(
						'sprintf' => array(]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Recent.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		foreach ($sort_methods as $key => $val)
			$context['topics_headers'][$key] = array(
				'url' => $scripturl . '?action=unread' . ($context['showing_all_topics'] ? ';all' : '') . sprintf($context['querystring_board_limits'], $_REQUEST['start']) . ';sort=subject' . ($context['sort_by'] == 'subject' && $context['sort_direction'] == 'up' ? ';desc' : ''),
				'sort_dir_img' => $context['sort_by'] == $key ? '<img class="sort" src="' . $settings['images_url'] . '/sort_' . $context['sort_direction'] . '.png" alt="" title="' . $context['sort_title'] .'" />' : '',
			);
]]></search>
			<add><![CDATA[
		foreach ($sort_methods as $key => $val)
			$context['topics_headers'][$key] = array(
				'url' => $scripturl . '?action=unread' . ($context['showing_all_topics'] ? ';all' : '') . sprintf($context['querystring_board_limits'], $_REQUEST['start']) . ';sort=' . $key . ($context['sort_by'] == $key && $context['sort_direction'] == 'up' ? ';desc' : ''),
				'sort_dir_img' => $context['sort_by'] == $key ? '<img class="sort" src="' . $settings['images_url'] . '/sort_' . $context['sort_direction'] . '.png" alt="" title="' . $context['sort_title'] .'" />' : '',
			);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$context['recent_buttons'] = array(
					'markread' => array('text' => !empty($context['no_board_limits']) ? 'mark_as_read' : 'mark_read_short', 'image' => 'markread.png', 'lang' => true, 'custom' => 'onclick="return markunreadButton(this);"', 'url' => $scripturl . '?action=markasread;sa=' . (!empty($context['no_board_limits']) ? 'all' : 'board' . $context['querystring_board_limits']) . ';' . $context['session_var'] . '=' . $context['session_id']),
				);
]]></search>
			<add><![CDATA[
				$context['recent_buttons'] = array(
					'markread' => array('text' => !empty($context['no_board_limits']) ? 'mark_these_as_read' : 'mark_read_short', 'image' => 'markread.png', 'lang' => true, 'custom' => 'onclick="return markunreadButton(this);"', 'url' => $scripturl . '?action=markasread;sa=' . (!empty($context['no_board_limits']) ? 'all' : 'board' . $context['querystring_board_limits']) . ';' . $context['session_var'] . '=' . $context['session_id']),
				);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$context['recent_buttons'] = array(
					'markread' => array('text' => 'mark_as_read', 'image' => 'markread.png', 'lang' => true, 'url' => $scripturl . '?action=markasread;sa=unreadreplies;topics=' . $context['topics_to_mark'] . ';' . $context['session_var'] . '=' . $context['session_id']),
				);
]]></search>
			<add><![CDATA[
				$context['recent_buttons'] = array(
					'markread' => array('text' => 'mark_these_as_read', 'image' => 'markread.png', 'lang' => true, 'url' => $scripturl . '?action=markasread;sa=unreadreplies;topics=' . $context['topics_to_mark'] . ';' . $context['session_var'] . '=' . $context['session_id']),
				);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		loadTemplate('Recent');
		$context['sub_template'] = $_REQUEST['action'] == 'unread' ? 'unread' : 'replies';

		// Setup the default topic icons... for checking they exist and the like ;)
		require_once(SUBSDIR . '/MessageIndex.subs.php');
		$context['icon_sources'] = MessageTopicIcons();]]></search>
			<add><![CDATA[		loadTemplate('Recent');
		$context['sub_template'] = $_REQUEST['action'] == 'unread' ? 'unread' : 'replies';

		$template_layers = Template_Layers::getInstance();
		$template_layers->add($context['sub_template']);

		// Setup the default topic icons... for checking they exist and the like ;)
		require_once(SUBSDIR . '/MessageIndex.subs.php');
		$context['icon_sources'] = MessageTopicIcons();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				)
			);

			$context['topics'][$row['id_topic']]['first_post']['started_by'] = sprintf($txt['topic_started_by_in'], '<strong>' . $context['topics'][$row['id_topic']]['first_post']['member']['link'] . '</strong>', '<em>' . $context['topics'][$row['id_topic']]['board']['link'] . '</em>');
			determineTopicClass($context['topics'][$row['id_topic']]);
		}]]></search>
			<add><![CDATA[				)
			);

			// @deprecated since 1.0 - better have the sprintf in the template because using html here is bad
			$context['topics'][$row['id_topic']]['first_post']['started_by'] = sprintf($txt['topic_started_by_in'], '<strong>' . $context['topics'][$row['id_topic']]['first_post']['member']['link'] . '</strong>', '<em>' . $context['topics'][$row['id_topic']]['board']['link'] . '</em>');
			determineTopicClass($context['topics'][$row['id_topic']]);
		}]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/RemoveTopic.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if (!empty($unfound_messages))
			fatal_lang_error('restore_not_found', false, array('<ul style="margin-top: 0px;"><li>' . implode('</li><li>', $unfound_messages) . '</li></ul>'));

		// Just send them to the index if they get here.
		redirectexit();
	}

	/**]]></search>
			<add><![CDATA[		if (!empty($unfound_messages))
			fatal_lang_error('restore_not_found', false, array('<ul style="margin-top: 0px;"><li>' . implode('</li><li>', $unfound_messages) . '</li></ul>'));

		// Lets send them back somewhere that may make sense
		if (count($actioned_messages) == 1 && empty($topics_to_restore))
		{
			reset($actioned_messages);
			redirectexit('topic=' . key($actioned_messages));
		}
		elseif (count($topics_to_restore) == 1)
			redirectexit('topic=' . $topics_to_restore[0]);
		else
			redirectexit();
	}

	/**]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Auth.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Find the user!
	$request = $db->query('', '
		SELECT id_member, real_name, member_name, email_address, is_activated, validation_code, lngfile, openid_uri, secret_question
		FROM {db_prefix}members
		WHERE ' . $where . '
		LIMIT 1',]]></search>
			<add><![CDATA[
	// Find the user!
	$request = $db->query('', '
		SELECT id_member, real_name, member_name, email_address, is_activated, validation_code, lngfile, openid_uri, secret_question, passwd
		FROM {db_prefix}members
		WHERE ' . $where . '
		LIMIT 1',]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/BoardsList.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function getLatestPost()
	{
		if (empty($this->_latest_post))
			return array();
		else
			return $this->_latest_post;]]></search>
			<add><![CDATA[	 */
	public function getLatestPost()
	{
		if (empty($this->_latest_post) || empty($this->_latest_post['link']))
			return array();
		else
			return $this->_latest_post;]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Editor.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			if (!isset($_REQUEST['xml']))
				$context['insert_after_template'] .= '
		<form name="spell_form" id="spell_form" method="post" accept-charset="UTF-8" target="spellWindow" action="' . $scripturl . '?action=spellcheck">
			<input type="hidden" name="spellstring" value="" />
			<input type="hidden" name="fulleditor" value="" />
		</form>';
			loadJavascriptFile('spellcheck.js', array('defer' => true));
		}]]></search>
			<add><![CDATA[			if (!isset($_REQUEST['xml']))
				$context['insert_after_template'] .= '
		<form name="spell_form" id="spell_form" method="post" accept-charset="UTF-8" target="spellWindow" action="' . $scripturl . '?action=spellcheck">
			<input type="hidden" id="spellstring" name="spellstring" value="" />
			<input type="hidden" id="fulleditor" name="fulleditor" value="" />
		</form>';
			loadJavascriptFile('spellcheck.js', array('defer' => true));
		}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/EmailParse.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}

	/**
	 * Loads in the most emal from, to and cc address
	 *
	 * - will attempt to return the name and address for fields "name:" <email>
	 * - will become email['to'] = email and email['to_name'] = name]]></search>
			<add><![CDATA[	}

	/**
	 * Loads in the most email from, to and cc address
	 *
	 * - will attempt to return the name and address for fields "name:" <email>
	 * - will become email['to'] = email and email['to_name'] = name]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	private function _parse_ip($string)
	{
		$match = array();

		// Validate it matches an ip4 standard
		if (preg_match('~^((([1]?\d)?\d|2[0-4]\d|25[0-5])\.){3}(([1]?\d)?\d|2[0-4]\d|25[0-5])$~', $string, $match))
			return $match[1];
		else
			return;
	}]]></search>
			<add><![CDATA[	 */
	private function _parse_ip($string)
	{
		$string = trim($string, '[] ');

		// Validate it matches an ip4 standard
		if (filter_var($string, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4) !== false)
			return $string;
		else
			return;
	}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Emailpost.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Attempt to fix textual ('>') quotes so we also fix wrapping issues first!
		$text = pbe_fix_email_quotes($text, ($html && !$gmail));

		// Convert this (markup) text to html
		$text = preg_replace(array_keys($tags), array_values($tags), $text);
		require_once(EXTDIR . '/markdown/markdown.php');
		$text = Markdown($text);

		// Convert any resulting HTML created by markup style text in the email to BBC
		require_once(SUBSDIR . '/Html2BBC.class.php');]]></search>
			<add><![CDATA[
		// Attempt to fix textual ('>') quotes so we also fix wrapping issues first!
		$text = pbe_fix_email_quotes($text, ($html && !$gmail));
		$text = str_replace(array('[quote]','[/quote]'), array('&gt;blockquote>', '&gt;/blockquote>'), $text);

		// Convert this (markup) text to html
		$text = preg_replace(array_keys($tags), array_values($tags), $text);
		require_once(EXTDIR . '/markdown/markdown.php');
		$text = Markdown($text);
		$text = str_replace(array('&gt;blockquote>','&gt;/blockquote>'), array('<blockquote>', '</blockquote>'), $text);

		// Convert any resulting HTML created by markup style text in the email to BBC
		require_once(SUBSDIR . '/Html2BBC.class.php');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}

	// No key? We should at a minimum have who its from and a subject, so use that
	if (empty($message_key) && $email_message->message_type !== 'x')
	{
		// We don't have the message type (since we don't have a key)
		// Attempt to see if it might be a PM so we handle it correctly]]></search>
			<add><![CDATA[	}

	// No key? We should at a minimum have who its from and a subject, so use that
	if ($email_message->message_type !== 'x' && (empty($message_key) || $error === 'error_pm_not_found'))
	{
		// We don't have the message type (since we don't have a key)
		// Attempt to see if it might be a PM so we handle it correctly]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				$message = $match[3];

				// If we know/suspect its a "m,t or p" then use that to avoid a match on a wrong type, that would be bad ;)
				if ((!empty($message_type) && $message_type === $type) || empty($message_type))
				{
					// lets look up this message/topic/pm and see if the subjects match ... if they do then tada!
					if (query_load_subject($message, $type, $email_message->email['from']) === $email_message->subject)
					{
						// This email has a subject that matches the subject of a message that was sent to them
						$message_key = $key;
						$message_id = $message;
						$message_type = $type;
						continue;
					}
				}
			}]]></search>
			<add><![CDATA[				$message = $match[3];

				// If we know/suspect its a "m,t or p" then use that to avoid a match on a wrong type, that would be bad ;)
				if ((!empty($message_type) && $message_type === $type) || (empty($message_type) && $type !== 'p'))
				{
					// lets look up this message/topic/pm and see if the subjects match ... if they do then tada!
					if (query_load_subject($message, $type, $email_message->email['from']) === $subject)
					{
						// This email has a subject that matches the subject of a message that was sent to them
						$message_key = $key;
						$message_id = $message;
						$message_type = $type;
						break;
					}
				}
			}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$board_id = query_load_board($message_id);

	// Log the error so the moderators can take a look, helps keep them sharp
	$id = isset($_POST['item']) ? (int) $_POST['item'] : 0;
	$db->insert(isset($_POST['item']) ? 'replace' : 'ignore',
		'{db_prefix}postby_emails_error',
		array('id_email' => 'int', 'error' => 'string', 'data_id' => 'string', 'subject' => 'string', 'id_message' => 'int', 'id_board' => 'int', 'email_from' => 'string', 'message_type' => 'string', 'message' => 'string'),
		array($id, $error, $message_key, $subject, $message_id, $board_id, $email_message->email['from'], $message_type, $email_message->raw_message),]]></search>
			<add><![CDATA[		$board_id = query_load_board($message_id);

	// Log the error so the moderators can take a look, helps keep them sharp
	$id = isset($_REQUEST['item']) ? (int) $_REQUEST['item'] : 0;
	$db->insert(!empty($id) ? 'replace' : 'ignore',
		'{db_prefix}postby_emails_error',
		array('id_email' => 'int', 'error' => 'string', 'data_id' => 'string', 'subject' => 'string', 'id_message' => 'int', 'id_board' => 'int', 'email_from' => 'string', 'message_type' => 'string', 'message' => 'string'),
		array($id, $error, $message_key, $subject, $message_id, $board_id, $email_message->email['from'], $message_type, $email_message->raw_message),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Leave code tags as code tags for the conversion
	$message = preg_replace('~\[code(.*?)\](.*?)\[/code\]~is', '`&lt;code\\1>\\2`&lt;/code>', $message);

	// Convert the remaining bbc to html
	$message = parse_bbc($message, false);
]]></search>
			<add><![CDATA[	// Leave code tags as code tags for the conversion
	$message = preg_replace('~\[code(.*?)\](.*?)\[/code\]~is', '`&lt;code\\1>\\2`&lt;/code>', $message);

	// Allow addons to account for their own unique bbc additions e.g. gallery's etc.
	call_integration_hook('integrate_mailist_pre_parsebbc', array(&$message));

	// Convert the remaining bbc to html
	$message = parse_bbc($message, false);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Finally the sig, its goes as just plain text
	if ($signature !== '')
	{
		$signature = parse_bbc($signature, false);
		$signature = trim(un_htmlspecialchars(strip_tags(strtr($signature, array('</tr>' => "   \n", '<br />' => "   \n", '</div>' => "\n", '</li>' => "   \n", '&#91;' => '[', '&#93;' => ']')))));
	}]]></search>
			<add><![CDATA[	// Finally the sig, its goes as just plain text
	if ($signature !== '')
	{
		call_integration_hook('integrate_mailist_pre_sig_parsebbc', array(&$signature));

		$signature = parse_bbc($signature, false);
		$signature = trim(un_htmlspecialchars(strip_tags(strtr($signature, array('</tr>' => "   \n", '<br />' => "   \n", '</div>' => "\n", '</li>' => "   \n", '&#91;' => '[', '&#93;' => ']')))));
	}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Mail.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$headers .= 'Date: ' . gmdate('D, d M Y H:i:s') . ' -0000' . $line_break;
	$headers .= 'X-Mailer: ELK' . $line_break;

	// If Using the maillist we include a few more headers for compliance
	if ($maillist)
	{
		// Lets try to avoid auto replies
		$headers .= 'X-Auto-Response-Suppress: All' . $line_break;]]></search>
			<add><![CDATA[	$headers .= 'Date: ' . gmdate('D, d M Y H:i:s') . ' -0000' . $line_break;
	$headers .= 'X-Mailer: ELK' . $line_break;

	// For maillist, digests or newsletters we include a few more headers for compliance
	if ($maillist || $priority > 3)
	{
		// Lets try to avoid auto replies
		$headers .= 'X-Auto-Response-Suppress: All' . $line_break;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				@apache_reset_timeout();
		}
		else
			$result = smtp_mail(array($email['to']), $email['subject'], $email['body'], $email['send_html'] ? $email['headers'] : 'Mime-Version: 1.0' . "\r\n" . $email['headers'], $email['priority'], $email['message_id']);

		// Hopefully it sent?
		if (!$result)]]></search>
			<add><![CDATA[				@apache_reset_timeout();
		}
		else
			$result = smtp_mail(array($email['to']), $email['subject'], $email['body'], $email['headers'], $email['priority'], $email['message_id']);

		// Hopefully it sent?
		if (!$result)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * This function finds email address and few other details of the
 * poster of a certain message.
 *
 * @todo very similar to mailFromMesasge
 * @package Mail
 * @param int $id_msg the id of a message
 * @param int $topic_id the topic the message belongs to]]></search>
			<add><![CDATA[ * This function finds email address and few other details of the
 * poster of a certain message.
 *
 * @todo very similar to mailFromMessage
 * @package Mail
 * @param int $id_msg the id of a message
 * @param int $topic_id the topic the message belongs to]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Maillist.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	else
		$approve_query = ' AND 0';

	// Load them errors
	$request = $db->query('', '
		SELECT e.id_email, e.error, e.data_id, e.subject, e.id_message, e.email_from, e.message_type, e.message, e.id_board
		FROM {db_prefix}postby_emails_error e
			LEFT JOIN {db_prefix}boards AS b ON (b.id_board = e.id_board)
		WHERE id_email' . ($id === 0 ? ' > {int:id}' : ' = {int:id}') . '
			AND ({query_see_board}
				' . $approve_query . ')
			OR e.id_board = -1
		ORDER BY {raw:sort}
		' . ((!empty($chunk_size)) ? 'LIMIT {int:offset}, {int:limit} ' : ''),
		array(
			'offset' => $start,
			'limit' => $chunk_size,]]></search>
			<add><![CDATA[	else
		$approve_query = ' AND 0';

	if ($id === 0)
		$where_query = 'id_email > {int:id} AND (({query_see_board}' . $approve_query . ') OR e.id_board = -1)';
	else
		$where_query = 'id_email = {int:id} AND (({query_see_board}' . $approve_query . ') OR e.id_board = -1)';

	// Load them errors
	$request = $db->query('', '
		SELECT e.id_email, e.error, e.data_id, e.subject, e.id_message, e.email_from, e.message_type, e.message, e.id_board
		FROM {db_prefix}postby_emails_error e
			LEFT JOIN {db_prefix}boards AS b ON (b.id_board = e.id_board)
		WHERE ' . $where_query . '
		ORDER BY {raw:sort}
		' . ((!empty($chunk_size)) ? 'LIMIT {int:offset}, {int:limit} ' : 'LIMIT 1'),
		array(
			'offset' => $start,
			'limit' => $chunk_size,]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Maintenance.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
if (!defined('ELK'))]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
if (!defined('ELK'))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'zero' => 0,
				'string_zero' => '0',
				'db_error_skip' => true,
				'recycle' => $modSettings['recycle_enable'],
			)
		) !== false;
]]></search>
			<add><![CDATA[				'zero' => 0,
				'string_zero' => '0',
				'db_error_skip' => true,
				'recycle' => $modSettings['recycle_board'],
			)
		) !== false;
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Membergroups.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$settings_update = array('settings_updated' => time());

	// Have we deleted the spider group?
	if (isset($modSettings['spider_group']) && in_array($modSettings['spider_group'], $groups))
		$settings_update['spider_group'] = 0;
]]></search>
			<add><![CDATA[	$settings_update = array('settings_updated' => time());

	// Have we deleted the spider group?
	// @memo we are lucky that the group 1 and 0 cannot be deleted
	// $modSettings['spider_group'] is set to 1 (admin) for regular members (that usually is group 0)
	if (isset($modSettings['spider_group']) && in_array($modSettings['spider_group'], $groups))
		$settings_update['spider_group'] = 0;
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Memberlist.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$context['members'][$member]['post_percent'] = round(($context['members'][$member]['real_posts'] * 100) / $most_posts);
		$context['members'][$member]['registered_date'] = strftime('%Y-%m-%d', $context['members'][$member]['registered_timestamp']);
		$context['members'][$member]['real_name'] = $context['members'][$member]['link'];
		$context['members'][$member]['email_address'] = $context['members'][$member]['email'];
		$context['members'][$member]['website_url'] = $context['members'][$member]['website']['url'] != '' ? '<a href="' . $context['members'][$member]['website']['url'] . '" target="_blank" class="new_win"><img src="' . $settings['images_url'] . '/profile/www.png" alt="' . $context['members'][$member]['website']['title'] . '" title="' . $context['members'][$member]['website']['title'] . '" /></a>' : '';
		$context['members'][$member]['id_group'] = empty($context['members'][$member]['group']) ? $context['members'][$member]['post_group'] : $context['members'][$member]['group'];]]></search>
			<add><![CDATA[		$context['members'][$member]['post_percent'] = round(($context['members'][$member]['real_posts'] * 100) / $most_posts);
		$context['members'][$member]['registered_date'] = strftime('%Y-%m-%d', $context['members'][$member]['registered_timestamp']);
		$context['members'][$member]['real_name'] = $context['members'][$member]['link'];
		$context['members'][$member]['avatar'] = '<a href="' . $context['members'][$member]['href'] . '">' . $context['members'][$member]['avatar']['image'] . '</a>';
		$context['members'][$member]['email_address'] = $context['members'][$member]['email'];
		$context['members'][$member]['website_url'] = $context['members'][$member]['website']['url'] != '' ? '<a href="' . $context['members'][$member]['website']['url'] . '" target="_blank" class="new_win"><img src="' . $settings['images_url'] . '/profile/www.png" alt="' . $context['members'][$member]['website']['title'] . '" title="' . $context['members'][$member]['website']['title'] . '" /></a>' : '';
		$context['members'][$member]['id_group'] = empty($context['members'][$member]['group']) ? $context['members'][$member]['post_group'] : $context['members'][$member]['group'];]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				}

				// Should it be enclosed for display?
				if (!empty($column['enclose']))
					$context['members'][$member]['options'][$curField] = strtr($column['enclose'], array(
						'{SCRIPTURL}' => $scripturl,
						'{IMAGES_URL}' => $settings['images_url'],]]></search>
			<add><![CDATA[				}

				// Should it be enclosed for display?
				if (!empty($column['enclose']) && !empty($context['members'][$member]['options'][$curField]))
					$context['members'][$member]['options'][$curField] = strtr($column['enclose'], array(
						'{SCRIPTURL}' => $scripturl,
						'{IMAGES_URL}' => $settings['images_url'],]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Members.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				continue;

			// The admin might've used entities too, level the playing field.
			$reservedCheck = preg_replace('~(&#(\d{1,7}|x[0-9a-fA-F]{1,6});)~', 'replaceEntities__callback', $reserved);

			// Case sensitive name?
			if (empty($modSettings['reserveCase']))]]></search>
			<add><![CDATA[				continue;

			// The admin might've used entities too, level the playing field.
			$reservedCheck = preg_replace_callback('~(&#(\d{1,7}|x[0-9a-fA-F]{1,6});)~', 'replaceEntities__callback', $reserved);

			// Case sensitive name?
			if (empty($modSettings['reserveCase']))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	$member = getBasicMemberData($id_member, array('moderation' => true));

	$groups = array_merge(array($member['id_group'], $member['id_post_group']), explode(',', $member['additional_groups']));

	foreach ($groups as $k => $v)
		$groups[$k] = (int) $v;]]></search>
			<add><![CDATA[
	$member = getBasicMemberData($id_member, array('moderation' => true));

	if (empty($member['additional_groups']))
		$groups = array($member['id_group'], $member['id_post_group']);
	else
		$groups = array_merge(
			array($member['id_group'], $member['id_post_group']),
			explode(',', $member['additional_groups'])
		);

	foreach ($groups as $k => $v)
		$groups[$k] = (int) $v;]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Messages.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * @param string[] $msg_selects
 * @param string[] $msg_tables
 * @param mixed[] $msg_parameters
 * @param mixed[] $options
 * @return A request object
 */
function loadMessageRequest($msg_selects, $msg_tables, $msg_parameters, $options = array())
{
	$db = database();

	$request = $db->query('', ']]></search>
			<add><![CDATA[ * @param string[] $msg_selects
 * @param string[] $msg_tables
 * @param mixed[] $msg_parameters
 * @param mixed[] $optional
 * @return A request object
 */
function loadMessageRequest($msg_selects, $msg_tables, $msg_parameters, $optional = array())
{
	global $options;

	$db = database();

	$request = $db->query('', ']]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		FROM {db_prefix}messages AS m
			' . (!empty($msg_tables) ? implode("\n\t\t\t", $msg_tables) : '') . '
		WHERE m.id_msg IN ({array_int:message_list})
			' . (!empty($options['additional_conditions']) ? $options['additional_conditions'] : '') . '
		ORDER BY m.id_msg' . (empty($options['view_newest_first']) ? '' : ' DESC'),
		$msg_parameters
	);]]></search>
			<add><![CDATA[		FROM {db_prefix}messages AS m
			' . (!empty($msg_tables) ? implode("\n\t\t\t", $msg_tables) : '') . '
		WHERE m.id_msg IN ({array_int:message_list})
			' . (!empty($optional['additional_conditions']) ? $optional['additional_conditions'] : '') . '
		ORDER BY m.id_msg' . (empty($options['view_newest_first']) ? '' : ' DESC'),
		$msg_parameters
	);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * @param string[] $msg_selects
 * @param string[] $msg_tables
 * @param mixed[] $msg_parameters
 * @param mixed[] $options
 * @return array
 */
function loadMessageDetails($msg_selects, $msg_tables, $msg_parameters, $options = array())
{
	$db = database();
]]></search>
			<add><![CDATA[ * @param string[] $msg_selects
 * @param string[] $msg_tables
 * @param mixed[] $msg_parameters
 * @param mixed[] $optional
 * @return array
 */
function loadMessageDetails($msg_selects, $msg_tables, $msg_parameters, $optional = array())
{
	$db = database();
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	else
		$single = false;

	$request = loadMessageRequest($msg_selects, $msg_tables, $msg_parameters, $options);

	$return = array();
	while ($row = $db->fetch_assoc($request))]]></search>
			<add><![CDATA[	else
		$single = false;

	$request = loadMessageRequest($msg_selects, $msg_tables, $msg_parameters, $optional);

	$return = array();
	while ($row = $db->fetch_assoc($request))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * @param int $id_msg the id of a message
 * @return array
 */
function mailFromMesasge($id_msg)
{
	$db = database();
]]></search>
			<add><![CDATA[ * @param int $id_msg the id of a message
 * @return array
 */
function mailFromMessage($id_msg)
{
	$db = database();
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Notification.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	static $board_profile = array();

	// No need to check for you ;)
	if ($row['id_group'] == 1)
		return $email_perm;

	$allowed = explode(',', $row['member_groups']);
	$row['additional_groups'] = !empty( $row['additional_groups']) ? explode(',', $row['additional_groups']) : array();
	$row['additional_groups'][] = $row['id_group'];
	$row['additional_groups'][] = $row['id_post_group'];

	// They do have access to this board?
	if (count(array_intersect($allowed, $row['additional_groups'])) === 0)
		return false;]]></search>
			<add><![CDATA[
	static $board_profile = array();

	$allowed = explode(',', $row['member_groups']);
	$row['additional_groups'] = !empty( $row['additional_groups']) ? explode(',', $row['additional_groups']) : array();
	$row['additional_groups'][] = $row['id_group'];
	$row['additional_groups'][] = $row['id_post_group'];

	// No need to check for you ;)
	if ($row['id_group'] == 1 || in_array('1', $row['additional_groups']))
		return $email_perm;

	// They do have access to this board?
	if (count(array_intersect($allowed, $row['additional_groups'])) === 0)
		return false;]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Package.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[function read_tgz_file($gzfilename, $destination, $single_file = false, $overwrite = false, $files_to_extract = null)
{
	// From a web site
	if (substr($gzfilename, 0, 7) == 'http://' || substr($gzfilename, 0, 8) == 'https://')
	{
		$data = fetch_web_data($gzfilename);
]]></search>
			<add><![CDATA[function read_tgz_file($gzfilename, $destination, $single_file = false, $overwrite = false, $files_to_extract = null)
{
	// From a web site
	if (substr($gzfilename, 0, 7) === 'http://' || substr($gzfilename, 0, 8) === 'https://')
	{
		$data = fetch_web_data($gzfilename);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function read_tgz_data($data, $destination, $single_file = false, $overwrite = false, $files_to_extract = null)
{
	// Make sure we have this loaded.
	loadLanguage('Packages');

	// This function sorta needs gzinflate!
	if (!function_exists('gzinflate'))
		fatal_lang_error('package_no_zlib', 'critical');

	umask(0);
	if (!$single_file && $destination !== null && !file_exists($destination))
		mktree($destination, 0777);

	// No signature?
	if (strlen($data) < 10)
		return false;

	// Unpack the signature so we can see what we have
	$header = unpack('H2a/H2b/Ct/Cf/Vmtime/Cxtra/Cos', substr($data, 0, 10));
	$header['filename'] = '';
	$header['comment'] = '';

	// The IDentification number, gzip must be 1f8b
	if (strtolower($header['a'] . $header['b']) != '1f8b')
	{
		// Okay, this is not a tar.gz, but maybe it's a zip file.
		if (substr($data, 0, 2) === 'PK')
			return read_zip_data($data, $destination, $single_file, $overwrite, $files_to_extract);
		else
			return false;
	}

	// Compression method needs to be 8 = deflate!
	if ($header['t'] != 8)
		return false;

	// Each bit of this byte represents a processing flag as follows
	// 0 fTEXT, 1 fHCRC, 2 fEXTRA, 3 fNAME, 4 fCOMMENT, 5 fENCRYPT, 6-7 reserved
	$flags = $header['f'];

	// Start to read any data defined by the flags
	$offset = 10;

	// fEXTRA flag set we simply skip over its entry and the length of its data
	if ($flags & 4)
	{
		$xlen = unpack('vxlen', substr($data, $offset, 2));
		$offset += $xlen['xlen'] + 2;
	}

	// Read the filename, its zero terminated
	if ($flags & 8)
	{
		while ($data[$offset] != "\0")
			$header['filename'] .= $data[$offset++];
		$offset++;
	}

	// Read the comment, its also zero terminated
	if ($flags & 16)
	{
		while ($data[$offset] != "\0")
			$header['comment'] .= $data[$offset++];
		$offset++;
	}

	// "Read" the header CRC
	if ($flags & 2)
		$offset += 2; // $crc16 = unpack('vcrc16', substr($data, $offset, 2));

	// We have now arrived at the start of the compressed data,
	// Its terminated with 4 bytes of CRC and 4 bytes of the original input size
	$crc = unpack('Vcrc32/Visize', substr($data, strlen($data) - 8, 8));
	$data = @gzinflate(substr($data, $offset, strlen($data) - 8 - $offset));

	// crc32_compat and crc32 may not return the same results, so we accept either.
	if ($data === false || ($crc['crc32'] != crc32_compat($data) && $crc['crc32'] != crc32($data)))
		return false;

	$octdec = array('mode', 'uid', 'gid', 'size', 'mtime', 'checksum', 'type');
	$blocks = strlen($data) / 512 - 1;
	$offset = 0;
	$return = array();

	// We have Un-gziped the data, now lets extract the tar files
	while ($offset < $blocks)
	{
		$header = substr($data, $offset << 9, 512);
		$current = unpack('a100filename/a8mode/a8uid/a8gid/a12size/a12mtime/a8checksum/a1type/a100linkname/a6magic/a2version/a32uname/a32gname/a8devmajor/a8devminor/a155path', $header);

		// Clean the header fields, convert octal ones to decimal
		foreach ($current as $k => $v)
		{
			if (in_array($k, $octdec))
				$current[$k] = octdec(trim($v));
			else
				$current[$k] = trim($v);
		}

		// Blank record?  This is probably at the end of the file.
		if (empty($current['filename']))
		{
			$offset += 512;
			continue;
		}

		// If its a directory, lets make sure it ends in a /
		if ($current['type'] == 5 && substr($current['filename'], -1) != '/')
			$current['filename'] .= '/';

		// Build the checksum for this file and make sure it matches
		$checksum = 256;
		for ($i = 0; $i < 148; $i++)
			$checksum += ord($header[$i]);
		for ($i = 156; $i < 512; $i++)
			$checksum += ord($header[$i]);

		if ($current['checksum'] != $checksum)
			break;

		$size = ceil($current['size'] / 512);
		$current['data'] = substr($data, ++$offset << 9, $current['size']);
		$offset += $size;

		// Not a directory and doesn't exist already...
		if (substr($current['filename'], -1, 1) != '/' && !file_exists($destination . '/' . $current['filename']))
			$write_this = true;
		// File exists... check if it is newer.
		elseif (substr($current['filename'], -1, 1) != '/')
			$write_this = $overwrite || filemtime($destination . '/' . $current['filename']) < $current['mtime'];
		// Folder... create.
		elseif ($destination !== null && !$single_file)
		{
			// Protect from accidental parent directory writing...
			$current['filename'] = strtr($current['filename'], array('../' => '', '/..' => ''));

			if (!file_exists($destination . '/' . $current['filename']))
				mktree($destination . '/' . $current['filename'], 0777);
			$write_this = false;
		}
		else
			$write_this = false;

		if ($write_this && $destination !== null)
		{
			if (strpos($current['filename'], '/') !== false && !$single_file)
				mktree($destination . '/' . dirname($current['filename']), 0777);

			// Is this the file we're looking for?
			if ($single_file && ($destination == $current['filename'] || $destination == '*/' . basename($current['filename'])))
				return $current['data'];
			// If we're looking for another file, keep going.
			elseif ($single_file)
				continue;
			// Looking for restricted files?
			elseif ($files_to_extract !== null && !in_array($current['filename'], $files_to_extract))
				continue;

			package_put_contents($destination . '/' . $current['filename'], $current['data']);
		}

		if (substr($current['filename'], -1, 1) != '/')
			$return[] = array(
				'filename' => $current['filename'],
				'md5' => md5($current['data']),
				'preview' => substr($current['data'], 0, 100),
				'size' => $current['size'],
				'skipped' => false
			);
	}

	if ($destination !== null && !$single_file)
		package_flush_cache();

	if ($single_file)
		return false;
	else
		return $return;
}

/**]]></search>
			<add><![CDATA[ */
function read_tgz_data($data, $destination, $single_file = false, $overwrite = false, $files_to_extract = null)
{
	require_once(SUBSDIR . '/UnTgz.class.php');
	$untgz = new UnTgz($data, $destination, $single_file, $overwrite, $files_to_extract);

	// Choose the right method for the file
	if ($untgz->check_valid_tgz())
		return $untgz->read_tgz_data();
	else
	{
		unset($untgz);
		return read_zip_data($data, $destination, $single_file, $overwrite, $files_to_extract);
	}
}

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function read_zip_data($data, $destination, $single_file = false, $overwrite = false, $files_to_extract = null)
{
	umask(0);
	if ($destination !== null && !file_exists($destination) && !$single_file)
		mktree($destination, 0777);

	// Look for the end of directory signature 0x06054b50
	$data_ecr = explode("\x50\x4b\x05\x06", $data);
	if (!isset($data_ecr[1]))
		return false;

	$return = array();

	// Get all the basic zip file info since we are here
	$zip_info = unpack('vdisknum/vdisks/vrecords/vfiles/Vsize/Voffset/vcomment_length', $data_ecr[1]);
	$zip_info['comment'] = substr($data_ecr[1], 18, $zip_info['comment_length']);

	// Cut file at the central directory file header signature -- 0x02014b50, use unpack if you want any of the data, we don't
	$file_sections = explode("\x50\x4b\x01\x02", $data);

	// Cut the result on each local file header -- 0x04034b50 so we have each file in the archive as an element.
	$file_sections = explode("\x50\x4b\x03\x04", $file_sections[0]);
	array_shift($file_sections);

	// Sections and count from the signature must match or the zip file is bad
	if (count($file_sections) != $zip_info['files'])
		return false;

	// Go though each file in the archive
	foreach ($file_sections as $data)
	{
		// Get all the important file information.
		$file_info = unpack('vversion/vgeneral_purpose/vcompress_method/vfile_time/vfile_date/Vcrc/Vcompressed_size/Vsize/vfilename_length/vextrafield_length', $data);
		$file_info['filename'] = substr($data, 26, $file_info['filename_length']);
		$file_info['dir'] = $destination . '/' . dirname($file_info['filename']);

		// If bit 3 (0x08) of the general-purpose flag is set, then the CRC and file size were not available when the header was written
		// In this case the CRC and size are instead appended in a 12-byte structure immediately after the compressed data
		if ($file_info['general_purpose'] & 0x0008)
		{
			$unzipped2 = unpack('Vcrc/Vcompressed_size/Vsize', substr($data, -12));
			$file_info['crc'] = $unzipped2['crc'];
			$file_info['compressed_size'] = $unzipped2['compressed_size'];
			$file_info['size'] = $unzipped2['size'];
			unset($unzipped2);
		}

		// If this is a file, and it doesn't exist.... happy days!
		if (substr($file_info['filename'], -1) != '/' && !file_exists($destination . '/' . $file_info['filename']))
			$write_this = true;
		// If the file exists, we may not want to overwrite it.
		elseif (substr($file_info['filename'], -1) != '/')
			$write_this = $overwrite;
		// This is a directory, so we're gonna want to create it. (probably...)
		elseif ($destination !== null && !$single_file)
		{
			// Just a little accident prevention, don't mind me.
			$file_info['filename'] = strtr($file_info['filename'], array('../' => '', '/..' => ''));

			if (!file_exists($destination . '/' . $file_info['filename']))
				mktree($destination . '/' . $file_info['filename'], 0777);
			$write_this = false;
		}
		else
			$write_this = false;

		// Get the actual compressed data.
		$file_info['data'] = substr($data, 26 + $file_info['filename_length'] + $file_info['extrafield_length']);

		// Only inflate it if we need to ;)
		if (!empty($file_info['compress_method']) || ($file_info['compressed_size'] != $file_info['size']))
			$file_info['data'] = gzinflate($file_info['data']);

		// Okay!  We can write this file, looks good from here...
		if ($write_this && $destination !== null)
		{
			if ((strpos($file_info['filename'], '/') !== false && !$single_file) || (!$single_file && !is_dir($file_info['dir'])))
				mktree($file_info['dir'], 0777);

			// If we're looking for a specific file, and this is it... ka-bam, baby.
			if ($single_file && ($destination == $file_info['filename'] || $destination == '*/' . basename($file_info['filename'])))
				return $file_info['data'];
			// Oh?  Another file.  Fine.  You don't like this file, do you?  I know how it is.  Yeah... just go away.  No, don't apologize.  I know this file's just not *good enough* for you.
			elseif ($single_file)
				continue;
			// Don't really want this?
			elseif ($files_to_extract !== null && !in_array($file_info['filename'], $files_to_extract))
				continue;

			package_put_contents($destination . '/' . $file_info['filename'], $file_info['data']);
		}

		// Not a directory, add it to our results
		if (substr($file_info['filename'], -1, 1) != '/')
			$return[] = array(
				'filename' => $file_info['filename'],
				'md5' => md5($file_info['data']),
				'preview' => substr($file_info['data'], 0, 100),
				'size' => $file_info['size'],
				'skipped' => false
			);
	}

	if ($destination !== null && !$single_file)
		package_flush_cache();

	if ($single_file)
		return false;
	else
		return $return;
}

/**]]></search>
			<add><![CDATA[ */
function read_zip_data($data, $destination, $single_file = false, $overwrite = false, $files_to_extract = null)
{
	require_once(SUBSDIR . '/UnZip.class.php');
	$unzip = new UnZip($data, $destination, $single_file, $overwrite, $files_to_extract);

	return $unzip->read_zip_data();
}

/**]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Profile.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if ($row['field_type'] == 'check')
		{
			$true = (!$exists && $row['default_value']) || $value;
			$input_html = '<input type="checkbox" name="customfield[' . $row['col_name'] . ']" ' . ($true ? 'checked="checked"' : '') . ' class="input_check" />';
			$output_html = $true ? $txt['yes'] : $txt['no'];
		}
		// A select list
		elseif ($row['field_type'] == 'select')
		{
			$input_html = '<select name="customfield[' . $row['col_name'] . ']"><option value="-1"></option>';
			$options = explode(',', $row['field_options']);
			foreach ($options as $k => $v)
			{]]></search>
			<add><![CDATA[		if ($row['field_type'] == 'check')
		{
			$true = (!$exists && $row['default_value']) || $value;
			$input_html = '<input id="' . $row['col_name'] . '" type="checkbox" name="customfield[' . $row['col_name'] . ']" ' . ($true ? 'checked="checked"' : '') . ' class="input_check" />';
			$output_html = $true ? $txt['yes'] : $txt['no'];
		}
		// A select list
		elseif ($row['field_type'] == 'select')
		{
			$input_html = '<select id="' . $row['col_name'] . '" name="customfield[' . $row['col_name'] . ']"><option value="-1"></option>';
			$options = explode(',', $row['field_options']);
			foreach ($options as $k => $v)
			{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// A standard input field, including some html5 varients
		elseif (in_array($row['field_type'], array('text', 'url', 'search', 'date', 'email', 'color')))
		{
			$input_html = '<input type="' . $row['field_type'] . '" name="customfield[' . $row['col_name'] . ']" ' . ($row['field_length'] != 0 ? 'maxlength="' . $row['field_length'] . '"' : '') . ' size="' . ($row['field_length'] == 0 || $row['field_length'] >= 50 ? 50 : ($row['field_length'] > 30 ? 30 : ($row['field_length'] > 10 ? 20 : 10))) . '" value="' . $value . '" class="input_text" />';
		}
		// Only thing left, a textbox for you
		else
		{
			@list ($rows, $cols) = @explode(',', $row['default_value']);
			$input_html = '<textarea name="customfield[' . $row['col_name'] . ']" ' . (!empty($rows) ? 'rows="' . $rows . '"' : '') . ' ' . (!empty($cols) ? 'cols="' . $cols . '"' : '') . '>' . $value . '</textarea>';
		}

		// Parse BBCode]]></search>
			<add><![CDATA[		// A standard input field, including some html5 varients
		elseif (in_array($row['field_type'], array('text', 'url', 'search', 'date', 'email', 'color')))
		{
			$input_html = '<input id="' . $row['col_name'] . '" type="' . $row['field_type'] . '" name="customfield[' . $row['col_name'] . ']" ' . ($row['field_length'] != 0 ? 'maxlength="' . $row['field_length'] . '"' : '') . ' size="' . ($row['field_length'] == 0 || $row['field_length'] >= 50 ? 50 : ($row['field_length'] > 30 ? 30 : ($row['field_length'] > 10 ? 20 : 10))) . '" value="' . $value . '" class="input_text" />';
		}
		// Only thing left, a textbox for you
		else
		{
			@list ($rows, $cols) = @explode(',', $row['default_value']);
			$input_html = '<textarea id="' . $row['col_name'] . '" name="customfield[' . $row['col_name'] . ']" ' . (!empty($rows) ? 'rows="' . $rows . '"' : '') . ' ' . (!empty($cols) ? 'cols="' . $cols . '"' : '') . '>' . $value . '</textarea>';
		}

		// Parse BBCode]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$request = $db->query('', '
			SELECT id_board
			FROM {db_prefix}log_notify
			WHERE id_member = {int:selected_member}',
			array(
				'selected_member' => $memID,
			)
		);
		$notification_current = array();]]></search>
			<add><![CDATA[		$request = $db->query('', '
			SELECT id_board
			FROM {db_prefix}log_notify
			WHERE id_member = {int:selected_member}
				AND id_board != {int:id_board}',
			array(
				'selected_member' => $memID,
				'id_board' => 0,
			)
		);
		$notification_current = array();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// We are editing topic notifications......
	elseif (isset($_POST['edit_notify_topics']) && !empty($_POST['notify_topics']))
	{
		foreach ($_POST['notify_topics'] as $index => $id)
			$_POST['notify_topics'][$index] = (int) $id;

		// Make sure there are no zeros left.
		$_POST['notify_topics'] = array_diff($_POST['notify_topics'], array(0));

		$db->query('', '
			DELETE FROM {db_prefix}log_notify
			WHERE id_topic IN ({array_int:topic_list})
				AND id_member = {int:selected_member}',
			array(
				'topic_list' => $_POST['notify_topics'],
				'selected_member' => $memID,
			)
		);]]></search>
			<add><![CDATA[	// We are editing topic notifications......
	elseif (isset($_POST['edit_notify_topics']) && !empty($_POST['notify_topics']))
	{
		$edit_notify_topics = array();
		foreach ($_POST['notify_topics'] as $index => $id)
			$edit_notify_topics[$index] = (int) $id;

		// Make sure there are no zeros left.
		$edit_notify_topics = array_diff($edit_notify_topics, array(0));

		$db->query('', '
			DELETE FROM {db_prefix}log_notify
			WHERE id_topic IN ({array_int:topic_list})
				AND id_member = {int:selected_member}',
			array(
				'topic_list' => $edit_notify_topics,
				'selected_member' => $memID,
			)
		);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			}
		}

		// Did it change?
		if (!isset($user_profile[$memID]['options'][$row['col_name']]) || $user_profile[$memID]['options'][$row['col_name']] !== $value)
		{
			$log_changes[] = array(
				'action' => 'customfield_' . $row['col_name'],]]></search>
			<add><![CDATA[			}
		}

		// Did it change or has it been set?
		if ((!isset($user_profile[$memID]['options'][$row['col_name']]) && !empty($value)) || (isset($user_profile[$memID]['options'][$row['col_name']]) && $user_profile[$memID]['options'][$row['col_name']] !== $value))
		{
			$log_changes[] = array(
				'action' => 'customfield_' . $row['col_name'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * @param string $sort
 * @param int[] $boardsAllowed
 * @param integer $memID
 */
function profileLoadAttachments($start, $items_per_page, $sort, $boardsAllowed, $memID)
{
	global $board, $modSettings, $context, $settings, $scripturl, $txt;

	$db = database();

	// Retrieve some attachments.
	$request = $db->query('', '
		SELECT a.id_attach, a.id_msg, a.filename, a.downloads, a.approved, a.fileext, a.width, a.height, ' .]]></search>
			<add><![CDATA[ * @param string $sort
 * @param int[] $boardsAllowed
 * @param integer $memID
 * @param int[]|null|boolean $exclude_boards
 */
function profileLoadAttachments($start, $items_per_page, $sort, $boardsAllowed, $memID, $exclude_boards = null)
{
	global $board, $modSettings, $context, $settings, $scripturl, $txt;

	$db = database();

	if ($exclude_boards === null && !empty($modSettings['recycle_enable']) && $modSettings['recycle_board'] > 0)
		$exclude_boards = array($modSettings['recycle_board']);

	// Retrieve some attachments.
	$request = $db->query('', '
		SELECT a.id_attach, a.id_msg, a.filename, a.downloads, a.approved, a.fileext, a.width, a.height, ' .]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			AND a.id_msg != {int:no_message}
			AND m.id_member = {int:current_member}' . (!empty($board) ? '
			AND b.id_board = {int:board}' : '') . (!in_array(0, $boardsAllowed) ? '
			AND b.id_board IN ({array_int:boards_list})' : '') . (!$modSettings['postmod_active'] || $context['user']['is_owner'] ? '' : '
			AND m.approved = {int:is_approved}') . '
		ORDER BY {raw:sort}
		LIMIT {int:offset}, {int:limit}',
		array(
			'boards_list' => $boardsAllowed,
			'attachment_type' => 0,
			'no_message' => 0,
			'current_member' => $memID,]]></search>
			<add><![CDATA[			AND a.id_msg != {int:no_message}
			AND m.id_member = {int:current_member}' . (!empty($board) ? '
			AND b.id_board = {int:board}' : '') . (!in_array(0, $boardsAllowed) ? '
			AND b.id_board IN ({array_int:boards_list})' : '') . (!empty($exclude_boards) ? '
			AND b.id_board NOT IN ({array_int:exclude_boards})' : '') . (!$modSettings['postmod_active'] || $context['user']['is_owner'] ? '' : '
			AND m.approved = {int:is_approved}') . '
		ORDER BY {raw:sort}
		LIMIT {int:offset}, {int:limit}',
		array(
			'boards_list' => $boardsAllowed,
			'exclude_boards' => $exclude_boards,
			'attachment_type' => 0,
			'no_message' => 0,
			'current_member' => $memID,]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/ScheduledTask.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		loadEssentialThemeData();

		// If the maillist function is on then so is the enhanced digest
		$maillist = !empty($modSettings['maillist_enabled']) && !empty($modSettings['pbe_digest_enabled']);
		if ($maillist)
			require_once(SUBSDIR . '/Emailpost.subs.php');
]]></search>
			<add><![CDATA[		loadEssentialThemeData();

		// If the maillist function is on then so is the enhanced digest
		$maillist = !empty($modSettings['maillist_enabled']) && !empty($modSettings['maillist_digest_enabled']);
		if ($maillist)
			require_once(SUBSDIR . '/Emailpost.subs.php');
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Topic.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (empty($messages))
		$messages = messagesInTopics($topics);

	// Remove all likes now that the topic is gone
	$db->query('', '
		DELETE FROM {db_prefix}message_likes
		WHERE id_msg IN ({array_int:messages})',
		array(
			'messages' => $messages,
		)
	);

	// Remove all mentions now that the topic is gone
	$db->query('', '
		DELETE FROM {db_prefix}log_mentions
		WHERE id_msg IN ({array_int:messages})',
		array(
			'messages' => $messages,
		)
	);

	// Delete messages in each topic.
	$db->query('', ']]></search>
			<add><![CDATA[	if (empty($messages))
		$messages = messagesInTopics($topics);

	// If there are messages left in this topic
	if (!empty($messages))
	{
		// Remove all likes now that the topic is gone
		$db->query('', '
			DELETE FROM {db_prefix}message_likes
			WHERE id_msg IN ({array_int:messages})',
			array(
				'messages' => $messages,
			)
		);

		// Remove all mentions now that the topic is gone
		$db->query('', '
			DELETE FROM {db_prefix}log_mentions
			WHERE id_msg IN ({array_int:messages})',
			array(
				'messages' => $messages,
			)
		);
	}

	// Delete messages in each topic.
	$db->query('', ']]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Admin.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			echo '
				</ul>
				<p>
					', $txt['errors_fix'], '
				</p>
				<p>
					<strong><a href="', $scripturl, '?action=admin;area=repairboards;fixErrors;', $context['session_var'], '=', $context['session_id'], '">', $txt['yes'], '</a> - <a href="', $scripturl, '?action=admin;area=maintain">', $txt['no'], '</a></strong>
				</p>';
		}
		else
			echo '
				<p>', $txt['maintain_no_errors'], '</p>
				<p>
					<a href="', $scripturl, '?action=admin;area=maintain;sa=routine">', $txt['maintain_return'], '</a>
				</p>';
	}
	else]]></search>
			<add><![CDATA[
			echo '
				</ul>
				<p class="noticebox">
					', $txt['errors_fix'], '
				</p>
				<p>
					<strong><a class="linkbutton" href="', $scripturl, '?action=admin;area=repairboards;fixErrors;', $context['session_var'], '=', $context['session_id'], '">', $txt['yes'], '</a> - <a href="', $scripturl, '?action=admin;area=maintain">', $txt['no'], '</a></strong>
				</p>';
		}
		else
			echo '
				<p class="infobox">', $txt['maintain_no_errors'], '</p>
				<p>
					<a class="linkbutton" href="', $scripturl, '?action=admin;area=maintain;sa=routine">', $txt['maintain_return'], '</a>
				</p>';
	}
	else]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		else
		{
			echo '
				<p>', $txt['errors_fixed'], '</p>
				<p>
					<a href="', $scripturl, '?action=admin;area=maintain;sa=routine">', $txt['maintain_return'], '</a>
				</p>';
		}
	}]]></search>
			<add><![CDATA[		else
		{
			echo '
				<p class="successbox">', $txt['errors_fixed'], '</p>
				<p>
					<a class="linkbutton" href="', $scripturl, '?action=admin;area=maintain;sa=routine">', $txt['maintain_return'], '</a>
				</p>';
		}
	}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/BoardIndex.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$bracketList[] = comma_format($context['num_spiders']) . ' ' . ($context['num_spiders'] == 1 ? $txt['spider'] : $txt['spiders']);

	if (!empty($context['num_users_hidden']))
		$bracketList[] = comma_format($context['num_users_hidden']) . ' ' . ($context['num_spiders'] == 1 ? $txt['hidden'] : $txt['hidden_s']);

	if (!empty($bracketList))
		echo ' (' . implode(', ', $bracketList) . ')';
]]></search>
			<add><![CDATA[		$bracketList[] = comma_format($context['num_spiders']) . ' ' . ($context['num_spiders'] == 1 ? $txt['spider'] : $txt['spiders']);

	if (!empty($context['num_users_hidden']))
		$bracketList[] = comma_format($context['num_users_hidden']) . ' ' . ($context['num_users_hidden'] == 1 ? $txt['hidden'] : $txt['hidden_s']);
	if (!empty($bracketList))
		echo ' (' . implode(', ', $bracketList) . ')';
]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Display.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if ($context['show_spellchecking'])
		echo '
			<form name="spell_form" id="spell_form" method="post" accept-charset="UTF-8" target="spellWindow" action="', $scripturl, '?action=spellcheck">
				<input type="hidden" name="spellstring" value="" />
				<input type="hidden" name="fulleditor" value="" />
			</form>';

	// Quick moderation options]]></search>
			<add><![CDATA[	if ($context['show_spellchecking'])
		echo '
			<form name="spell_form" id="spell_form" method="post" accept-charset="UTF-8" target="spellWindow" action="', $scripturl, '?action=spellcheck">
				<input type="hidden" id="spellstring" name="spellstring" value="" />
				<input type="hidden" id="fulleditor" name="fulleditor" value="" />
			</form>';

	// Quick moderation options]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[							<input type="hidden" name="topic" value="' . $context['current_topic'] . '" />
							<input type="hidden" name="msg" value="%msg_id%" />
							<div class="righttext">
								<input type="submit" name="post" value="' . $txt['save'] . '" tabindex="' . $context['tabindex']++ . '" onclick="return oQuickModify.modifySave(\'' . $context['session_id'] . '\', \'' . $context['session_var'] . '\');" accesskey="s" class="button_submit" />&nbsp;&nbsp;' . ($context['show_spellchecking'] ? '<input type="button" value="' . $txt['spell_check'] . '" tabindex="' . $context['tabindex']++ . '" onclick="spellCheck(\'quickModForm\', \'message\');" class="button_submit" />&nbsp;&nbsp;' : '') . '<input type="submit" name="cancel" value="' . $txt['modify_cancel'] . '" tabindex="' . $context['tabindex']++ . '" onclick="return oQuickModify.modifyCancel();" class="button_submit" />
							</div>
						</div>'), ',
					sTemplateBodyNormal: ', JavaScriptEscape('%body%'), ',]]></search>
			<add><![CDATA[							<input type="hidden" name="topic" value="' . $context['current_topic'] . '" />
							<input type="hidden" name="msg" value="%msg_id%" />
							<div class="righttext">
								<input type="submit" name="post" value="' . $txt['save'] . '" tabindex="' . $context['tabindex']++ . '" onclick="return oQuickModify.modifySave(\'' . $context['session_id'] . '\', \'' . $context['session_var'] . '\');" accesskey="s" class="button_submit" />&nbsp;&nbsp;' . ($context['show_spellchecking'] ? '<input type="button" value="' . $txt['spell_check'] . '" tabindex="' . $context['tabindex']++ . '" onclick="spellCheck(\'quickModForm\', \'message\', false);" class="button_submit" />&nbsp;&nbsp;' : '') . '<input type="submit" name="cancel" value="' . $txt['modify_cancel'] . '" tabindex="' . $context['tabindex']++ . '" onclick="return oQuickModify.modifyCancel();" class="button_submit" />
							</div>
						</div>'), ',
					sTemplateBodyNormal: ', JavaScriptEscape('%body%'), ',]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Maillist.template.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			</dl>
		</div>
		<div class="centertext">
			<a href="' . $boardurl . '/index.php?action=admin;area=maillist;sa=emaillist">', $txt['back'], '</a>
		</div>';
}
]]></search>
			<add><![CDATA[			</dl>
		</div>
		<div class="centertext">
			<a class="linkbutton" href="' . $boardurl . '/index.php?action=admin;area=maillist;sa=emaillist">', $txt['back'], '</a>
		</div>';
}
]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Memberlist.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					if ($column == 'online')
					{
						echo '
						', $context['can_send_pm'] ? '<a href="' . $member['online']['href'] . '" title="' . $member['online']['text'] . '">' : '', $settings['use_image_buttons'] ? '<img src="' . $member['online']['image_href'] . '" alt="' . $member['online']['text'] . '" class="centericon" />' : $member['online']['label'], $context['can_send_pm'] ? '</a>' : '';
					}
					elseif ($column == 'email_address')
					{
]]></search>
			<add><![CDATA[					if ($column == 'online')
					{
						echo '
						', $context['can_send_pm'] ? '<a href="' . $member['online']['href'] . '" title="' . $member['online']['text'] . '">' : '', $settings['use_image_buttons'] ? '<img src="' . $member['online']['image_href'] . '" alt="' . $member['online']['text'] . '" />' : $member['online']['label'], $context['can_send_pm'] ? '</a>' : '';
					}
					elseif ($column == 'email_address')
					{
]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/MergeTopics.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */

/**
 * Template for the bit to show when merge topics is finished.
 */]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */

function template_MergeTopics_init()
{
	loadTemplate('GenericHelpers');
}

/**
 * Template for the bit to show when merge topics is finished.
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[							<a class="linkbutton" href="', $scripturl, '?action=mergetopics;sa=options;board=', $context['current_board'], '.0;from=', $context['origin_topic'], ';to=', $topic['id'], ';', $context['session_var'], '=', $context['session_id'], '">
								<img class="centericon" src="', $settings['images_url'], '/buttons/merge.png" alt="', $txt['merge'], '"  />
							</a>&nbsp;
							<a href="', $scripturl, '?topic=', $topic['id'], '.0" target="_blank" class="new_win">', $topic['subject'], '</a> ', $txt['started_by'], ' ', $topic['poster']['link'], '
						</li>';

	echo ']]></search>
			<add><![CDATA[							<a class="linkbutton" href="', $scripturl, '?action=mergetopics;sa=options;board=', $context['current_board'], '.0;from=', $context['origin_topic'], ';to=', $topic['id'], ';', $context['session_var'], '=', $context['session_id'], '">
								<img class="centericon" src="', $settings['images_url'], '/buttons/merge.png" alt="', $txt['merge'], '"  />
							</a>&nbsp;
							<a href="', $scripturl, '?topic=', $topic['id'], '.0" target="_blank" class="new_win">', $topic['subject'], '</a> ', sprintf($txt['topic_started_by'], $topic['poster']['link']), '
						</li>';

	echo ']]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		echo '
					<fieldset id="merge_board" class="merge_options">
						<legend>', $txt['merge_select_target_board'], '</legend>
						<ul>';

		foreach ($context['boards'] as $board)
			echo '
							<li>
								<input type="radio" id="board', $board['id'], '" name="board" value="', $board['id'], '"', $board['selected'] ? ' checked="checked"' : '', ' class="input_radio" /> <label for="board', $board['id'], '">', $board['name'], '</label>
							</li>';

		echo '
						</ul>
					</fieldset>';
	}
]]></search>
			<add><![CDATA[	{
		echo '
					<fieldset id="merge_board" class="merge_options">
						<legend>', $txt['merge_select_target_board'], '</legend>';

		template_select_boards('board');

		echo '
					</fieldset>';
	}
]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Post.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				overflow: auto;
				background: #ffffff;
			}
		</style>';

	// As you may expect - we need a lot of javascript for this... load it from the separate files.]]></search>
			<add><![CDATA[				overflow: auto;
				background: #ffffff;
			}
			select {
				height: auto;
				max-height: none;
			}
		</style>';

	// As you may expect - we need a lot of javascript for this... load it from the separate files.]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/ProfileOptions.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (!empty($context['show_spellchecking']))
		echo '
		<form name="spell_form" id="spell_form" method="post" accept-charset="UTF-8" target="spellWindow" action="', $scripturl, '?action=spellcheck">
			<input type="hidden" name="spellstring" value="" />
			<input type="hidden" name="fulleditor" value="" />
		</form>';
}
]]></search>
			<add><![CDATA[	if (!empty($context['show_spellchecking']))
		echo '
		<form name="spell_form" id="spell_form" method="post" accept-charset="UTF-8" target="spellWindow" action="', $scripturl, '?action=spellcheck">
			<input type="hidden" id="spellstring" name="spellstring" value="" />
			<input type="hidden" id="fulleditor" name="fulleditor" value="" />
		</form>';
}
]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Recent.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	echo '
		</div>';

	template_pagesection();
}]]></search>
			<add><![CDATA[	echo '
		</div>';

	template_pagesection();

	if (!empty($context['using_relative_time']))
		echo '
		<script><!-- // --><![CDA]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[

/**
 * Unread posts page.
 */]]></search>
			<add><![CDATA[TA[
			$(\'.topic_latest\').addClass(\'relative\');
		// ]]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
function template_unread()
{]]></search>
			<add><![CDATA[]></script>';
}

/**
 * Unread posts page.
 */
function template_unread()
{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[										</h4>
									</div>
									<div class="topic_starter">
										', $txt['started_by'], ' ', $topic['first_post']['member']['link'], !empty($topic['pages']) ? '
										<ul class="small_pagelinks" id="pages' . $topic['first_post']['id'] . '" role="menubar">' . $topic['pages'] . '</ul>' : '', '
									</div>
								</div>]]></search>
			<add><![CDATA[										</h4>
									</div>
									<div class="topic_starter">
										', sprintf($txt['topic_started_by_in'], $topic['first_post']['member']['link'], '<em>' . $topic['board']['link'] . '</em>'), !empty($topic['pages']) ? '
										<ul class="small_pagelinks" id="pages' . $topic['first_post']['id'] . '" role="menubar">' . $topic['pages'] . '</ul>' : '', '
									</div>
								</div>]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if ($context['showCheckboxes'])
			echo '
					</form>';

		template_pagesection('recent_buttons', 'right');

		echo '
					<div id="topic_icons" class="description">', template_basicicons_legend(), '
					</div>';
	}
	else
		echo ']]></search>
			<add><![CDATA[		if ($context['showCheckboxes'])
			echo '
					</form>';
	}
	else
		echo ']]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[										</h4>
									</div>
									<div class="topic_starter">
										', $topic['first_post']['started_by'], !empty($topic['pages']) ? '
										<ul class="small_pagelinks" id="pages' . $topic['first_post']['id'] . '" role="menubar">' . $topic['pages'] . '</ul>' : '', '
									</div>
								</div>]]></search>
			<add><![CDATA[										</h4>
									</div>
									<div class="topic_starter">
										', sprintf($txt['topic_started_by_in'], $topic['first_post']['member']['link'], '<em>' . $topic['board']['link'] . '</em>'), !empty($topic['pages']) ? '
										<ul class="small_pagelinks" id="pages' . $topic['first_post']['id'] . '" role="menubar">' . $topic['pages'] . '</ul>' : '', '
									</div>
								</div>]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if ($context['showCheckboxes'])
			echo '
					</form>';

		template_pagesection('recent_buttons', 'right');

		echo '
					<div id="topic_icons" class="description">', template_basicicons_legend(), '
					</div>';
	}
	else
		echo ']]></search>
			<add><![CDATA[		if ($context['showCheckboxes'])
			echo '
					</form>';
	}
	else
		echo ']]></add>
		</operation>
		<operation>
			<search position="end" />
			<add><![CDATA[

function template_replies_below()
{
	global $context;

	if (!empty($context['topics']))
	{
		template_pagesection('recent_buttons', 'right');

		echo '
		<div id="topic_icons" class="description">';

			template_basicicons_legend();

		if (!empty($context['using_relative_time']))
			echo '
			<script><!-- // --><![CDA]]></add>
		</operation>
		<operation>
			<search position="end" />
			<add><![CDATA[TA[
				$(\'.topic_latest\').addClass(\'relative\');
			// ]]]></add>
		</operation>
		<operation>
			<search position="end" />
			<add><![CDATA[]></script>';

		echo '
		</div>';
	}
}

function template_unread_below()
{
	global $context;

	if (!empty($context['topics']))
	{
		template_pagesection('recent_buttons', 'right');

		echo '
		<div id="topic_icons" class="description">';

			template_basicicons_legend();

		if (!empty($context['using_relative_time']))
			echo '
			<script><!-- // --><![CDA]]></add>
		</operation>
		<operation>
			<search position="end" />
			<add><![CDATA[TA[
				$(\'.topic_latest\').addClass(\'relative\');
			// ]]]></add>
		</operation>
		<operation>
			<search position="end" />
			<add><![CDATA[]></script>';

		echo '
		</div>';
	}

}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Register.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			{
				echo '
						<dt>
							<strong', !empty($field['is_error']) ? ' class="error"' : '', '>', $field['name'], ':</strong>
							<span class="smalltext">', $field['desc'], '</span>
						</dt>
						<dd>', preg_replace_callback('~<(input|select|textarea) ~', create_function('$matches', ']]></search>
			<add><![CDATA[			{
				echo '
						<dt>
							<strong', !empty($field['is_error']) ? ' class="error"' : '', '><label for="', $field['colname'], '">', $field['name'], ':</label></strong>
							<span class="smalltext">', $field['desc'], '</span>
						</dt>
						<dd>', preg_replace_callback('~<(input|select|textarea) ~', create_function('$matches', ']]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	echo '
		<h2 class="category_header">', $txt['admin_contact_form'], '</h2>
		<div class="windowbg2">', $txt['contact_thankyou'], '</div>';
}]]></search>
			<add><![CDATA[	echo '
		<h2 class="category_header">', $txt['admin_contact_form'], '</h2>
		<div class="windowbg2">', $txt['contact_thankyou'], '</div>';
}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Who.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		echo '
						</div>
						<div class="online_time">', $member['time'], '</div>
						<div class="online_action">', $member['action'], '</div>
					</dd>';
	}]]></search>
			<add><![CDATA[
		echo '
						</div>
						<div class="online_time nowrap">', $member['time'], '</div>
						<div class="online_action">', $member['action'], '</div>
					</dd>';
	}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_besocial/index_besocial.css">
		<operation>
			<search position="replace"><![CDATA[/*    .right_submit is right floated */
/*    .left_submit is left floated */
/* The button_reset class may need attention too. */
.button_submit, .right_submit, .left_submit, .button_reset,
/* Anchors styled to look like buttons. */
/* These have standard body text size. Can be chained with smalltext class. */
.linkbutton:link, .linkbutton_right:link, .linkbutton_left:link,]]></search>
			<add><![CDATA[/*    .right_submit is right floated */
/*    .left_submit is left floated */
/* The button_reset class may need attention too. */
.button_submit, .right_submit, .left_submit, .button_reset, .drop_area_fileselect_text,
/* Anchors styled to look like buttons. */
/* These have standard body text size. Can be chained with smalltext class. */
.linkbutton:link, .linkbutton_right:link, .linkbutton_left:link,]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
/* This one does 800 screens at default font size. */
@media screen and (min-width: 50em) {
		#menu_nav .listlevel1.subsections>a:before {
		font-family: "FontAwesome";
		margin: 0 5px 0 0;
		font-size: 1.2em;
		content: "\f0d7";
		color: #43a8da;
	}
}
@media screen and (max-width: 50em) {
	body {]]></search>
			<add><![CDATA[
/* This one does 800 screens at default font size. */
@media screen and (min-width: 50em) {
	#menu_nav .listlevel1.subsections>a:before {
		font-family: "FontAwesome";
		margin: -1px 5px 0 0;
		float: left;
		font-size: 1.2em;
		content: "\f0d7";
		color: #43a8da;
	}

	#menu_nav .listlevel1 {
		margin: 1px 2px 0;
	}
}
@media screen and (max-width: 50em) {
	body {]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_light/index_light.css">
		<operation>
			<search position="replace"><![CDATA[/*    .right_submit is right floated */
/*    .left_submit is left floated */
/* The button_reset class may need attention too. */
.button_submit, .right_submit, .left_submit, .button_reset,
/* Anchors styled to look like buttons. */
/* These have standard body text size. Can be chained with smalltext class. */
.linkbutton:link, .linkbutton_right:link, .linkbutton_left:link,]]></search>
			<add><![CDATA[/*    .right_submit is right floated */
/*    .left_submit is left floated */
/* The button_reset class may need attention too. */
.button_submit, .right_submit, .left_submit, .button_reset, .drop_area_fileselect_text,
/* Anchors styled to look like buttons. */
/* These have standard body text size. Can be chained with smalltext class. */
.linkbutton:link, .linkbutton_right:link, .linkbutton_left:link,]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/index.css">
		<operation>
			<search position="replace"><![CDATA[}
.drop_area_fileselect_text {
	white-space: nowrap;
}

#postAttachment >dd.progress_tracker {]]></search>
			<add><![CDATA[}
.drop_area_fileselect_text {
	white-space: nowrap;
	padding: 0 4px;
}

#postAttachment >dd.progress_tracker {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	padding: 12px 0;
}
#memberlist .status {
	width: 60px;
}
#memberlist .selected {
	width: auto;]]></search>
			<add><![CDATA[	padding: 12px 0;
}
#memberlist .status {
	width: 20px;
}
#memberlist .avatar.avatarresize {
	max-width: 2.4em;
	max-height: 3.4em;
}
.mlist li div {
	margin: 0 auto;
	height: 2.4em;
	padding: 3px 8px 0;
	vertical-align: middle;
}
#memberlist .selected {
	width: auto;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	#postMoreOptions, #postAttachment, #postAttachment2 {
		padding: 4px;
	}
}]]></search>
			<add><![CDATA[	#postMoreOptions, #postAttachment, #postAttachment2 {
		padding: 4px;
	}
	#confirm_buttons .button_submit {
		height: inherit;
		max-height: none;
	}
}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/index.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// The version this template/theme is for. This should probably be the version of the forum it was created for.
		'theme_version' => '1.0',

		// Use plain buttons - as opposed to text buttons?
		'use_buttons' => true,

		// Show sticky and lock status separate from topic icons?
		'separate_sticky_lock' => true,

		// Set the following variable to true if this theme requires the optional theme strings file to be loaded.
		'require_theme_strings' => false,
]]></search>
			<add><![CDATA[		// The version this template/theme is for. This should probably be the version of the forum it was created for.
		'theme_version' => '1.0',

		// Set the following variable to true if this theme requires the optional theme strings file to be loaded.
		'require_theme_strings' => false,
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// A little help for our friends
	echo '
	<!--[if lt IE 9]>
		<script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->';

	echo ']]></search>
			<add><![CDATA[	// A little help for our friends
	echo '
	<!--[if lt IE 9]>
		<script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->';

	echo ']]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	addInlineJavascript('
		$(\'#elkFadeScroller\').Elk_NewsFader();', true);
}]]></search>
			<add><![CDATA[
	addInlineJavascript('
		$(\'#elkFadeScroller\').Elk_NewsFader();', true);
}]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Editor.english.php">
		<operation>
			<search position="replace"><![CDATA[
global $editortxt;

$editortxt['Bold'] = 'Bold';
$editortxt['Italic'] = 'Italic';
$editortxt['Underline'] = 'Underline';]]></search>
			<add><![CDATA[
global $editortxt;

$editortxt['Close'] = 'Close';
$editortxt['Bold'] = 'Bold';
$editortxt['Italic'] = 'Italic';
$editortxt['Underline'] = 'Underline';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Maillist.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['noaccess'] = 'Private Messages can not be reviewed';
$txt['badid'] = 'Invalid or missing email ID';
$txt['delete_warning'] = 'Are you sure you want to delete this entry?';
$txt['filter_delete_warning'] = 'Are you sure you want to remove this filter?';
$txt['parser_delete_warning'] = 'Are you sure you want to remove this parser?';
$txt['bounce'] = 'Bounce';]]></search>
			<add><![CDATA[$txt['noaccess'] = 'Private Messages can not be reviewed';
$txt['badid'] = 'Invalid or missing email ID';
$txt['delete_warning'] = 'Are you sure you want to delete this entry?';
$txt['pm_approve_warning'] = 'Approve this personal message with CAUTION!
The PM being replied to has been REMOVED.
The system attempts to find others in that conversation but the results are not 100% accurate.
If in doubt, its better to bounce!';
$txt['filter_delete_warning'] = 'Are you sure you want to remove this filter?';
$txt['parser_delete_warning'] = 'Are you sure you want to remove this parser?';
$txt['bounce'] = 'Bounce';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Mentions.english.php">
		<operation>
			<search position="replace"><![CDATA[
$txt['mentions_from'] = 'Member';
$txt['mentions_when'] = 'When';
$txt['mentions_what'] = 'Mention';
$txt['mentions_all'] = 'Show all';
$txt['mentions_unread'] = 'Show unread';
$txt['mentions_action'] = 'Actions';]]></search>
			<add><![CDATA[
$txt['mentions_from'] = 'Member';
$txt['mentions_when'] = 'When';
$txt['mentions_what'] = 'Message';
$txt['mentions_all'] = 'Show all';
$txt['mentions_unread'] = 'Show unread';
$txt['mentions_action'] = 'Actions';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Who.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['who_topicbyemail'] = 'Email starting a new topic in <a href="%1$s">%2$s</a>.';

$txt['whotopic_postbyemail'] = 'Email posting in <a href="%1$s">%2$s</a>.';
$txt['who_pm_byemail'] = 'Sending a personal message by email.';

// Credits text
$txt['credits'] = 'Credits';]]></search>
			<add><![CDATA[$txt['who_topicbyemail'] = 'Email starting a new topic in <a href="%1$s">%2$s</a>.';

$txt['whotopic_postbyemail'] = 'Email posting in <a href="%1$s">%2$s</a>.';
$txt['whoall_pm_byemail'] = 'Sending a personal message by email.';

// Credits text
$txt['credits'] = 'Credits';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/index.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['ban_continue_browse'] = 'You may continue to browse the forum as a guest.';

$txt['mark_as_read'] = 'Mark ALL messages as read';

$txt['locked_topic'] = 'Locked Topic';
$txt['normal_topic'] = 'Normal Topic';]]></search>
			<add><![CDATA[$txt['ban_continue_browse'] = 'You may continue to browse the forum as a guest.';

$txt['mark_as_read'] = 'Mark ALL messages as read';
$txt['mark_these_as_read'] = 'Mark THESE messages as read';

$txt['locked_topic'] = 'Locked Topic';
$txt['normal_topic'] = 'Normal Topic';]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/script.js">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 * This file contains javascript utility functions
 */]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 * This file contains javascript utility functions
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	is_chrome = !!window.chrome, // Chrome 1+, Opera 15+
	is_ie = !!document.documentMode, // IE8+
	is_webkit = ua.indexOf('applewebkit') !== -1;
	is_osx = navigator.platform.toUpperCase().indexOf('MAC') >= 0;

// Versions of ie < 9 do not have this built in
if (!('getElementsByClassName' in document))]]></search>
			<add><![CDATA[	is_chrome = !!window.chrome, // Chrome 1+, Opera 15+
	is_ie = !!document.documentMode, // IE8+
	is_webkit = ua.indexOf('applewebkit') !== -1;
	is_osx = navigator.platform.toUpperCase().indexOf('MAC') >= 0,
	is_mobile = navigator.userAgent.indexOf('Mobi') !== -1, // Common mobile including Mozilla, Safari, IE, Opera, Chrome
	is_touch = 'ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch;

// Versions of ie < 9 do not have this built in
if (!('getElementsByClassName' in document))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (sChildLevelPrefix !== '')
		sChildLevelPrefix = sChildLevelPrefix + this.opt.sBoardPrefix;

	document.getElementById(this.opt.sContainerId).innerHTML = this.opt.sJumpToTemplate.replace(/%select_id%/, this.opt.sContainerId + '_select').replace(/%dropdown_list%/, '<select ' + (this.opt.bDisabled === true ? 'disabled="disabled" ' : 0) + (this.opt.sClassName !== undefined ? 'class="' + this.opt.sClassName + '" ' : '') + 'name="' + (this.opt.sCustomName !== undefined ? this.opt.sCustomName : this.opt.sContainerId + '_select') + '" id="' + this.opt.sContainerId + '_select" ' + ('implementation' in document ? '' : 'onmouseover="grabJumpToContent(this);" ') + ('onbeforeactivate' in document ? 'onbeforeactivate' : 'onfocus') + '="grabJumpToContent(this);"><option value="' + (this.opt.bNoRedirect !== undefined && this.opt.bNoRedirect === true ? this.opt.iCurBoardId : '?board=' + this.opt.iCurBoardId + '.0') + '">' + sChildLevelPrefix + this.opt.sCurBoardName.removeEntities() + '</option></select>&nbsp;' + (this.opt.sGoButtonLabel !== undefined ? '<input type="button" class="button_submit" value="' + this.opt.sGoButtonLabel + '" onclick="window.location.href = \'' + elk_prepareScriptUrl(elk_scripturl) + 'board=' + this.opt.iCurBoardId + '.0\';" />' : ''));
	this.dropdownList = document.getElementById(this.opt.sContainerId + '_select');
};
]]></search>
			<add><![CDATA[	if (sChildLevelPrefix !== '')
		sChildLevelPrefix = sChildLevelPrefix + this.opt.sBoardPrefix;

	document.getElementById(this.opt.sContainerId).innerHTML = this.opt.sJumpToTemplate.replace(/%select_id%/, this.opt.sContainerId + '_select').replace(/%dropdown_list%/, '<select ' + (this.opt.bDisabled === true ? 'disabled="disabled" ' : '') + (this.opt.sClassName !== undefined ? 'class="' + this.opt.sClassName + '" ' : '') + 'name="' + (this.opt.sCustomName !== undefined ? this.opt.sCustomName : this.opt.sContainerId + '_select') + '" id="' + this.opt.sContainerId + '_select" ' + ('implementation' in document ? '' : 'onmouseover="grabJumpToContent(this);" ') + ('onbeforeactivate' in document ? 'onbeforeactivate' : 'onfocus') + '="grabJumpToContent(this);"><option value="' + (this.opt.bNoRedirect !== undefined && this.opt.bNoRedirect === true ? this.opt.iCurBoardId : '?board=' + this.opt.iCurBoardId + '.0') + '">' + sChildLevelPrefix + this.opt.sCurBoardName.removeEntities() + '</option></select>&nbsp;' + (this.opt.sGoButtonLabel !== undefined ? '<input type="button" class="button_submit" value="' + this.opt.sGoButtonLabel + '" onclick="window.location.href = \'' + elk_prepareScriptUrl(elk_scripturl) + 'board=' + this.opt.iCurBoardId + '.0\';" />' : ''));
	this.dropdownList = document.getElementById(this.opt.sContainerId + '_select');
};
]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/theme.js">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 * This file contains javascript associated with the current theme
 */]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 * This file contains javascript associated with the current theme
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	});

	// Tooltips
	$('.preview').SiteTooltip({hoverIntent: {sensitivity: 10, interval: 750, timeout: 50}});

	// Find all nested linked images and turn off the border
	$('a.bbc_link img.bbc_img').parent().css('border', '0');]]></search>
			<add><![CDATA[	});

	// Tooltips
	if ((!is_mobile && !is_touch) || use_click_menu)
		$('.preview').SiteTooltip({hoverIntent: {sensitivity: 10, interval: 750, timeout: 50}});

	// Find all nested linked images and turn off the border
	$('a.bbc_link img.bbc_img').parent().css('border', '0');]]></add>
		</operation>
	</file>
</modification>