<?xml version="1.0"?>
<!DOCTYPE modification SYSTEM "http://www.elkarte.net/site/modification">
<modification xmlns="http://www.elkarte.net/site/modification" xmlns:elk="http://www.elkarte.net/">

	<id>Elkarte Contributors:ElkArte_105_patch</id>
	<version>1.0</version>
	<file name="BOARDDIR/SSI.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[define('ELK', 'SSI');

// Shortcut for the browser cache stale
define('CACHE_STALE', '?104');

// We're going to want a few globals... these are all set later.
global $time_start, $maintenance, $msubject, $mmessage, $mbname, $language;]]></search>
			<add><![CDATA[define('ELK', 'SSI');

// Shortcut for the browser cache stale
define('CACHE_STALE', '?105');

// We're going to want a few globals... these are all set later.
global $time_start, $maintenance, $msubject, $mmessage, $mbname, $language;]]></add>
		</operation>
	</file>
	<file name="BOARDDIR/index.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */

$forum_version = 'ElkArte 1.0.4';
define('FORUM_VERSION', $forum_version);

// First things first, but not necessarily in that order.
define('ELK', 1);

// Shortcut for the browser cache stale
define('CACHE_STALE', '?104');

if (function_exists('set_magic_quotes_runtime'))
	@set_magic_quotes_runtime(0);]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */

$forum_version = 'ElkArte 1.0.5';
define('FORUM_VERSION', $forum_version);

// First things first, but not necessarily in that order.
define('ELK', 1);

// Shortcut for the browser cache stale
define('CACHE_STALE', '?105');

if (function_exists('set_magic_quotes_runtime'))
	@set_magic_quotes_runtime(0);]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/Load.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Assume they are not a moderator.
	$user_info['is_mod'] = false;
	$context['user']['is_mod'] = &$user_info['is_mod'];

	// Start the linktree off empty..
	$context['linktree'] = array();]]></search>
			<add><![CDATA[	// Assume they are not a moderator.
	$user_info['is_mod'] = false;
	$context['user']['is_mod'] = &$user_info['is_mod'];
	// @since 1.0.5 - is_mod takes into account only local (board) moderators,
	// and not global moderators, is_moderator is meant to take into account both.
	$user_info['is_moderator'] = false;
	$context['user']['is_moderator'] = &$user_info['is_moderator'];

	// Start the linktree off empty..
	$context['linktree'] = array();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		// Now check if the user is a moderator.
		$user_info['is_mod'] = isset($board_info['moderators'][$user_info['id']]);

		if (count(array_intersect($user_info['groups'], $board_info['groups'])) == 0 && !$user_info['is_admin'])
			$board_info['error'] = 'access';]]></search>
			<add><![CDATA[	{
		// Now check if the user is a moderator.
		$user_info['is_mod'] = isset($board_info['moderators'][$user_info['id']]);
		$user_info['is_moderator'] = $user_info['is_mod'] || allowedTo('moderate_board');

		if (count(array_intersect($user_info['groups'], $board_info['groups'])) == 0 && !$user_info['is_admin'])
			$board_info['error'] = 'access';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Set the template contextual information.
	$context['user']['is_mod'] = &$user_info['is_mod'];
	$context['current_topic'] = $topic;
	$context['current_board'] = $board;

	// Hacker... you can't see this topic, I'll tell you that. (but moderators can!)
	if (!empty($board_info['error']) && (!empty($modSettings['deny_boards_access']) || $board_info['error'] != 'access' || !$user_info['is_mod']))
	{
		// The permissions and theme need loading, just to make sure everything goes smoothly.
		loadPermissions();]]></search>
			<add><![CDATA[
	// Set the template contextual information.
	$context['user']['is_mod'] = &$user_info['is_mod'];
	$context['user']['is_moderator'] = &$user_info['is_moderator'];
	$context['current_topic'] = $topic;
	$context['current_board'] = $board;

	// Hacker... you can't see this topic, I'll tell you that. (but moderators can!)
	if (!empty($board_info['error']) && (!empty($modSettings['deny_boards_access']) || $board_info['error'] != 'access' || !$user_info['is_moderator']))
	{
		// The permissions and theme need loading, just to make sure everything goes smoothly.
		loadPermissions();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		'is_guest' => &$user_info['is_guest'],
		'is_admin' => &$user_info['is_admin'],
		'is_mod' => &$user_info['is_mod'],
		// A user can mod if they have permission to see the mod center, or they are a board/group/approval moderator.
		'can_mod' => allowedTo('access_mod_center') || (!$user_info['is_guest'] && ($user_info['mod_cache']['gq'] != '0=1' || $user_info['mod_cache']['bq'] != '0=1' || ($modSettings['postmod_active'] && !empty($user_info['mod_cache']['ap'])))),
		'username' => $user_info['username'],]]></search>
			<add><![CDATA[		'is_guest' => &$user_info['is_guest'],
		'is_admin' => &$user_info['is_admin'],
		'is_mod' => &$user_info['is_mod'],
		'is_moderator' => &$user_info['is_moderator'],
		// A user can mod if they have permission to see the mod center, or they are a board/group/approval moderator.
		'can_mod' => allowedTo('access_mod_center') || (!$user_info['is_guest'] && ($user_info['mod_cache']['gq'] != '0=1' || $user_info['mod_cache']['bq'] != '0=1' || ($modSettings['postmod_active'] && !empty($user_info['mod_cache']['ap'])))),
		'username' => $user_info['username'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		loadLanguage('ThemeStrings', '', false);

	// Load font Awesome fonts
	loadCSSFile('font-awesome.css');

	// We allow theme variants, because we're cool.
	$context['theme_variant'] = '';]]></search>
			<add><![CDATA[		loadLanguage('ThemeStrings', '', false);

	// Load font Awesome fonts
	loadCSSFile('font-awesome.min.css');

	// We allow theme variants, because we're cool.
	$context['theme_variant'] = '';]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/QueryString.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$missing = array();

		// Looks like this is an IPv4 address
		if (strpos($part[1][1], '.') !== false)
		{
			$ipoct = explode('.', $part[1][1]);
			$p1 = dechex($ipoct[0]) . dechex($ipoct[1]);]]></search>
			<add><![CDATA[		$missing = array();

		// Looks like this is an IPv4 address
		if (isset($part[1][1]) && strpos($part[1][1], '.') !== false)
		{
			$ipoct = explode('.', $part[1][1]);
			$p1 = dechex($ipoct[0]) . dechex($ipoct[1]);]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/Security.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'is_logged' => false,
			'is_admin' => false,
			'is_mod' => false,
			'can_mod' => false,
			'language' => $user_info['language'],
		);]]></search>
			<add><![CDATA[			'is_logged' => false,
			'is_admin' => false,
			'is_mod' => false,
			'is_moderator' => false,
			'can_mod' => false,
			'language' => $user_info['language'],
		);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'is_logged' => false,
			'is_admin' => false,
			'is_mod' => false,
			'can_mod' => false,
			'language' => $user_info['language'],
		);]]></search>
			<add><![CDATA[			'is_logged' => false,
			'is_admin' => false,
			'is_mod' => false,
			'is_moderator' => false,
			'can_mod' => false,
			'language' => $user_info['language'],
		);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// We may want to give some folks a hallway pass
		if (!$user_info['is_guest'])
		{
			if (!empty($user_info['is_mod']) || !empty($user_info['is_admin']))
				$bb_run = false;
			elseif (!empty($modSettings['badbehavior_postcount_wl']) && $modSettings['badbehavior_postcount_wl'] < 0)
				$bb_run = false;]]></search>
			<add><![CDATA[		// We may want to give some folks a hallway pass
		if (!$user_info['is_guest'])
		{
			if (!empty($user_info['is_moderator']) || !empty($user_info['is_admin']))
				$bb_run = false;
			elseif (!empty($modSettings['badbehavior_postcount_wl']) && $modSettings['badbehavior_postcount_wl'] < 0)
				$bb_run = false;]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/Subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * Calculates all the possible permutations (orders) of an array.
 *
 * What it does:
 * - should not be called on arrays bigger than 10 elements as this function is memory hungry
 * - returns an array containing each permutation.
 * - e.g. (1,2,3) returns (1,2,3), (1,3,2), (2,1,3), (2,3,1), (3,1,2), and (3,2,1)
 * - really a combinations without repetition N! function so 3! = 6 and 10! = 4098 combinations
 * - Used by parse_bbc to allow bbc tag parameters to be in any order and still be
 * parsed properly
 *
 * @param mixed[] $array index array of values
 * @return mixed[] array representing all premutations of the supplied array
 */
function permute($array)
{]]></search>
			<add><![CDATA[ * Calculates all the possible permutations (orders) of an array.
 *
 * What it does:
 * - Caution: should not be called on arrays bigger than 8 elements as this function is memory hungry
 * - returns an array containing each permutation.
 * - e.g. (1,2,3) returns (1,2,3), (1,3,2), (2,1,3), (2,3,1), (3,1,2), and (3,2,1)
 * - A combinations without repetition N! function so 3! = 6 and 10! = 3,628,800 combinations
 * - Used by parse_bbc to allow bbc tag parameters to be in any order and still be
 * parsed properly
 *
 * @deprecated since 1.0.5
 * @param mixed[] $array index array of values
 * @return mixed[] array representing all permutations of the supplied array
 */
function permute($array)
{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$array[$j] = $temp;

		for ($i = 1; $p[$i] == 0; $i++)
			$p[$i] = 1;

		$orders[] = $array;
	}]]></search>
			<add><![CDATA[		$array[$j] = $temp;

		for ($i = 1; $p[$i] == 0; $i++)
			$p[$i] = $i;

		$orders[] = $array;
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}

/**
 * Parse bulletin board code in a string, as well as smileys optionally.
 *
 * What it does:]]></search>
			<add><![CDATA[}

/**
 * Lexicographic permutation function.
 *
 * This is a special type of permutation which involves the order of the set. The next
 * lexicographic permutation of '32541' is '34125'. Numerically, it is simply the smallest
 * set larger than the current one.
 *
 * The benefit of this over a recursive solution is that the whole list does NOT need
 * to be held in memory. So it's actually possible to run 30! permutations without
 * causing a memory overflow.
 *
 * Source: O'Reilly PHP Cookbook
 *
 * @param mixed[] $p
 * @param int $size
 *
 * @return mixed[] the next permutation of the passed array $p
 */
function pc_next_permutation($p, $size)
{
	// Slide down the array looking for where we're smaller than the next guy
	for ($i = $size - 1; isset($p[$i]) && $p[$i] >= $p[$i + 1]; --$i)
	{
	}

	// If this doesn't occur, we've finished our permutations
	// the array is reversed: (1, 2, 3, 4) => (4, 3, 2, 1)
	if ($i === -1)
	{
		return false;
	}

	// Slide down the array looking for a bigger number than what we found before
	for ($j = $size; $p[$j] <= $p[$i]; --$j)
	{
	}

	// Swap them
	$tmp = $p[$i];
	$p[$i] = $p[$j];
	$p[$j] = $tmp;

	// Now reverse the elements in between by swapping the ends
	for (++$i, $j = $size; $i < $j; ++$i, --$j)
	{
		$tmp = $p[$i];
		$p[$i] = $p[$j];
		$p[$j] = $tmp;
	}

	return $p;
}

/**
 * Parse bulletin board code in a string, as well as smileys optionally.
 *
 * What it does:]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			),
			array(
				'tag' => 'center',
				'before' => '<div class="centertext">',
				'after' => '</div>',
				'block_level' => true,
			),
			array(
				'tag' => 'code',]]></search>
			<add><![CDATA[			),
			array(
				'tag' => 'center',
				'before' => '<span style="display:block" class="centertext">',
				'after' => '</span>',
				'block_level' => false,
			),
			array(
				'tag' => 'code',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			array(
				'tag' => 'quote',
				'parameters' => array(
					'author' => array('match' => '(.{1,192}?)'),
				),
				'before' => '<div class="quoteheader">' . $txt['quote_from'] . ': {author}</div><blockquote>',
				'after' => '</blockquote>',]]></search>
			<add><![CDATA[			array(
				'tag' => 'quote',
				'parameters' => array(
					'author' => array('match' => '(.{1,192}?\]?)'),
				),
				'before' => '<div class="quoteheader">' . $txt['quote_from'] . ': {author}</div><blockquote>',
				'after' => '</blockquote>',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						// Switch out quotes really quick because they can cause problems.
						$data = strtr($data, array('&#039;' => '\'', '&nbsp;' => "\xC2\xA0", '&quot;' => '>">', '"' => '<"<', '&lt;' => '<lt<'));

						// Only do this if the preg survives.
						if (is_string($result = preg_replace(array(
							'~(?<=[\s>\.(;\'"]|^)((?:http|https)://[\w\-_%@:|]+(?:\.[\w\-_%]+)*(?::\d+)?(?:/[\p{L}\w\-_\~%\.@!,\?&;=#(){}+:\'\\\\]*)*[/\w\-_\~%@\?;=#}\\\\]?)~ui',
							'~(?<=[\s>\.(;\'"]|^)((?:ftp|ftps)://[\w\-_%@:|]+(?:\.[\w\-_%]+)*(?::\d+)?(?:/[\w\-_\~%\.@,\?&;=#(){}+:\'\\\\]*)*[/\w\-_\~%@\?;=#}\\\\]?)~i',
							'~(?<=[\s>(\'<]|^)(www(?:\.[\w\-_]+)+(?::\d+)?(?:/[\p{L}\w\-_\~%\.@!,\?&;=#(){}+:\'\\\\]*)*[/\w\-_\~%@\?;=#}\\\\])~ui'
						), array(
							'[url]$1[/url]',
							'[ftp]$1[/ftp]',
							'[url=http://$1]$1[/url]'
						), $data)))]]></search>
			<add><![CDATA[						// Switch out quotes really quick because they can cause problems.
						$data = strtr($data, array('&#039;' => '\'', '&nbsp;' => "\xC2\xA0", '&quot;' => '>">', '"' => '<"<', '&lt;' => '<lt<'));

						// Check for links with special () checking to allow links with ) in them
						if (is_string($result = preg_replace_callback('~(?<=([\s>\.(;\'"])|^)((?:http|https)://[\w\-_%@:|]+(?:\.[\w\-_%]+)*(?::\d+)?(?:/[\p{L}\w\-_\~%\.@!,\?&;=#(){}+:\'\\\\]*)*[/\w\-_\~%@\?;=#}\\\\]?)~ui', 'parse_autolink', $data)));
							$data = $result;

						// Only do this if the preg survives.
						if (is_string($result = preg_replace(array(
							'~(?<=[\s>\.(;\'"]|^)((?:ftp|ftps)://[\w\-_%@:|]+(?:\.[\w\-_%]+)*(?::\d+)?(?:/[\w\-_\~%\.@,\?&;=#(){}+:\'\\\\]*)*[/\w\-_\~%@\?;=#}\\\\]?)~i',
							'~(?<=[\s>(\'<]|^)(www(?:\.[\w\-_]+)+(?::\d+)?(?:/[\p{L}\w\-_\~%\.@!,\?&;=#(){}+:\'\\\\]*)*[/\w\-_\~%@\?;=#}\\\\])~ui'
						), array(
							'[ftp]$1[/ftp]',
							'[url=http://$1]$1[/url]'
						), $data)))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			{
				if (!isset($possible['disallow_before'], $possible['disallow_after']))
					continue;
				$possible['before'] = isset($possible['disallow_before']) ? $tag['disallow_before'] : $possible['before'];
				$possible['after'] = isset($possible['disallow_after']) ? $tag['disallow_after'] : $possible['after'];
			}

			$pos1 = $pos + 1 + $pt_strlen + 1;]]></search>
			<add><![CDATA[			{
				if (!isset($possible['disallow_before'], $possible['disallow_after']))
					continue;
				$possible['before'] = isset($possible['disallow_before']) ? $possible['disallow_before'] : $possible['before'];
				$possible['after'] = isset($possible['disallow_after']) ? $possible['disallow_after'] : $possible['after'];
			}

			$pos1 = $pos + 1 + $pt_strlen + 1;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			// This is long, but it makes things much easier and cleaner.
			if (!empty($possible['parameters']))
			{
				$preg = array();
				foreach ($possible['parameters'] as $p => $info)
					$preg[] = '(\s+' . $p . '=' . (empty($info['quoted']) ? '' : '&quot;') . (isset($info['match']) ? $info['match'] : '(.+?)') . (empty($info['quoted']) ? '' : '&quot;') . ')' . (empty($info['optional']) ? '' : '?');

				// Okay, this may look ugly and it is, but it's not going to happen much and it is the best way
				// of allowing any order of parameters but still parsing them right.
				$match = false;
				$orders = permute($preg);
				foreach ($orders as $p)
					if (preg_match('~^' . implode('', $p) . '\]~i', substr($message, $pos1 - 1), $matches) != 0)
					{
						$match = true;
						break;
					}

				// Didn't match our parameter list, try the next possible.
				if (!$match)]]></search>
			<add><![CDATA[			// This is long, but it makes things much easier and cleaner.
			if (!empty($possible['parameters']))
			{
				// Build a regular expression for each parameter for the current tag
				$preg = array();
				foreach ($possible['parameters'] as $p => $info)
					$preg[] = '(\s+' . $p . '=' . (empty($info['quoted']) ? '' : '&quot;') . (isset($info['match']) ? $info['match'] : '(.+?)') . (empty($info['quoted']) ? '' : '&quot;') . ')' . (empty($info['optional']) ? '' : '?');

				// Okay, this may look ugly and it is, but it's not going to happen much and it is the best way
				// of allowing any order of parameters but still parsing them right.
				$param_size = count($preg) - 1;
				$preg_keys = range(0, $param_size);
				$message_stub = substr($message, $pos1 - 1);

				// If an addon adds many parameters we can exceed max_execution time, lets prevent that
				// 5040 = 7, 40,320 = 8, (N!) etc
				$max_iterations = 5040;

				// Step, one by one, through all possible permutations of the parameters until we have a match
				do {
					$match_preg = '~^';
					foreach ($preg_keys as $key)
						$match_preg .= $preg[$key];
					$match_preg .= '\]~i';

					// Check if this combination of parameters matches the user input
					$match = preg_match($match_preg, $message_stub, $matches) !== 0;
				} while (!$match && --$max_iterations && ($preg_keys = pc_next_permutation($preg_keys, $param_size)));

				// Didn't match our parameter list, try the next possible.
				if (!$match)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}

/**
 * Parse smileys in the passed message.
 *
 * What it does:]]></search>
			<add><![CDATA[}

/**
 * Callback function for autolinking.
 * - If the look behind contains ( then it will trim any trailing ) from the link
 * this to allow (link/path) where the path contains ) characters as allowed by RFC
 *
 * @param mixed[] $matches
 * @return string
 */
function parse_autolink($matches)
{
 	if ($matches[1] === '(' && substr($matches[2], -1) === ')')
		return '[url]' . rtrim($matches[2], ')') . '[/url])';
	else
		return '[url]' . $matches[2] . '[/url]';
}

/**
 * Parse smileys in the passed message.
 *
 * What it does:]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageFeatures.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				array('select', 'karmaMode', explode('|', $txt['karma_options'])),
			'',
				// Who can do it.... and who is restricted by time limits?
				array('int', 'karmaMinPosts', 6, 'postinput' => strtolower($txt['posts'])),
				array('float', 'karmaWaitTime', 6, 'postinput' => $txt['hours']),
				array('check', 'karmaTimeRestrictAdmins'),
				array('check', 'karmaDisableSmite'),]]></search>
			<add><![CDATA[				array('select', 'karmaMode', explode('|', $txt['karma_options'])),
			'',
				// Who can do it.... and who is restricted by time limits?
				array('int', 'karmaMinPosts', 6, 'postinput' => $txt['manageposts_posts']),
				array('float', 'karmaWaitTime', 6, 'postinput' => $txt['hours']),
				array('check', 'karmaTimeRestrictAdmins'),
				array('check', 'karmaDisableSmite'),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				array('check', 'likes_enabled'),
			'',
				// Who can do it.... and who is restricted by count limits?
				array('int', 'likeMinPosts', 6, 'postinput' => strtolower($txt['posts'])),
				array('int', 'likeWaitTime', 6, 'postinput' => $txt['minutes']),
				array('int', 'likeWaitCount', 6),
				array('check', 'likeRestrictAdmins'),]]></search>
			<add><![CDATA[				array('check', 'likes_enabled'),
			'',
				// Who can do it.... and who is restricted by count limits?
				array('int', 'likeMinPosts', 6, 'postinput' => $txt['manageposts_posts']),
				array('int', 'likeWaitTime', 6, 'postinput' => $txt['minutes']),
				array('int', 'likeWaitCount', 6),
				array('check', 'likeRestrictAdmins'),]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageMembers.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			// Approve / activate this member.
			approveMembers($conditions);

			// Do we have to let the integration code know about the activations?
			if (!empty($modSettings['integrate_activate']))
			{
				foreach ($member_info as $member)
					call_integration_hook('integrate_activate', array($member['username']));
			}

			// Check for email.
			if ($_POST['todo'] == 'okemail')
			{]]></search>
			<add><![CDATA[			// Approve / activate this member.
			approveMembers($conditions);

			// Check for email.
			if ($_POST['todo'] == 'okemail')
			{]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageNews.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		);

		// Default to sub action 'editnews' or 'mailingmembers' or 'settings' depending on permissions.
		$subAction = isset($_REQUEST['sa']) && isset($subActions[$_REQUEST['sa']]) ? $_REQUEST['sa'] : (allowedTo('edit_news') ? 'editnews' : (allowedTo('send_mail') ? 'mailingmembers' : 'settings'));

		// Give integration its shot via integrate_sa_manage_news
		$action->initialize($subActions, 'settings');

		// Some bits for the tempalte
		$context['page_title'] = $txt['news_title'];]]></search>
			<add><![CDATA[		);

		// Default to sub action 'editnews' or 'mailingmembers' or 'settings' depending on permissions.
		// Give integration its shot via integrate_sa_manage_news
		$subAction = $action->initialize($subActions, (allowedTo('edit_news') ? 'editnews' : (allowedTo('send_mail') ? 'mailingmembers' : 'settings')));

		// Some bits for the tempalte
		$context['page_title'] = $txt['news_title'];]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManagePosts.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'censor_proper' => implode("\n", $censored_proper),
				'censorWholeWord' => empty($_POST['censorWholeWord']) ? '0' : '1',
				'censorIgnoreCase' => empty($_POST['censorIgnoreCase']) ? '0' : '1',
			);

			call_integration_hook('integrate_save_censors', array(&$updates));]]></search>
			<add><![CDATA[				'censor_proper' => implode("\n", $censored_proper),
				'censorWholeWord' => empty($_POST['censorWholeWord']) ? '0' : '1',
				'censorIgnoreCase' => empty($_POST['censorIgnoreCase']) ? '0' : '1',
				'allow_no_censored' => empty($_POST['allow_no_censored']) ? '0' : '1',
			);

			call_integration_hook('integrate_save_censors', array(&$updates));]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageRegistration.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			}
		}

		if (isset($_POST['agreement']))
		{
			checkSession();
			validateToken('admin-rega');]]></search>
			<add><![CDATA[			}
		}

		if (isset($_POST['save']) && isset($_POST['agreement']))
		{
			checkSession();
			validateToken('admin-rega');]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/Packages.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					'params' => array('type' => $type, 'installed' => $installed),
				),
				'base_href' => $scripturl . '?action=admin;area=packages;sa=' . $context['sub_action'] . ';type=' . $type,
				'default_sort_col' => 'id' . $type,
				'columns' => array(
					'id' . $type => array(
						'header' => array(
							'value' => $txt['package_id'],
							'style' => 'width: 40px;',
						),
						'data' => array(
							'function' => create_function('$package_md5', '
								global $context;

								if (isset($context[\'available_' . $type . '\'][$package_md5]))
									return $context[\'available_' . $type . '\'][$package_md5][\'sort_id\'];
							'),
						),
						'sort' => array(
							'default' => 'sort_id',
							'reverse' => 'sort_id'
						),
					),
					'mod_name' . $type => array(
						'header' => array(
							'value' => $txt['mod_name'],]]></search>
			<add><![CDATA[					'params' => array('type' => $type, 'installed' => $installed),
				),
				'base_href' => $scripturl . '?action=admin;area=packages;sa=' . $context['sub_action'] . ';type=' . $type,
				'default_sort_col' => 'mod_name' . $type,
				'columns' => array(
					'mod_name' . $type => array(
						'header' => array(
							'value' => $txt['mod_name'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			closedir($dir);
		}

		if (isset($_GET['type']) && $_GET['type'] == $params)
		{
			if (isset($_GET['desc']))
				krsort($packages[$params]);
			else
				ksort($packages[$params]);
		}

		return $packages[$params];
	}]]></search>
			<add><![CDATA[			closedir($dir);
		}

		if (isset($_GET['desc']))
			krsort($packages[$params]);
		else
			ksort($packages[$params]);

		return $packages[$params];
	}]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/Reports.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Get every moderator.
		$moderators = allBoardModerators();
		$boards_moderated = array();
		foreach ($moderators as $id_member => $row)
			$boards_moderated[$id_member][] = $row['id_board'];

		// Get all the possible membergroups!
		$all_groups = getBasicMembergroupData(array('all'), array(), null, false);]]></search>
			<add><![CDATA[
		// Get every moderator.
		$moderators = allBoardModerators();

		$boards_moderated = array();
		foreach ($moderators as $id_board => $rows)
			foreach ($rows as $row)
				$boards_moderated[$id_board][] = $row['real_name'];

		// Get all the possible membergroups!
		$all_groups = getBasicMembergroupData(array('all'), array(), null, false);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Fetch all the board names.
		$boards = fetchBoardsInfo('all');
		$moderators = allBoardModerators();
		$boards_moderated = array();

		foreach ($moderators as $id_member => $row)
			$boards_moderated[$id_member][] = $row['id_board'];

		// Get a list of global moderators (i.e. members with moderation powers).
		$global_mods = array_intersect(membersAllowedTo('moderate_board', 0), membersAllowedTo('approve_posts', 0), membersAllowedTo('remove_any', 0), membersAllowedTo('modify_any', 0));]]></search>
			<add><![CDATA[
		// Fetch all the board names.
		$boards = fetchBoardsInfo('all');
		$moderators = allBoardModerators(true);
		$boards_moderated = array();

		foreach ($moderators as $id_member => $rows)
			foreach ($rows as $row)
				$boards_moderated[$id_member][] = $row['id_board'];

		// Get a list of global moderators (i.e. members with moderation powers).
		$global_mods = array_intersect(membersAllowedTo('moderate_board', 0), membersAllowedTo('approve_posts', 0), membersAllowedTo('remove_any', 0), membersAllowedTo('modify_any', 0));]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				// Get the names
				foreach ($boards_moderated[$row['id_member']] as $board)
					if (isset($boards[$board]))
						$staffData['moderates'][] = $boards[$board];

				$staffData['moderates'] = implode(', ', $staffData['moderates']);
			}]]></search>
			<add><![CDATA[				// Get the names
				foreach ($boards_moderated[$row['id_member']] as $board)
					if (isset($boards[$board]))
						$staffData['moderates'][] = $boards[$board]['name'];

				$staffData['moderates'] = implode(', ', $staffData['moderates']);
			}]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Display.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			loadJavascriptFile('spellcheck.js', array('defer' => true));

		// Do we need to show the visual verification image?
		$context['require_verification'] = !$user_info['is_mod'] && !$user_info['is_admin'] && !empty($modSettings['posts_require_captcha']) && ($user_info['posts'] < $modSettings['posts_require_captcha'] || ($user_info['is_guest'] && $modSettings['posts_require_captcha'] == -1));
		if ($context['require_verification'])
		{
			require_once(SUBSDIR . '/VerificationControls.class.php');]]></search>
			<add><![CDATA[			loadJavascriptFile('spellcheck.js', array('defer' => true));

		// Do we need to show the visual verification image?
		$context['require_verification'] = !$user_info['is_moderator'] && !$user_info['is_admin'] && !empty($modSettings['posts_require_captcha']) && ($user_info['posts'] < $modSettings['posts_require_captcha'] || ($user_info['is_guest'] && $modSettings['posts_require_captcha'] == -1));
		if ($context['require_verification'])
		{
			require_once(SUBSDIR . '/VerificationControls.class.php');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				// ajax controller for likes
				loadJavascriptFile('like_posts.js', array('defer' => true));
				loadLanguage('Errors');

				// Initiate likes and the tooltips for likes]]></search>
			<add><![CDATA[
				// ajax controller for likes
				loadJavascriptFile('like_posts.js', array('defer' => true));
				addJavascriptVar(array(
					'likemsg_are_you_sure' => JavaScriptEscape($txt['likemsg_are_you_sure']),
				));
				loadLanguage('Errors');

				// Initiate likes and the tooltips for likes]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Groups.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		$current_group = isset($_REQUEST['group']) ? (int) $_REQUEST['group'] : 0;

		// No browsing of guests, membergroup 0 or moderators.
		if (in_array($current_group, array(-1, 0, 3)))
			fatal_lang_error('membergroup_does_not_exist', false);

		// These will be needed
		require_once(SUBSDIR . '/Membergroups.subs.php');
		require_once(SUBSDIR . '/Members.subs.php');

		// Load up the group details.
		$context['group'] = membergroupById($current_group, true, true);
		$context['group']['id'] = $context['group']['id_group'];
		$context['group']['name'] = $context['group']['group_name'];
]]></search>
			<add><![CDATA[
		$current_group = isset($_REQUEST['group']) ? (int) $_REQUEST['group'] : 0;

		// These will be needed
		require_once(SUBSDIR . '/Membergroups.subs.php');
		require_once(SUBSDIR . '/Members.subs.php');

		// Load up the group details.
		$context['group'] = membergroupById($current_group, true, true);

		// No browsing of guests, membergroup 0 or moderators or non-existing groups.
		if ($context['group'] === false || in_array($current_group, array(-1, 0, 3)))
			fatal_lang_error('membergroup_does_not_exist', false);

		$context['group']['id'] = $context['group']['id_group'];
		$context['group']['name'] = $context['group']['group_name'];
]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Memberlist.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			$first_offset = $_REQUEST['start'] - ($_REQUEST['start'] % $cache_step_size);
			$second_offset = ceil(($_REQUEST['start'] + $modSettings['defaultMaxMembers']) / $cache_step_size) * $cache_step_size;

			$where = 'mem.real_name BETWEEN {string:real_name_low} AND {string:real_name_high}';
			$query_parameters['real_name_low'] = $memberlist_cache['index'][$first_offset];]]></search>
			<add><![CDATA[		{
			$first_offset = $_REQUEST['start'] - ($_REQUEST['start'] % $cache_step_size);
			$second_offset = ceil(($_REQUEST['start'] + $modSettings['defaultMaxMembers']) / $cache_step_size) * $cache_step_size;
			$second_offset = min(max(array_keys($memberlist_cache['index'])), $second_offset);

			$where = 'mem.real_name BETWEEN {string:real_name_low} AND {string:real_name_high}';
			$query_parameters['real_name_low'] = $memberlist_cache['index'][$first_offset];]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/PersonalMessage.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			// Set everything up to be displayed.
			$context['preview_subject'] = Util::htmlspecialchars($_REQUEST['subject']);
			$context['preview_message'] = Util::htmlspecialchars($_REQUEST['message'], ENT_QUOTES);
			preparsecode($context['preview_message'], true);

			// Parse out the BBC if it is enabled.]]></search>
			<add><![CDATA[		{
			// Set everything up to be displayed.
			$context['preview_subject'] = Util::htmlspecialchars($_REQUEST['subject']);
			$context['preview_message'] = Util::htmlspecialchars($_REQUEST['message'], ENT_QUOTES, 'UTF-8', true);
			preparsecode($context['preview_message'], true);

			// Parse out the BBC if it is enabled.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Set everything up like before....
	$context['subject'] = isset($_REQUEST['subject']) ? Util::htmlspecialchars($_REQUEST['subject']) : '';
	$context['message'] = isset($_REQUEST['message']) ? str_replace(array('  '), array('&nbsp; '), Util::htmlspecialchars($_REQUEST['message'])) : '';
	$context['reply'] = !empty($_REQUEST['replied_to']);

	// If this is a reply to message, we need to reload the quote]]></search>
			<add><![CDATA[
	// Set everything up like before....
	$context['subject'] = isset($_REQUEST['subject']) ? Util::htmlspecialchars($_REQUEST['subject']) : '';
	$context['message'] = isset($_REQUEST['message']) ? str_replace(array('  '), array('&nbsp; '), Util::htmlspecialchars($_REQUEST['message'], ENT_QUOTES, 'UTF-8', true)) : '';
	$context['reply'] = !empty($_REQUEST['replied_to']);

	// If this is a reply to message, we need to reload the quote]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Post.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			// Set up the inputs for the form.
			$form_subject = strtr(Util::htmlspecialchars($_REQUEST['subject']), array("\r" => '', "\n" => '', "\t" => ''));
			$form_message = Util::htmlspecialchars($_REQUEST['message'], ENT_QUOTES);

			// Make sure the subject isn't too long - taking into account special characters.
			if (Util::strlen($form_subject) > 100)]]></search>
			<add><![CDATA[
			// Set up the inputs for the form.
			$form_subject = strtr(Util::htmlspecialchars($_REQUEST['subject']), array("\r" => '', "\n" => '', "\t" => ''));
			$form_message = Util::htmlspecialchars($_REQUEST['message'], ENT_QUOTES, 'UTF-8', true);

			// Make sure the subject isn't too long - taking into account special characters.
			if (Util::strlen($form_subject) > 100)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}

		// Do we need to show the visual verification image?
		$context['require_verification'] = !$user_info['is_mod'] && !$user_info['is_admin'] && !empty($modSettings['posts_require_captcha']) && ($user_info['posts'] < $modSettings['posts_require_captcha'] || ($user_info['is_guest'] && $modSettings['posts_require_captcha'] == -1));
		if ($context['require_verification'])
		{
			require_once(SUBSDIR . '/VerificationControls.class.php');]]></search>
			<add><![CDATA[		}

		// Do we need to show the visual verification image?
		$context['require_verification'] = !$user_info['is_moderator'] && !$user_info['is_admin'] && !empty($modSettings['posts_require_captcha']) && ($user_info['posts'] < $modSettings['posts_require_captcha'] || ($user_info['is_guest'] && $modSettings['posts_require_captcha'] == -1));
		if ($context['require_verification'])
		{
			require_once(SUBSDIR . '/VerificationControls.class.php');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}

		// Wrong verification code?
		if (!$user_info['is_admin'] && !$user_info['is_mod'] && !empty($modSettings['posts_require_captcha']) && ($user_info['posts'] < $modSettings['posts_require_captcha'] || ($user_info['is_guest'] && $modSettings['posts_require_captcha'] == -1)))
		{
			require_once(SUBSDIR . '/VerificationControls.class.php');
			$verificationOptions = array(]]></search>
			<add><![CDATA[		}

		// Wrong verification code?
		if (!$user_info['is_admin'] && !$user_info['is_moderator'] && !empty($modSettings['posts_require_captcha']) && ($user_info['posts'] < $modSettings['posts_require_captcha'] || ($user_info['is_guest'] && $modSettings['posts_require_captcha'] == -1)))
		{
			require_once(SUBSDIR . '/VerificationControls.class.php');
			$verificationOptions = array(]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		else
		{
			// Prepare the message a bit for some additional testing.
			$_POST['message'] = Util::htmlspecialchars($_POST['message'], ENT_QUOTES);

			// Preparse code. (Zef)
			if ($user_info['is_guest'])]]></search>
			<add><![CDATA[		else
		{
			// Prepare the message a bit for some additional testing.
			$_POST['message'] = Util::htmlspecialchars($_POST['message'], ENT_QUOTES, 'UTF-8', true);

			// Preparse code. (Zef)
			if ($user_info['is_guest'])]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			}
			else
			{
				$_POST['message'] = Util::htmlspecialchars($_POST['message'], ENT_QUOTES);

				preparsecode($_POST['message']);
]]></search>
			<add><![CDATA[			}
			else
			{
				$_POST['message'] = Util::htmlspecialchars($_POST['message'], ENT_QUOTES, 'UTF-8', true);

				preparsecode($_POST['message']);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		if (!$post_errors->hasErrors())
		{
			$msgOptions = array(
				'id' => $row['id_msg'],
				'subject' => isset($_POST['subject']) ? $_POST['subject'] : null,]]></search>
			<add><![CDATA[
		if (!$post_errors->hasErrors())
		{
			if (!empty($modSettings['mentions_enabled']))
			{
				if (!empty($_REQUEST['uid']))
				{
					$query_params = array();
					$query_params['member_ids'] = array_unique(array_map('intval', $_REQUEST['uid']));
					require_once(SUBSDIR . '/Members.subs.php');
					$mentioned_members = membersBy('member_ids', $query_params, true);
					$replacements = 0;
					$actually_mentioned = array();
					foreach ($mentioned_members as $member)
					{
						$_POST['message'] = str_replace('@' . $member['real_name'], '[member=' . $member['id_member'] . ']' . $member['real_name'] . '[/member]', $_POST['message'], $replacements);
						if ($replacements > 0)
							$actually_mentioned[] = $member['id_member'];
					}
				}

				if (!empty($actually_mentioned))
				{
					require_once(CONTROLLERDIR . '/Mentions.controller.php');
					$mentions = new Mentions_Controller();
					$mentions->setData(array(
						'id_member' => $actually_mentioned,
						'type' => 'men',
						'id_msg' => $row['id_msg'],
						'status' => $row['approved'] ? 'new' : 'unapproved',
					));
					$mentions->action_add();
				}
			}

			$msgOptions = array(
				'id' => $row['id_msg'],
				'subject' => isset($_POST['subject']) ? $_POST['subject'] : null,]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/ProfileAccount.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		if (isset($_REQUEST['save']) && isset($user_profile[$memID]['is_activated']) && $user_profile[$memID]['is_activated'] != 1)
		{
			// If we are approving the deletion of an account, we do something special ;)
			if ($user_profile[$memID]['is_activated'] == 4)
			{
				require_once(SUBSDIR . '/Members.subs.php');
				deleteMembers($context['id_member']);
				redirectexit();
			}

			// Let the integrations know of the activation.
			call_integration_hook('integrate_activate', array($user_profile[$memID]['member_name']));

			// Actually update this member now, as it guarantees the unapproved count can't get corrupted.
			updateMemberData($context['id_member'], array('is_activated' => $user_profile[$memID]['is_activated'] >= 10 ? 11 : 1, 'validation_code' => ''));

			// Log what we did?
			logAction('approve_member', array('member' => $memID), 'admin');]]></search>
			<add><![CDATA[
		if (isset($_REQUEST['save']) && isset($user_profile[$memID]['is_activated']) && $user_profile[$memID]['is_activated'] != 1)
		{
			require_once(SUBSDIR . '/Members.subs.php');

			// If we are approving the deletion of an account, we do something special ;)
			if ($user_profile[$memID]['is_activated'] == 4)
			{
				deleteMembers($context['id_member']);
				redirectexit();
			}

			// Actually update this member now, as it guarantees the unapproved count can't get corrupted.
			approveMembers(array('members' => array($context['id_member']), 'activated_status' => $user_profile[$memID]['is_activated']));

			// Log what we did?
			logAction('approve_member', array('member' => $memID), 'admin');]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Register.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}
		else
		{
			call_integration_hook('integrate_activate', array($regOptions['username']));

			setLoginCookie(60 * $modSettings['cookieTime'], $memberID, hash('sha256', Util::strtolower($regOptions['username']) . $regOptions['password'] . $regOptions['register_vars']['password_salt']));
]]></search>
			<add><![CDATA[		}
		else
		{
			call_integration_hook('integrate_activate', array($regOptions['username'], 1, 1));

			setLoginCookie(60 * $modSettings['cookieTime'], $memberID, hash('sha256', Util::strtolower($regOptions['username']) . $regOptions['password'] . $regOptions['register_vars']['password_salt']));
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}

		// Change their email address? (they probably tried a fake one first :P.)
		require_once(SUBSDIR . '/Auth.subs.php');

		if (isset($_POST['new_email'], $_REQUEST['passwd']) && validateLoginPassword($_REQUEST['passwd'], $row['passwd'], $row['member_name'], true) && ($row['is_activated'] == 0 || $row['is_activated'] == 2))
		{
			if (empty($modSettings['registration_method']) || $modSettings['registration_method'] == 3)]]></search>
			<add><![CDATA[		}

		// Change their email address? (they probably tried a fake one first :P.)
		if (isset($_POST['new_email'], $_REQUEST['passwd']) && validateLoginPassword($_REQUEST['passwd'], $row['passwd'], $row['member_name'], true) && ($row['is_activated'] == 0 || $row['is_activated'] == 2))
		{
			if (empty($modSettings['registration_method']) || $modSettings['registration_method'] == 3)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Quit if this code is not right.
		if (empty($_REQUEST['code']) || $row['validation_code'] != $_REQUEST['code'])
		{
			if (!empty($row['is_activated']))
				fatal_lang_error('already_activated', false);
			elseif ($row['validation_code'] == '')
			{]]></search>
			<add><![CDATA[		// Quit if this code is not right.
		if (empty($_REQUEST['code']) || $row['validation_code'] != $_REQUEST['code'])
		{
			if (!empty($row['is_activated']) && $row['is_activated'] == 1)
				fatal_lang_error('already_activated', false);
			elseif ($row['validation_code'] == '')
			{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			return;
		}

		// Let the integration know that they've been activated!
		call_integration_hook('integrate_activate', array($row['member_name']));

		// Validation complete - update the database!
		updateMemberData($row['id_member'], array('is_activated' => 1, 'validation_code' => ''));

		// Also do a proper member stat re-evaluation.
		updateStats('member', false);

		if (!isset($_POST['new_email']))
		{
			require_once(SUBSDIR . '/Notification.subs.php');
			sendAdminNotifications('activation', $row['id_member'], $row['member_name']);]]></search>
			<add><![CDATA[
			return;
		}
		require_once(SUBSDIR . '/Members.subs.php');

		// Validation complete - update the database!
		approveMembers(array('members' => array($row['id_member']), 'activated_status' => $row['is_activated']));

		// Also do a proper member stat re-evaluation.
		updateStats('member', false);

		if (!isset($_POST['new_email']) && empty($row['is_activated']))
		{
			require_once(SUBSDIR . '/Notification.subs.php');
			sendAdminNotifications('activation', $row['id_member'], $row['member_name']);]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Xmlpreview.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 */

if (!defined('ELK'))]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.5
 */

if (!defined('ELK'))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$member['signature'] = parse_bbc($member['signature'], true, 'sig' . $user);

			// And now what they want it to be
			$preview_signature = !empty($_POST['signature']) ? $_POST['signature'] : '';
			$validation = profileValidateSignature($preview_signature);

			// An odd check for errors to be sure
			if ($validation !== true && $validation !== false)
				$errors[] = array('value' => $txt['profile_error_' . $validation], 'attributes' => array('type' => 'error'));

			censorText($preview_signature);
			$preview_signature = parse_bbc($preview_signature, true, 'sig' . $user);
		}]]></search>
			<add><![CDATA[			$member['signature'] = parse_bbc($member['signature'], true, 'sig' . $user);

			// And now what they want it to be
			$preview_signature = !empty($_POST['signature']) ? Util::htmlspecialchars($_POST['signature']) : '';
			$validation = profileValidateSignature($preview_signature);

			// An odd check for errors to be sure
			if ($validation !== true && $validation !== false)
				$errors[] = array('value' => $txt['profile_error_' . $validation], 'attributes' => array('type' => 'error'));

			preparsecode($preview_signature);
			censorText($preview_signature);
			$preview_signature = parse_bbc($preview_signature, true, 'sig' . $user);
		}]]></add>
		</operation>
	</file>
	<file name="EXTDIR/bad-behavior/badbehavior-plugin.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		foreach ($package['request_entity'] as $h => $v)
		{
			if (is_array($v))
				$v = implode(' | ', $v);

			$request_entity .= bb2_db_escape("$h: $v\n");
		}
	}

	// Add it]]></search>
			<add><![CDATA[		foreach ($package['request_entity'] as $h => $v)
		{
			if (is_array($v))
				$v = bb2_multi_implode($v, ' | ');

			$request_entity .= bb2_db_escape("$h: $v\n");
		}

		// Only such much space in this column, so brutally cut it
		// @todo in 1.1 improve logging or drop this?
		$request_entity = substr($request_entity, 0, 254);
	}

	// Add it]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}

/**
 * Retrieve whitelist
 *
 * @todo]]></search>
			<add><![CDATA[}

/**
 * Implode that is multi dimensional array aware
 *
 * - Recursively calls itself to return a single string from a multi dimensional
 * array
 *
 * @param mixed[] $array array to recursively implode
 * @param string $glue value that glues elements together
 * @param bool $trim_all trim ALL whitespace from string
 *
 * @return string
 */
function bb2_multi_implode($array, $glue = ',', $trim_all = false)
{
	if (!is_array($array))
		$array = array($array);

	foreach ($array as $key => $value)
	{
		if (is_array($value))
			$array[$key] = bb2_multi_implode($value, $glue, $trim_all);
	}

	if ($trim_all)
		$array = array_map('trim', $array);

	return implode($glue, $array);
}

/**
 * Retrieve whitelist
 *
 * @todo]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Boards.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			);

			// Do we want access informations?
			if (!empty($boardListOptions['access']))
			{
				$return_value[$row['id_board']]['allow'] = !(empty($row['can_access']) || $row['can_access'] == 'f');
				$return_value[$row['id_board']]['deny'] = !(empty($row['cannot_access']) || $row['cannot_access'] == 'f');]]></search>
			<add><![CDATA[			);

			// Do we want access informations?
			if (isset($boardListOptions['access']) && $boardListOptions['access'] !== false)
			{
				$return_value[$row['id_board']]['allow'] = !(empty($row['can_access']) || $row['can_access'] == 'f');
				$return_value[$row['id_board']]['deny'] = !(empty($row['cannot_access']) || $row['cannot_access'] == 'f');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * Get a list of all the board moderators (every board)
 *
 * @package Boards
 * @param bool $only_id return only the id of the moderators instead of id and name (default false)
 * @return array
 */
function allBoardModerators($only_id = false)]]></search>
			<add><![CDATA[ * Get a list of all the board moderators (every board)
 *
 * @package Boards
 * @param bool $only_id return array with key of id_member of the moderator(s)
 * otherwise array with key of id_board id (default false)
 * @return array
 */
function allBoardModerators($only_id = false)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		);

	while ($row = $db->fetch_assoc($request))
		$moderators[$row['id_member']] = $row;
	$db->free_result($request);

	return $moderators;]]></search>
			<add><![CDATA[		);

	while ($row = $db->fetch_assoc($request))
	{
		if ($only_id)
			$moderators[$row['id_member']][] = $row;
		else
			$moderators[$row['id_board']][] = $row;
	}
	$db->free_result($request);

	return $moderators;]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Cache.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (empty($db_persist))
	{
		if ($cache === 'memcached')
			$memcached = memcached_connect($server[0], empty($server[1]) ? 11211 : $server[1]);
		if ($cache === 'memcache')
			$memcached = memcache_connect($server[0], empty($server[1]) ? 11211 : $server[1]);
	}
	else
	{
		if ($cache === 'memcached')
			$memcached = memcached_pconnect($server[0], empty($server[1]) ? 11211 : $server[1]);
		if ($cache === 'memcache')
			$memcached = memcache_pconnect($server[0], empty($server[1]) ? 11211 : $server[1]);
	}

	if (!$memcached && $level > 0)]]></search>
			<add><![CDATA[	if (empty($db_persist))
	{
		if ($cache === 'memcached')
			$memcached = memcached_connect($server[0], !isset($server[1]) ? 11211 : $server[1]);
		if ($cache === 'memcache')
			$memcached = memcache_connect($server[0], !isset($server[1]) ? 11211 : $server[1]);
	}
	else
	{
		if ($cache === 'memcached')
			$memcached = memcached_pconnect($server[0], !isset($server[1]) ? 11211 : $server[1]);
		if ($cache === 'memcache')
			$memcached = memcache_pconnect($server[0], !isset($server[1]) ? 11211 : $server[1]);
	}

	if (!$memcached && $level > 0)]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Drafts.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		'locked' => isset($_POST['lock']) ? (int) $_POST['lock'] : 0,
		'sticky' => isset($_POST['sticky']) && !empty($modSettings['enableStickyTopics']) ? (int) $_POST['sticky'] : 0,
		'subject' => strtr(Util::htmlspecialchars($_POST['subject']), array("\r" => '', "\n" => '', "\t" => '')),
		'body' => Util::htmlspecialchars($_POST['message'], ENT_QUOTES),
		'id_member' => $user_info['id'],
	);
]]></search>
			<add><![CDATA[		'locked' => isset($_POST['lock']) ? (int) $_POST['lock'] : 0,
		'sticky' => isset($_POST['sticky']) && !empty($modSettings['enableStickyTopics']) ? (int) $_POST['sticky'] : 0,
		'subject' => strtr(Util::htmlspecialchars($_POST['subject']), array("\r" => '', "\n" => '', "\t" => '')),
		'body' => Util::htmlspecialchars($_POST['message'], ENT_QUOTES, 'UTF-8', true),
		'id_member' => $user_info['id'],
	);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$draft = array(
		'id_pm_draft' => $id_pm_draft,
		'reply_id' => empty($_POST['replied_to']) ? 0 : (int) $_POST['replied_to'],
		'body' => Util::htmlspecialchars($_POST['message'], ENT_QUOTES),
		'subject' => strtr(Util::htmlspecialchars($_POST['subject']), array("\r" => '', "\n" => '', "\t" => '')),
		'id_member' => $user_info['id'],
	);]]></search>
			<add><![CDATA[	$draft = array(
		'id_pm_draft' => $id_pm_draft,
		'reply_id' => empty($_POST['replied_to']) ? 0 : (int) $_POST['replied_to'],
		'body' => Util::htmlspecialchars($_POST['message'], ENT_QUOTES, 'UTF-8', true),
		'subject' => strtr(Util::htmlspecialchars($_POST['subject']), array("\r" => '', "\n" => '', "\t" => '')),
		'id_member' => $user_info['id'],
	);]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Likes.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function likesPostsGiven($start, $items_per_page, $sort, $memberID)
{
	global $scripturl, $context;

	$db = database();
	$likes = array();]]></search>
			<add><![CDATA[ */
function likesPostsGiven($start, $items_per_page, $sort, $memberID)
{
	global $scripturl, $context, $modSettings;

	$db = database();
	$likes = array();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		FROM {db_prefix}message_likes AS l
			LEFT JOIN {db_prefix}messages AS m ON (m.id_msg = l.id_msg)
			LEFT JOIN {db_prefix}boards AS b ON (b.id_board = m.id_board)
		WHERE l.id_member = {int:id_member}
		ORDER BY {raw:sort}
		LIMIT {int:start}, {int:per_page}',
		array(]]></search>
			<add><![CDATA[		FROM {db_prefix}message_likes AS l
			LEFT JOIN {db_prefix}messages AS m ON (m.id_msg = l.id_msg)
			LEFT JOIN {db_prefix}boards AS b ON (b.id_board = m.id_board)
		WHERE l.id_member = {int:id_member}' . (!empty($modSettings['recycle_enable']) ? ('
			AND b.id_board != ' . $modSettings['recycle_board']) : '') . '
		ORDER BY {raw:sort}
		LIMIT {int:start}, {int:per_page}',
		array(]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function likesPostsReceived($start, $items_per_page, $sort, $memberID)
{
	global $scripturl;

	$db = database();
	$likes = array();]]></search>
			<add><![CDATA[ */
function likesPostsReceived($start, $items_per_page, $sort, $memberID)
{
	global $scripturl, $modSettings;

	$db = database();
	$likes = array();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		FROM {db_prefix}message_likes AS l
			LEFT JOIN {db_prefix}messages AS m ON (m.id_msg = l.id_msg)
			LEFT JOIN {db_prefix}boards AS b ON (b.id_board = m.id_board)
		WHERE l.id_poster = {int:id_member}
		GROUP BY (l.id_msg)
		ORDER BY {raw:sort}
		LIMIT {int:start}, {int:per_page}',]]></search>
			<add><![CDATA[		FROM {db_prefix}message_likes AS l
			LEFT JOIN {db_prefix}messages AS m ON (m.id_msg = l.id_msg)
			LEFT JOIN {db_prefix}boards AS b ON (b.id_board = m.id_board)
		WHERE l.id_poster = {int:id_member}' . (!empty($modSettings['recycle_enable']) ? ('
			AND b.id_board != ' . $modSettings['recycle_board']) : '') . '
		GROUP BY (l.id_msg)
		ORDER BY {raw:sort}
		LIMIT {int:start}, {int:per_page}',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	return (int) $total;
}]]></search>
			<add><![CDATA[
	return (int) $total;
}

/**
 * Utility function to decrease member like counts when a message is removed
 *
 * When a message is removed, we need update the like counts for those who liked the message
 * as well as those who posted the message
 *  - Members who liked the message have likes given decreased
 *  - The member who posted has the likes received decreased by the number of likers
 * for that message.
 *
 * @param int[]|int $messages
 */
function decreaseLikeCounts($messages)
{
	$db = database();

	// Start off with no changes
	$update_given = array();
	$update_received = array();

	// Only a single message
	if (is_numeric($messages))
		$messages = array($messages);

	// Load the members who liked and who posted for this group of messages
	$request = $db->query('', '
		SELECT
			id_member, id_poster
		FROM {db_prefix}message_likes
		WHERE id_msg IN ({array_int:messages})',
		array(
			'messages' => $messages,
		)
	);
	$posters = array();
	$likers = array();
	while ($row = $db->fetch_assoc($request))
	{
		// Track how many likes each member gave and how many were received
		$posters[$row['id_poster']] = isset($posters[$row['id_poster']]) ? $posters[$row['id_poster']]++ : 1;
		$likers[$row['id_member']] = isset($likers[$row['id_member']]) ? $likers[$row['id_member']]++ : 1;
	}
	$db->free_result($request);

	// No one?
	if (empty($posters) && empty($likers))
		return;

	// Re-count the "likes given" totals for the likers
	if (!empty($likers))
	{
 		$request = $db->query('', '
			SELECT
				COUNT(id_msg) AS likes, id_member
			FROM {db_prefix}message_likes
			WHERE id_member IN ({array_int:members})
			GROUP BY id_member',
			array(
				'members' => array_keys($likers),
			)
		);
		// All who liked these messages have their "likes given" reduced
		while ($row = $db->fetch_assoc($request))
			$update_given[$row['id_member']] = $row['likes'] - $likers[$row['id_member']];
		$db->free_result($request);
	}

	// Count the "likes received" totals for the message posters
	if (!empty($posters))
	{
		$request = $db->query('', '
			SELECT
				COUNT(id_msg) AS likes, id_poster
			FROM {db_prefix}message_likes
			WHERE id_poster IN ({array_int:members})
			GROUP BY id_poster',
			array(
				'members' => array_keys($posters),
			)
		);
		// The message posters have their "likes received" reduced
		while ($row = $db->fetch_assoc($request))
			$update_received[$row['id_poster']] = $row['likes'] - $posters[$row['id_poster']];
		$db->free_result($request);
	}

	// Update the totals for these members
	foreach ($update_given as $id_member => $total)
		updateMemberData($id_member, array('likes_given' => (int) $total));

	foreach ($update_received as $id_member => $total)
		updateMemberData($id_member, array('likes_received' => (int) $total));
}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Members.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		WHERE {raw:real_name} LIKE {string:search}' . (!empty($buddies) ? '
			AND id_member IN ({array_int:buddy_list})' : '') . '
			AND is_activated IN ({array_int:activation_status})
		LIMIT {int:limit}',
		array(
			'real_name' => defined('DB_CASE_SENSITIVE') ? 'LOWER(real_name)' : 'real_name',
			'buddy_list' => $buddies,
			'search' => Util::strtolower($search),
			'activation_status' => array(1, 12),
			'limit' => Util::strlen($search) <= 2 ? 100 : 800,
		)
	);
	$xml_data = array(]]></search>
			<add><![CDATA[		WHERE {raw:real_name} LIKE {string:search}' . (!empty($buddies) ? '
			AND id_member IN ({array_int:buddy_list})' : '') . '
			AND is_activated IN ({array_int:activation_status})
		ORDER BY LENGTH(real_name), real_name
		LIMIT {int:limit}',
		array(
			'real_name' => defined('DB_CASE_SENSITIVE') ? 'LOWER(real_name)' : 'real_name',
			'buddy_list' => $buddies,
			'search' => Util::strtolower($search),
			'activation_status' => array(1, 12),
			'limit' => Util::strlen($search) <= 2 ? 100 : 200,
		)
	);
	$xml_data = array(]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	);

	// @todo maybe an hook here?

	$query_cond = array();
	foreach ($conditions as $key => $dummy)
		if (isset($available_conditions[$key]))
			$query_cond[] = $available_conditions[$key];

	$conditions['is_activated'] = 1;
	$conditions['blank_string'] = '';

	// Approve/activate this member.]]></search>
			<add><![CDATA[	);

	// @todo maybe an hook here?
	$query_cond = array();
	$query = false;
	foreach ($conditions as $key => $dummy)
	{
		if (isset($available_conditions[$key]))
		{
			if ($key === 'time_before')
				$query = true;
			$query_cond[] = $available_conditions[$key];
		}
	}

	if ($query)
	{
		$data = retrieveMemberData($conditions);
		$members_id = $data['members'];
	}
	else
	{
		$members_id = $conditions['members'];
	}

	$conditions['is_activated'] = $conditions['activated_status'] >= 10 ? 11 : 1;
	$conditions['blank_string'] = '';

	// Approve/activate this member.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		WHERE is_activated = {int:activated_status}' . implode('', $query_cond),
		$conditions
	);
}

/**]]></search>
			<add><![CDATA[		WHERE is_activated = {int:activated_status}' . implode('', $query_cond),
		$conditions
	);

	// Let the integration know that they've been activated!
	foreach ($members_id as $member_id)
		call_integration_hook('integrate_activate', array($member_id, $conditions['activated_status'], $conditions['is_activated']));

	return $conditions['is_activated'];
}

/**]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Mentions.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		WHERE id_member IN ({array_int:members_to})
			AND mention_type = {string:type}
			AND id_member_from = {int:member_from}
			AND id_msg = {int:msg}',
		array(
			'members_to' => $members_to,
			'type' => $type,
			'member_from' => $member_from,
			'msg' => $msg,
		)
	);
	$existing = array();]]></search>
			<add><![CDATA[		WHERE id_member IN ({array_int:members_to})
			AND mention_type = {string:type}
			AND id_member_from = {int:member_from}
			AND id_msg = {int:msg}
			AND log_time = {int:log_time}',
		array(
			'members_to' => $members_to,
			'type' => $type,
			'member_from' => $member_from,
			'msg' => $msg,
			'log_time' => $time === null ? time() : $time,
		)
	);
	$existing = array();]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Messages.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Only remove posts if they're not recycled.
	if (!$recycle)
	{
		// Remove the likes!
		$db->query('', '
			DELETE FROM {db_prefix}message_likes]]></search>
			<add><![CDATA[	// Only remove posts if they're not recycled.
	if (!$recycle)
	{
		// Update the like counts
		require_once(SUBSDIR . '/Likes.subs.php');
		decreaseLikeCounts($message);

		// Remove the likes!
		$db->query('', '
			DELETE FROM {db_prefix}message_likes]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/PersonalMessage.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$user_info['name'] = $from['name'];

	// This is the one that will go in their inbox.
	$htmlmessage = Util::htmlspecialchars($message, ENT_QUOTES);
	preparsecode($htmlmessage);
	$htmlsubject = strtr(Util::htmlspecialchars($subject), array("\r" => '', "\n" => '', "\t" => ''));
	if (Util::strlen($htmlsubject) > 100)]]></search>
			<add><![CDATA[		$user_info['name'] = $from['name'];

	// This is the one that will go in their inbox.
	$htmlmessage = Util::htmlspecialchars($message, ENT_QUOTES, 'UTF-8', true);
	preparsecode($htmlmessage);
	$htmlsubject = strtr(Util::htmlspecialchars($subject), array("\r" => '', "\n" => '', "\t" => ''));
	if (Util::strlen($htmlsubject) > 100)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Find any unread PM's this member has under these head pm id's
	$request = $db->query('', '
		SELECT
			MAX(pm.id_pm) AS id_pm, pm.id_member_from, pm.deleted_by_sender, pm.id_pm_head,
			pmr.id_member, pmr.deleted, pmr.is_read
		FROM {db_prefix}personal_messages AS pm
			INNER JOIN {db_prefix}pm_recipients AS pmr ON (pmr.id_pm = pm.id_pm)
		WHERE pm.id_pm_head IN ({array_int:id_pm_head})]]></search>
			<add><![CDATA[	// Find any unread PM's this member has under these head pm id's
	$request = $db->query('', '
		SELECT
			MAX(pm.id_pm) AS id_pm, pm.id_pm_head
		FROM {db_prefix}personal_messages AS pm
			INNER JOIN {db_prefix}pm_recipients AS pmr ON (pmr.id_pm = pm.id_pm)
		WHERE pm.id_pm_head IN ({array_int:id_pm_head})]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Post.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'~\[_(li|/li|td|tr|/tr)_\]~' => '[$1]',
				// Images with no real url.
				'~\[img\]https?://.{0,7}\[/img\]~' => '',
				// Font tags with multiple fonts (copy&paste in the WYSIWYG by some browsers).
				'~\[font=\\\'?(.*?)\\\'?(?=\,[ \'\"A-Za-z]*\]).*?\](.*?(?:\[/font\]))~s'  => '[font=$1]$2'
			);

			// Fix up some use of tables without [tr]s, etc. (it has to be done more than once to catch it all.)]]></search>
			<add><![CDATA[				'~\[_(li|/li|td|tr|/tr)_\]~' => '[$1]',
				// Images with no real url.
				'~\[img\]https?://.{0,7}\[/img\]~' => '',
			);

			// Fix up some use of tables without [tr]s, etc. (it has to be done more than once to catch it all.)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			// Fix color tags of many forms so they parse properly
			$parts[$i] = preg_replace('~\[color=(?:#[\da-fA-F]{3}|#[\da-fA-F]{6}|[A-Za-z]{1,20}|rgb\(\d{1,3}, ?\d{1,3}, ?\d{1,3}\))\]\s*\[/color\]~', '', $parts[$i]);
		}

		call_integration_hook('integrate_preparse_code', array(&$parts[$i], $i, $previewing));]]></search>
			<add><![CDATA[
			// Fix color tags of many forms so they parse properly
			$parts[$i] = preg_replace('~\[color=(?:#[\da-fA-F]{3}|#[\da-fA-F]{6}|[A-Za-z]{1,20}|rgb\(\d{1,3}, ?\d{1,3}, ?\d{1,3}\))\]\s*\[/color\]~', '', $parts[$i]);

			// Font tags with multiple fonts (copy&paste in the WYSIWYG by some browsers).
			$parts[$i] = preg_replace_callback('~\[font=([^\]]*)\](.*?(?:\[/font\]))~s', 'preparsecode_font_callback', $parts[$i]);
		}

		call_integration_hook('integrate_preparse_code', array(&$parts[$i], $i, $previewing));]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Define the allowable tags after a give tag
	$table_order = array(
		'table' => 'td',
		'table' => 'th',
		'tr' => 'table',
		'td' => 'tr',
		'th' => 'tr',
	);

	// Find all closing tags (/table /tr /td etc)]]></search>
			<add><![CDATA[
	// Define the allowable tags after a give tag
	$table_order = array(
		'table' => array('tr'),
		'tr' => array('td', 'th'),
		'td' => array('table'),
		'th' => array(''),
	);

	// Find all closing tags (/table /tr /td etc)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if ($matches[1] != '/')
		{
			// If the previous table tag isn't correct simply remove it.
			if ((!empty($table_array) && $table_array[0] != $table_order[$matches[2]]) || (empty($table_array) && $matches[2] != 'table'))
				$remove_tag = true;
			// Record this was the last tag.
			else]]></search>
			<add><![CDATA[		if ($matches[1] != '/')
		{
			// If the previous table tag isn't correct simply remove it.
			if ((!empty($table_array) && !in_array($matches[2], $table_order[$table_array[0]])) || (empty($table_array) && $matches[2] != 'table'))
				$remove_tag = true;
			// Record this was the last tag.
			else]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}

/**
 * Ensure tags inside of nobbc do not get parsed by converting the markers to html entities
 *
 * @package Posts]]></search>
			<add><![CDATA[}

/**
 * Use only the primary (first) font face when multiple are supplied
 *
 * @package Posts
 * @param string[] $matches
 */
function preparsecode_font_callback($matches)
{
	$fonts = explode(',', $matches[1]);
	$font = trim(un_htmlspecialchars($fonts[0]), ' "\'');

	return '[font=' . $font . ']' . $matches[2];
}

/**
 * Ensure tags inside of nobbc do not get parsed by converting the markers to html entities
 *
 * @package Posts]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Profile.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'options' => array(
				$txt['receive_from_everyone'],
				$txt['receive_from_ignore'],
				$txt['receive_from_admins'],
				$txt['receive_from_buddies'],
			),
			'subtext' => $txt['receive_from_description'],
			'value' => empty($cur_profile['receive_from']) ? 0 : $cur_profile['receive_from'],]]></search>
			<add><![CDATA[			'options' => array(
				$txt['receive_from_everyone'],
				$txt['receive_from_ignore'],
				$txt['receive_from_buddies'],
				$txt['receive_from_admins'],
			),
			'subtext' => $txt['receive_from_description'],
			'value' => empty($cur_profile['receive_from']) ? 0 : $cur_profile['receive_from'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'value' => '',
			'permission' => 'profile_identity',
			'input_validate' => create_function('&$value', '
				$value = $value != \'\' ? md5($value) : \'\';
				return true;
			'),]]></search>
			<add><![CDATA[			'value' => '',
			'permission' => 'profile_identity',
			'input_validate' => create_function('&$value', '
				global $cur_profile;

				if (empty($value))
				{
					require_once(SUBSDIR . \'/Members.subs.php\');
					$member = getBasicMemberData($cur_profile[\'id_member\'], array(\'authentication\' => true));

					// No previous answer was saved, so that\'s all good
					if (empty($member[\'secret_answer\']))
					{
						return true;
					}
					// There is a previous secret answer to the secret question, so let\'s put it back in the db...
					else
					{
						$value = $member[\'secret_answer\'];
						// We have to tell the code is an error otherwise an empty value will go into the db
						return false;
					}
				}
				$value = $value != \'\' ? md5($value) : \'\';
				return true;
			'),]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/ScheduledTask.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			// Make sure they get included in the big loop.
			$members = array_keys($all_mods);
			foreach ($all_mods as $row)
				$mods[$row['id_member']][$row['id_board']] = true;
		}

		// Come along one and all... until we reject you ;)]]></search>
			<add><![CDATA[
			// Make sure they get included in the big loop.
			$members = array_keys($all_mods);
			foreach ($all_mods as $id_member => $rows)
				foreach ($rows as $row)
					$mods[$id_member][$row['id_board']] = true;
		}

		// Come along one and all... until we reject you ;)]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Topic.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// If there are messages left in this topic
	if (!empty($messages))
	{
		// Remove all likes now that the topic is gone
		$db->query('', '
			DELETE FROM {db_prefix}message_likes]]></search>
			<add><![CDATA[	// If there are messages left in this topic
	if (!empty($messages))
	{
		// Decrease / Update the member like counts
		require_once(SUBSDIR . '/Likes.subs.php');
		decreaseLikeCounts($messages);

		// Remove all likes now that the topic is gone
		$db->query('', '
			DELETE FROM {db_prefix}message_likes]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Admin.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[							<input type="checkbox" name="censorIgnoreCase" value="1" id="censorIgnoreCase_check"', empty($modSettings['censorIgnoreCase']) ? '' : ' checked="checked"', ' class="input_check" />
						</dd>
						<dt>
							<a href="' . $scripturl . '?action=quickhelp;help=allow_no_censored" onclick="return reqOverlayDiv(this.href);" class="help"><img src="' . $settings['images_url'] . '/helptopics.png" class="icon" alt="' . $txt['help'] . '" /></a><label for="allow_no_censored">', $txt['censor_allow'], '</label></a></dt>
						</dt>
						<dd>
							<input type="checkbox" name="censorAllow" value="1" id="allow_no_censored"', empty($modSettings['allow_no_censored']) ? '' : ' checked="checked"', ' class="input_check" />
						</dd>
					</dl>
					<input type="submit" name="save_censor" value="', $txt['save'], '" class="right_submit" />]]></search>
			<add><![CDATA[							<input type="checkbox" name="censorIgnoreCase" value="1" id="censorIgnoreCase_check"', empty($modSettings['censorIgnoreCase']) ? '' : ' checked="checked"', ' class="input_check" />
						</dd>
						<dt>
							<a href="' . $scripturl . '?action=quickhelp;help=allow_no_censored" onclick="return reqOverlayDiv(this.href);" class="help"><img src="' . $settings['images_url'] . '/helptopics.png" class="icon" alt="' . $txt['help'] . '" /></a><label for="allow_no_censored">', $txt['censor_allow'], '</label></dt>
						</dt>
						<dd>
							<input type="checkbox" name="allow_no_censored" value="1" id="allow_no_censored"', empty($modSettings['allow_no_censored']) ? '' : ' checked="checked"', ' class="input_check" />
						</dd>
					</dl>
					<input type="submit" name="save_censor" value="', $txt['save'], '" class="right_submit" />]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				elseif ($config_var['type'] == 'select')
				{
					echo '
							<select name="', $config_var['name'], '" id="', $config_var['name'], '" ', $javascript, $disabled, (!empty($config_var['multiple']) ? ' multiple="multiple"' : ''), '>';

					foreach ($config_var['data'] as $option)
						echo ']]></search>
			<add><![CDATA[				elseif ($config_var['type'] == 'select')
				{
					echo '
							<select name="', $config_var['name'], '" id="', $config_var['name'], '" ', $javascript, $disabled, (!empty($config_var['multiple']) ? ' multiple="multiple" class="select_multiple"' : ''), '>';

					foreach ($config_var['data'] as $option)
						echo ']]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Display.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					sTemplateSubjectNormal: ', JavaScriptEscape('%subject%'), ',
					sTemplateTopSubject: ', JavaScriptEscape($txt['topic'] . ': %subject% &nbsp;(' . $context['num_views_text'] . ')'), ',
					sTemplateInfoNormal: ', JavaScriptEscape('<a href="' . $scripturl . '?topic=' . $context['current_topic'] . '.msg%msg_id%#msg%msg_id%" rel="nofollow">%subject%</a><span class="smalltext modified" id="modified_%msg_id%"></span>'), ($context['can_reply'] && !empty($options['display_quick_reply'])) ? ',
					sFormRemoveAccessKeys: \'postmodify\'' : '', '
				});

				aIconLists[aIconLists.length] = new IconList({]]></search>
			<add><![CDATA[					sTemplateSubjectNormal: ', JavaScriptEscape('%subject%'), ',
					sTemplateTopSubject: ', JavaScriptEscape($txt['topic'] . ': %subject% &nbsp;(' . $context['num_views_text'] . ')'), ',
					sTemplateInfoNormal: ', JavaScriptEscape('<a href="' . $scripturl . '?topic=' . $context['current_topic'] . '.msg%msg_id%#msg%msg_id%" rel="nofollow">%subject%</a><span class="smalltext modified" id="modified_%msg_id%"></span>'), ($context['can_reply'] && !empty($options['display_quick_reply'])) ? ',
					sFormRemoveAccessKeys: \'postmodify\'' : '', ',
					funcOnAfterCreate: function () {
						// Attach AtWho to the quick edit box
						add_elk_mention(\'#quick_edit_body_container textarea\');
						var i = all_elk_mentions.length - 1;
						all_elk_mentions[i].oMention = new elk_mentions(all_elk_mentions[i].oOptions);
					}
				});

				aIconLists[aIconLists.length] = new IconList({]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	theme_linktree();

	echo '
			<div id="moderationbuttons">', template_button_strip($context['mod_buttons'], 'bottom', array('id' => 'moderationbuttons_strip')), '</div>';

	// Show the jump-to box, or actually...let Javascript do it.
	echo ']]></search>
			<add><![CDATA[	theme_linktree();

	echo '
			<i class="fa fa-2x fa-bars hamburger_30" data-id="moderationbuttons"></i>
			<div id="moderationbuttons" class="hide_30 hamburger_30_target">', template_button_strip($context['mod_buttons'], 'bottom', array('id' => 'moderationbuttons_strip')), '</div>';

	// Show the jump-to box, or actually...let Javascript do it.
	echo ']]></add>
		</operation>
	</file>
	<file name="THEMEDIR/GenericBoards.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Is it a redirection board?
		elseif ($board['is_redirect'])
			echo '
							<span class="board_icon redirect_board" title="*"></span>';

		// No new posts at all! The agony!!
		else]]></search>
			<add><![CDATA[		// Is it a redirection board?
		elseif ($board['is_redirect'])
			echo '
							<span class="board_icon redirect_board" title="', sprintf($txt['redirect_board_to'], Util::htmlspecialchars($board['name'])), '"></span>';

		// No new posts at all! The agony!!
		else]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/ManageBoards.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					<input type="submit" name="cancel" value="', $txt['mboards_delete_cancel'], '" class="button_submit" />
					<input type="hidden" name="confirmation" value="1" />
					<input type="hidden" name="', $context['session_var'], '" value="', $context['session_id'], '" />
				</div>
			</div>
		</form>]]></search>
			<add><![CDATA[					<input type="submit" name="cancel" value="', $txt['mboards_delete_cancel'], '" class="button_submit" />
					<input type="hidden" name="confirmation" value="1" />
					<input type="hidden" name="', $context['session_var'], '" value="', $context['session_id'], '" />
					<input type="hidden" name="', $context['admin-be-' . $context['board']['id'] . '_token_var'], '" value="', $context['admin-be-' . $context['board']['id'] . '_token'], '" />
				</div>
			</div>
		</form>]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Memberlist.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		<h2 class="category_header">
			<span class="floatleft">', $txt['members_list'], '</span>';

	if (!isset($context['in_search']))
		echo '
				<span class="floatright letter_links">', $context['letter_links'], '</span>';
]]></search>
			<add><![CDATA[		<h2 class="category_header">
			<span class="floatleft">', $txt['members_list'], '</span>';

	if (empty($context['in_search']))
		echo '
				<span class="floatright letter_links">', $context['letter_links'], '</span>';
]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Register.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	echo '
			<div class="windowbg2" id="registration_agreement">
				<div class="content">';

	// Is there more than one language to choose from?
	if (count($context['editable_agreements']) > 1)]]></search>
			<add><![CDATA[
	echo '
			<div class="windowbg2" id="registration_agreement">
				<div class="content">
					<input type="hidden" name="agree_lang" value="', $context['current_agreement'], '" />';

	// Is there more than one language to choose from?
	if (count($context['editable_agreements']) > 1)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		echo '
					<h3 class="category_header">', $txt['language_configuration'], '</h3>
					<div class="information">
						<form action="', $scripturl, '?action=admin;area=regcenter" id="change_reg" method="post" accept-charset="UTF-8" style="display: inline;">
							<strong>', $txt['admin_agreement_select_language'], ':</strong>&nbsp;
							<select name="agree_lang" onchange="document.getElementById(\'change_reg\').submit();" tabindex="', $context['tabindex']++, '">';

		foreach ($context['editable_agreements'] as $file => $name)
			echo '
								<option value="', $file, '" ', $context['current_agreement'] == $file ? 'selected="selected"' : '', '>', $name, '</option>';

		echo '
							</select>
							<div class="submitbutton">
								<input type="hidden" name="sa" value="agreement" />
								<input type="hidden" name="', $context['session_var'], '" value="', $context['session_id'], '" />
								<input type="submit" name="change" value="', $txt['admin_agreement_select_language_change'], '" tabindex="', $context['tabindex']++, '" class="button_submit" />
							</div>
						</form>
					</div>';
	}
]]></search>
			<add><![CDATA[		echo '
					<h3 class="category_header">', $txt['language_configuration'], '</h3>
					<div class="information">
						<strong>', $txt['admin_agreement_select_language'], ':</strong>&nbsp;
						<select name="agree_lang" onchange="document.getElementById(\'admin_form_wrapper\').submit();" tabindex="', $context['tabindex']++, '">';

		foreach ($context['editable_agreements'] as $file => $name)
			echo '
							<option value="', $file, '" ', $context['current_agreement'] == $file ? 'selected="selected"' : '', '>', $name, '</option>';

		echo '
						</select>
						<div class="submitbutton">
							<input type="hidden" name="sa" value="agreement" />
							<input type="hidden" name="', $context['session_var'], '" value="', $context['session_id'], '" />
							<input type="submit" name="change" value="', $txt['admin_agreement_select_language_change'], '" tabindex="', $context['tabindex']++, '" class="button_submit" />
						</div>
					</div>';
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						<label for="checkboxAgreement"><input type="checkbox" name="checkboxAgreement" id="checkboxAgreement"', $context['checkbox_agreement'] ? ' checked="checked"' : '', ' tabindex="', $context['tabindex']++, '" value="1" class="input_check" /> ', $txt['admin_checkbox_agreement'], '.</label>
					</p>
					<div class="submitbutton" >
						<input type="submit" value="', $txt['save'], '" tabindex="', $context['tabindex']++, '" class="button_submit" />
						<input type="hidden" name="agree_lang" value="', $context['current_agreement'], '" />
						<input type="hidden" name="sa" value="agreement" />
						<input type="hidden" name="', $context['session_var'], '" value="', $context['session_id'], '" />
						<input type="hidden" name="', $context['admin-rega_token_var'], '" value="', $context['admin-rega_token'], '" />]]></search>
			<add><![CDATA[						<label for="checkboxAgreement"><input type="checkbox" name="checkboxAgreement" id="checkboxAgreement"', $context['checkbox_agreement'] ? ' checked="checked"' : '', ' tabindex="', $context['tabindex']++, '" value="1" class="input_check" /> ', $txt['admin_checkbox_agreement'], '.</label>
					</p>
					<div class="submitbutton" >
						<input type="submit" name="save" value="', $txt['save'], '" tabindex="', $context['tabindex']++, '" class="button_submit" />
						<input type="hidden" name="sa" value="agreement" />
						<input type="hidden" name="', $context['session_var'], '" value="', $context['session_id'], '" />
						<input type="hidden" name="', $context['admin-rega_token_var'], '" value="', $context['admin-rega_token'], '" />]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_besocial/index_besocial.css">
		<operation>
			<search position="replace"><![CDATA[	border-radius: 5px;
}
legend {
	background: url(../../images/selected_open.png) no-repeat scroll left center transparent;
	cursor: pointer;
	padding: 0 0 2px 20px;
	color: #333;]]></search>
			<add><![CDATA[	border-radius: 5px;
}
legend {
	background: url(../../images/selected_open.png) 0 50% no-repeat;
	cursor: pointer;
	padding: 0 0 2px 20px;
	color: #333;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	margin-left: 15px;
}
.collapsed legend {
	background: url(../../images/selected.png) no-repeat scroll left center transparent;
}

input, button, select, textarea, .editor {]]></search>
			<add><![CDATA[	margin-left: 15px;
}
.collapsed legend {
	background: url(../../images/selected.png) 0 50% no-repeat;
}

input, button, select, textarea, .editor {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}
textarea:hover, .editor:hover {
	background: #fbfbfb;
}
input:focus, textarea:focus, button:focus, select:focus, .editor:focus {
	border: 1px solid #999;]]></search>
			<add><![CDATA[}
textarea:hover, .editor:hover {
	background: #fbfbfb;
	color: #444;
}
input:focus, textarea:focus, button:focus, select:focus, .editor:focus {
	border: 1px solid #999;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	color: #555;
	text-decoration: none;
}
.listlevel1.subsections {
	top: -1px;
}
.poster .listlevel1 a.linklevel1 {]]></search>
			<add><![CDATA[	color: #555;
	text-decoration: none;
}
#main_menu .listlevel1.subsections {
	top: -1px;
}
.poster .listlevel1 a.linklevel1 {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	display: block;
	margin-top: -45px;
	padding-top: 45px;
}
.windowbg {
	background-color: #f6f6f6;]]></search>
			<add><![CDATA[	display: block;
	margin-top: -45px;
	padding-top: 45px;
	visibility: hidden;
}
.windowbg {
	background-color: #f6f6f6;]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_besocial/jquery.sceditor.elk_wiz_besocial.css">
		<operation>
			<search position="replace"><![CDATA[html, body, p, code:before, table {
	margin: 0;
	padding: 0;
	color: #111;
}
html>body>p, html>body>div {
	font: 83.33%/150% "Segoe UI", "Helvetica Neue", "Liberation Sans", "Nimbus Sans L", Arial, sans-serif;
}
ul, ol {
	margin-top: 0;]]></search>
			<add><![CDATA[html, body, p, code:before, table {
	margin: 0;
	padding: 0;
	color: #444;
}
[contenteditable="true"] {
	font: 90%/130% Helvetica, Arial, "Nimbus Sans L", sans-serif;
}
ul, ol {
	margin-top: 0;]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_light/index_light.css">
		<operation>
			<search position="replace"><![CDATA[	margin: 5px 0;
}
legend {
	background: url(../../images/selected_open.png) no-repeat scroll left center transparent;
	cursor: pointer;
	padding: 0 0 2px 20px;
	color: #333;]]></search>
			<add><![CDATA[	margin: 5px 0;
}
legend {
	background: url(../../images/selected_open.png) 0 50% no-repeat;
	cursor: pointer;
	padding: 0 0 2px 20px;
	color: #333;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	margin-left: 15px;
}
.collapsed legend {
	background: url(../../images/selected.png) no-repeat scroll left center transparent;
}

input, button, select, textarea, .editor {]]></search>
			<add><![CDATA[	margin-left: 15px;
}
.collapsed legend {
	background: url(../../images/selected.png) 0 50% no-repeat;
}

input, button, select, textarea, .editor {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}
textarea:hover, .editor:hover {
	background: #fbfbfb;
}
input:focus, textarea:focus, button:focus, select:focus, .editor:focus {
	border: 1px solid #999;]]></search>
			<add><![CDATA[}
textarea:hover, .editor:hover {
	background: #fbfbfb;
	color: #444;
}
input:focus, textarea:focus, button:focus, select:focus, .editor:focus {
	border: 1px solid #999;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	border-top: 1px solid #bbb;
	background-image: linear-gradient(to bottom, #fcfcfc 0%, #e5e5e5 100%);
	color: #555;
}
.pagelinks .navPages:hover, .pagelinks .current_page {
	border: 1px solid #ccc;
	border-top: 1px solid #afafaf;
	border-left: 1px solid #afafaf;
	background: #f0f0f0;
	box-shadow: 2px 1px 1px rgba(0,0,0,0.07) inset;
	/* @todo - Simplify. */
	color: #555;
	text-decoration: none;]]></search>
			<add><![CDATA[	border-top: 1px solid #bbb;
	background-image: linear-gradient(to bottom, #fcfcfc 0%, #e5e5e5 100%);
	color: #555;
	box-shadow: 1px 1px 2px #E5E5E5;
}
.pagelinks .navPages:hover, .pagelinks .current_page {
	border: 1px solid #ccc;
	border-top: 1px solid #afafaf;
	border-left: 1px solid #afafaf;
	background: #f0f0f0;
	box-shadow:  1px 1px 2px #E5E5E5, 2px 1px 1px rgba(0,0,0,0.07) inset;
	/* @todo - Simplify. */
	color: #555;
	text-decoration: none;]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_light/jquery.sceditor.elk_wiz_light.css">
		<operation>
			<search position="replace"><![CDATA[html, body, p, code:before, table {
	margin: 0;
	padding: 0;
	color: #111;
}
html>body>p, html>body>div {
	font: 83.33%/150% "Segoe UI", "Helvetica Neue", "Liberation Sans", "Nimbus Sans L", Arial, sans-serif;
}
ul, ol {
	margin-top: 0;]]></search>
			<add><![CDATA[html, body, p, code:before, table {
	margin: 0;
	padding: 0;
	color: #444;
}
[contenteditable="true"] {
	font: 87.5%/150% "Segoe UI", "Helvetica Neue", "Liberation Sans", "Nimbus Sans L", Arial, sans-serif;
}
ul, ol {
	margin-top: 0;]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/index.css">
		<operation>
			<search position="replace"><![CDATA[	height: auto;
	max-height: none;
}
input[type="number"] {
	padding: 0 0 0 6px;
}]]></search>
			<add><![CDATA[	height: auto;
	max-height: none;
}
.select_multiple {
	min-height: 10em;
	height: auto;
}
input[type="number"] {
	padding: 0 0 0 6px;
}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}
/* The main title. */
#forumtitle, .rightheader #forumtitle {
	float: left;
	padding: 10px 10px 6px 13px;
	font-size: 2.357em;
	line-height: 1.455em;
}
.centerheader #forumtitle {
	display: none;
}
.rightheader #forumtitle {
	float: right;
}
/* Float these items to the right. @todo - Simplify. */
#logobox, .rightheader #logobox {
	float: right;
	padding: 0.95em 12px 0 12px;
	max-width: 40%;
}
.centerheader #logobox {]]></search>
			<add><![CDATA[}
/* The main title. */
#forumtitle, .rightheader #forumtitle {
	padding: 10px 10px 6px 13px;
	font-size: 2.357em;
	line-height: 1.455em;
}
.centerheader .forumlink {
	display: none;
}
.rightheader #forumtitle .forumlink {
	float: right;
}
/* Float these items to the right. @todo - Simplify. */
#logobox, .rightheader #logobox {
	float: right;
	padding: 0 12px 0 12px;
	max-width: 40%;
}
.centerheader #logobox {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[.listlevel2, .listlevel3 {
	position: relative;
	float: none;
	padding: 1px 0;
	width: 17em;
}
/* Levels 2 and 3 drop menus: link or button. */
.linklevel2, .linklevel3 {
	position: relative;
	display: block;
	padding: 0 7px;
}
/* @todo - Note: The next declarations are for keyboard access with js disabled. */
/* Hmm. These are tricky with the new Superfish/Superclick combo. */]]></search>
			<add><![CDATA[.listlevel2, .listlevel3 {
	position: relative;
	float: none;
	padding: 0;
	width: 17em;
}
/* Levels 2 and 3 drop menus: link or button. */
.linklevel2, .linklevel3 {
	position: relative;
	display: block;
	padding: 1px 7px;
}
/* @todo - Note: The next declarations are for keyboard access with js disabled. */
/* Hmm. These are tricky with the new Superfish/Superclick combo. */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	border: none;
	white-space: nowrap;
}
.linktree:last-child {
	max-width: 25em;
}]]></search>
			<add><![CDATA[	border: none;
	white-space: nowrap;
}
.linktree:first-child a {
	height: 2em;
	padding: 0 6px;
}
.linktree:last-child {
	max-width: 25em;
}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	font-size: 0.786em;
	line-height: 2em;
}

/* The quick buttons. */
/* ------------------------------------------------------- */]]></search>
			<add><![CDATA[	font-size: 0.786em;
	line-height: 2em;
}
.fa.hamburger_30 {
	display: none;
}

/* The quick buttons. */
/* ------------------------------------------------------- */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[/* Necessary for some browsers to keep the pages all on the same line */
.linavPages {
	float: left;
}
.selectbox, .pagelinks {
	margin: 5px 0 0 0;
	font-size: 0.857em;
}
/* @todo - Styling will need a bit more thought here. */]]></search>
			<add><![CDATA[/* Necessary for some browsers to keep the pages all on the same line */
.linavPages {
	float: left;
	margin: 0px 4px 0px 0px;
}
.selectbox, .pagelinks {
	margin: 5px 5px 0px;
	font-size: 0.857em;
}
/* @todo - Styling will need a bit more thought here. */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	.forumposts .windowbg, .forumposts .windowbg2 {
		margin-bottom: 6px;
	}
	#moderationbuttons, a.linklevel1.button_strip_notify,
	a.linklevel1.button_strip_print, a.linklevel1.button_strip_send, .inline_mod_check,
	a.linklevel1.quotetonew_button, a.linklevel1.button_strip_post_poll,
	a.linklevel1.post_options, .keyinfo .post_subject, li.listlevel1.quickmod_select_all,
	#collapse_button, p.inline.membergroups {
		display: none !important;
	}]]></search>
			<add><![CDATA[	.forumposts .windowbg, .forumposts .windowbg2 {
		margin-bottom: 6px;
	}
	a.linklevel1.button_strip_notify,
	a.linklevel1.button_strip_print, a.linklevel1.button_strip_send, .inline_mod_check,
	a.linklevel1.quotetonew_button, a.linklevel1.button_strip_post_poll,
	.keyinfo .post_subject, li.listlevel1.quickmod_select_all,
	#collapse_button, p.inline.membergroups {
		display: none !important;
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		height: inherit;
		max-height: none;
	}
}]]></search>
			<add><![CDATA[		height: inherit;
		max-height: none;
	}
	.fa.hamburger_30 {
		padding-top: 0.1em;
		display: inline-block;
		vertical-align: middle;
		cursor: pointer;
	}
	.fa.hamburger_30:before {
		margin: 0.2em;
	}
	#display_jump_to {
		display: inline-block;
	}
	.hide_30.hamburger_30_target {
		left: -9999px;
		position: absolute;
	}
	.fa.hamburger_30.visible {
		display: none;
	}
	.hide_30.hamburger_30_target.visible {
		left: auto;
		position: relative;
	}
}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/rtl.css">
		<operation>
			<search position="replace"><![CDATA[}
/* The main title. */
#forumtitle, .rightheader #forumtitle {
	float: right;
	padding: 10px 13px 6px 10px;
}
.rightheader #forumtitle {
	float: left;
}
/* Float these items to the right. @todo - Simplify. */]]></search>
			<add><![CDATA[}
/* The main title. */
#forumtitle, .rightheader #forumtitle {
	padding: 10px 13px 6px 10px;
}
.rightheader #forumtitle .forumlink {
	float: left;
}
/* Float these items to the right. @todo - Simplify. */]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/index.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		</div>
		<div id="header" class="wrapper', !empty($settings['header_layout']) ? ($settings['header_layout'] == 1 ? ' centerheader' : ' rightheader') : '', '"', empty($context['minmax_preferences']['upshrink']) ? '' : ' style="display: none;" aria-hidden="true"', '>
			<h1 id="forumtitle">
				<a href="', $scripturl, '">', $context['forum_name'], '</a>
			</h1>';

	echo '
			<div id="logobox">
				<img id="logo" src="', $context['header_logo_url_html_safe'], '" alt="', $context['forum_name_html_safe'], '" title="', $context['forum_name_html_safe'], '" />', empty($settings['site_slogan']) ? '' : '
				<div id="siteslogan">' . $settings['site_slogan'] . '</div>', '
			</div>';

	// Show the menu here, according to the menu sub template.
	echo ']]></search>
			<add><![CDATA[		</div>
		<div id="header" class="wrapper', !empty($settings['header_layout']) ? ($settings['header_layout'] == 1 ? ' centerheader' : ' rightheader') : '', '"', empty($context['minmax_preferences']['upshrink']) ? '' : ' style="display: none;" aria-hidden="true"', '>
			<h1 id="forumtitle">
				<a class="forumlink" href="', $scripturl, '">', $context['forum_name'], '</a>';

	echo '
				<div id="logobox">
					<img id="logo" src="', $context['header_logo_url_html_safe'], '" alt="', $context['forum_name_html_safe'], '" title="', $context['forum_name_html_safe'], '" />', empty($settings['site_slogan']) ? '' : '
					<div id="siteslogan">' . $settings['site_slogan'] . '</div>', '
				</div>
			</h1>';

	// Show the menu here, according to the menu sub template.
	echo ']]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Each tree item has a URL and name. Some may have extra_before and extra_after.
	// Added a linktree class to make targeting dividers easy.
	foreach ($context[$default] as $tree)
	{
		echo '
					<li class="linktree">]]></search>
			<add><![CDATA[
	// Each tree item has a URL and name. Some may have extra_before and extra_after.
	// Added a linktree class to make targeting dividers easy.
	foreach ($context[$default] as $pos => $tree)
	{
		echo '
					<li class="linktree">]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			echo $tree['extra_before'];

		// Show the link, including a URL if it should have one.
		echo $settings['linktree_link'] && isset($tree['url']) ? '<a href="' . $tree['url'] . '">' . $tree['name'] . '</a>' : $tree['name'];

		// Show something after the link...?
		if (isset($tree['extra_after']))]]></search>
			<add><![CDATA[			echo $tree['extra_before'];

		// Show the link, including a URL if it should have one.
		echo $settings['linktree_link'] && isset($tree['url']) ? '<a href="' . $tree['url'] . '">' . ($pos == 0 ? '<i class="fa fa-home fa-lg"></i>' : $tree['name']) . '</a>' : $tree['name'];

		// Show something after the link...?
		if (isset($tree['extra_after']))]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Help.english.php">
		<operation>
			<search position="replace"><![CDATA[$helptxt['databaseSession_loose'] = 'Turning this on will decrease the bandwidth your forum uses, and make it so clicking back will not reload the page - the downside is that the (new) icons won\'t update, among other things. (unless you click to that page instead of going back to it.)';
$helptxt['databaseSession_lifetime'] = 'This is the number of seconds for sessions to last after they haven\'t been accessed.  If a session is not accessed for too long, it is said to have &quot;timed out&quot;.  Anything higher than 2400 is recommended.';
$helptxt['cache_enable'] = 'ElkArte performs caching at a variety of levels. The higher the level of caching enabled the more CPU time will be spent retrieving cached information. If caching is available on your machine it is recommended that you try caching at level 1 first.';
$helptxt['cache_memcached'] = 'If you are using memcached you need to provide the server details. This should be entered as a comma separated list as shown in the example below:<br /><br/>	&quot;server1,server2,server3:port,server4&quot;<br /><br />Note that if no port is specified the software will use port 11211. The system will also attempt to perform rough/random load balancing across the specified servers.';
$helptxt['cache_cachedir'] = 'This setting is only for the filesystem based cache system. It specifies the path to the cache directory.  It is recommended that you place this in /tmp/ if you are going to use this, although it will work in any directory';
$helptxt['cache_uid'] = 'Some cache systems, for example Xcache, require a user ID and password to allow ElkArte access to clear the cache.';
$helptxt['cache_password'] = 'Some cache systems, for example Xcache, require a user ID and password to allow ElkArte access to clear the cache.';]]></search>
			<add><![CDATA[$helptxt['databaseSession_loose'] = 'Turning this on will decrease the bandwidth your forum uses, and make it so clicking back will not reload the page - the downside is that the (new) icons won\'t update, among other things. (unless you click to that page instead of going back to it.)';
$helptxt['databaseSession_lifetime'] = 'This is the number of seconds for sessions to last after they haven\'t been accessed.  If a session is not accessed for too long, it is said to have &quot;timed out&quot;.  Anything higher than 2400 is recommended.';
$helptxt['cache_enable'] = 'ElkArte performs caching at a variety of levels. The higher the level of caching enabled the more CPU time will be spent retrieving cached information. If caching is available on your machine it is recommended that you try caching at level 1 first.';
$helptxt['cache_memcached'] = 'If you are using memcached you need to provide the server details. This should be entered as a comma separated list as shown in the example below:<br /><br/>	&quot;server1,server2,server3:port,server4&quot;<br /><br />Note that if no port is specified the software will use port 11211, set this to 0 when using UNIX domain sockets. The system will also attempt to perform rough/random load balancing across the specified servers.';
$helptxt['cache_cachedir'] = 'This setting is only for the filesystem based cache system. It specifies the path to the cache directory.  It is recommended that you place this in /tmp/ if you are going to use this, although it will work in any directory';
$helptxt['cache_uid'] = 'Some cache systems, for example Xcache, require a user ID and password to allow ElkArte access to clear the cache.';
$helptxt['cache_password'] = 'Some cache systems, for example Xcache, require a user ID and password to allow ElkArte access to clear the cache.';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/index.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['new_posts'] = 'New Posts';
$txt['old_posts'] = 'No New Posts';
$txt['redirect_board'] = 'Redirect Board';

$txt['sendtopic_send'] = 'Send';
$txt['report_sent'] = 'Your report has been sent successfully.';]]></search>
			<add><![CDATA[$txt['new_posts'] = 'New Posts';
$txt['old_posts'] = 'No New Posts';
$txt['redirect_board'] = 'Redirect Board';
$txt['redirect_board_to'] = 'Redirecting to %1$s';

$txt['sendtopic_send'] = 'Send';
$txt['report_sent'] = 'Your report has been sent successfully.';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$txt['liked_by'] = 'Liked by:';
$txt['liked_you'] = 'You';
$txt['liked_more'] = 'more';

$txt['unread_topics_visit'] = 'Recent Unread Topics';
$txt['unread_topics_visit_none'] = 'No unread topics found since your last visit. <a href="{unread_all_url}" class="linkbutton">Click here to try all unread topics</a>';]]></search>
			<add><![CDATA[$txt['liked_by'] = 'Liked by:';
$txt['liked_you'] = 'You';
$txt['liked_more'] = 'more';
$txt['likemsg_are_you_sure'] = 'You already liked this message, are you sure you want to remove your like?';

$txt['unread_topics_visit'] = 'Recent Unread Topics';
$txt['unread_topics_visit_none'] = 'No unread topics found since your last visit. <a href="{unread_all_url}" class="linkbutton">Click here to try all unread topics</a>';]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/elk_jquery_plugins.js">
		<operation>
			<search position="replace"><![CDATA[		if ($news.length > 1)
		{
			$.extend(settings, options);
			$news.each(function() {
				$(this).fadeOut();
			});
			$news.eq(0).fadeIn(settings.iFadeSpeed);

			setInterval(function() {]]></search>
			<add><![CDATA[		if ($news.length > 1)
		{
			$.extend(settings, options);
			$news.hide();
			$news.eq(0).fadeIn(settings.iFadeSpeed);

			setInterval(function() {]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/jquery.sceditor.elkarte.js">
		<operation>
			<search position="replace"><![CDATA[		}
	})
	.set('li', {
		breakAfter: true
	})
	.set('ul', {
		tags: {]]></search>
			<add><![CDATA[		}
	})
	.set('li', {
		breakAfter: false
	})
	.set('ul', {
		tags: {]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/like_posts.js">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 * Functions to provide ajax capability to the like / unlike button
 * Makes the appropriate call in the background and updates the button text]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.5
 *
 * Functions to provide ajax capability to the like / unlike button
 * Makes the appropriate call in the background and updates the button text]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				// Set the subAction to what they are doing
				if (check.indexOf('unlike_button') >= 0)
					subAction = 'unlikepost';
				else
					subAction = 'likepost';
]]></search>
			<add><![CDATA[
				// Set the subAction to what they are doing
				if (check.indexOf('unlike_button') >= 0)
				{
					if (!confirm(likemsg_are_you_sure))
						return;

					subAction = 'unlikepost';
				}
				else
					subAction = 'likepost';
]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/script.js">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 * This file contains javascript utility functions
 */]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 * This file contains javascript utility functions
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		};

	// Handle custom function hook before showing the new select.
	if ('funcOnAfterFill' in this.opt)
	{
		this.tmpMethod = this.opt.funcOnBeforeCollapse;
		this.tmpMethod(this);]]></search>
			<add><![CDATA[		};

	// Handle custom function hook before showing the new select.
	if ('funcOnBeforeCollapse' in this.opt)
	{
		this.tmpMethod = this.opt.funcOnBeforeCollapse;
		this.tmpMethod(this);]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/suggest.js">
		<operation>
			<search position="replace"><![CDATA[
	this.oSuggestDivHandle.style.left = aParentPos[0] + 'px';
	this.oSuggestDivHandle.style.top = (aParentPos[1] + this.oTextHandle.offsetHeight) + 'px';
	this.oSuggestDivHandle.style.width = this.oTextHandle.style.width;

	return true;
};]]></search>
			<add><![CDATA[
	this.oSuggestDivHandle.style.left = aParentPos[0] + 'px';
	this.oSuggestDivHandle.style.top = (aParentPos[1] + this.oTextHandle.offsetHeight) + 'px';
	this.oSuggestDivHandle.style.width = this.oTextHandle.clientWidth + 'px';

	return true;
};]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/theme.js">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.3
 *
 * This file contains javascript associated with the current theme
 */]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 * This file contains javascript associated with the current theme
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$('.expand_pages').expand_pages();

	// Collapsabile fieldsets, pure candy
	$('legend').click(function(){
		$(this).siblings().slideToggle("fast");
		$(this).parent().toggleClass("collapsed");
	}).each(function () {
		if ($(this).data('collapsed'))
			$(this).click();
	});]]></search>
			<add><![CDATA[	$('.expand_pages').expand_pages();

	// Collapsabile fieldsets, pure candy
	$(document).on('click', 'legend', function(){
		$(this).siblings().slideToggle("fast");
		$(this).parent().toggleClass("collapsed");
	});
	$(document).on('ready', 'legend', function () {
		if ($(this).data('collapsed'))
			$(this).click();
	});]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			}
		});
	});
});

/**]]></search>
			<add><![CDATA[			}
		});
	});
	$('.hamburger_30').click(function(e) {
		e.preventDefault();
		var id = $(this).data('id');
		$('#' + id).addClass('visible');
		$(this).addClass('visible');
	});
});

/**]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/topic.js">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 * This file contains javascript associated with the topic viewing including
 * Quick Modify, Quick Reply, In Topic Moderation, thumbnail expansion etc]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.5
 *
 * This file contains javascript associated with the topic viewing including
 * Quick Modify, Quick Reply, In Topic Moderation, thumbnail expansion etc]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Position the editor in the window
	location.hash = '#info_' + this.sCurMessageId.substr(this.sCurMessageId.lastIndexOf("_") + 1);

	return true;
};
]]></search>
			<add><![CDATA[	// Position the editor in the window
	location.hash = '#info_' + this.sCurMessageId.substr(this.sCurMessageId.lastIndexOf("_") + 1);

	// Handle custom function hook before showing the new select.
	if ('funcOnAfterCreate' in this.opt)
	{
		this.tmpMethod = this.opt.funcOnAfterCreate;
		this.tmpMethod(this);
		delete this.tmpMethod;
	}

	return true;
};
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[QuickModify.prototype.modifySave = function (sSessionId, sSessionVar)
{
	var i = 0,
		x = [];

	// We cannot save if we weren't in edit mode.
	if (!this.bInEditMode)]]></search>
			<add><![CDATA[QuickModify.prototype.modifySave = function (sSessionId, sSessionVar)
{
	var i = 0,
		x = [],
		uIds = [];

	// We cannot save if we weren't in edit mode.
	if (!this.bInEditMode)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}
	}

	x[x.length] = 'subject=' + escape(document.forms.quickModForm.subject.value.replace(/&#/g, "&#38;#").php_to8bit()).replace(/\+/g, "%2B");
	x[x.length] = 'message=' + escape(document.forms.quickModForm.message.value.replace(/&#/g, "&#38;#").php_to8bit()).replace(/\+/g, "%2B");
	x[x.length] = 'topic=' + parseInt(document.forms.quickModForm.elements.topic.value);
	x[x.length] = 'msg=' + parseInt(document.forms.quickModForm.elements.msg.value);

	// Send in the XMLhttp request and let's hope for the best.
	ajax_indicator(true);]]></search>
			<add><![CDATA[		}
	}

	var oInputs = document.forms.quickModForm.getElementsByTagName('input');
	for (i = 0; i < oInputs.length; i++)
	{
		if (oInputs[i].name == 'uid[]')
		{
			uIds.push('uid[' + i + ']=' + parseInt(oInputs[i].value));
		}
	}

	x[x.length] = 'subject=' + escape(document.forms.quickModForm.subject.value.replace(/&#/g, "&#38;#").php_to8bit()).replace(/\+/g, "%2B");
	x[x.length] = 'message=' + escape(document.forms.quickModForm.message.value.replace(/&#/g, "&#38;#").php_to8bit()).replace(/\+/g, "%2B");
	x[x.length] = 'topic=' + parseInt(document.forms.quickModForm.elements.topic.value);
	x[x.length] = 'msg=' + parseInt(document.forms.quickModForm.elements.msg.value);
	if (uIds.length > 0)
		x[x.length] = uIds.join("&");

	// Send in the XMLhttp request and let's hope for the best.
	ajax_indicator(true);]]></add>
		</operation>
	</file>
</modification>