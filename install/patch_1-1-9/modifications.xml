<?xml version="1.0"?>
<!DOCTYPE modification SYSTEM "https://www.elkarte.net/site/modification">
<modification xmlns="https://www.elkarte.net/site/modification" xmlns:elk="https://www.elkarte.net/">

	<id>Elkarte Contributors:ElkArte_119_patch</id>
	<version>1.0</version>
	
	<!-- 1.1.9 updates for SSI.php -->		
	<file name="BOARDDIR/SSI.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:    2011 Simple Machines (http://www.simplemachines.org)
 * license:        BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:    2011 Simple Machines (http://www.simplemachines.org)
 * license:        BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	require_once(SUBSDIR . '/Calendar.subs.php');

	// Find all events which are happening in the near future that the member can see.
	$date = strftime('%Y-%m-%d', forum_time(false));
	$events = getEventRange($date, $date, true, $max_events);

	$return = array();]]></search>
			<add><![CDATA[	require_once(SUBSDIR . '/Calendar.subs.php');

	// Find all events which are happening in the near future that the member can see.
	$date = Util::strftime('%Y-%m-%d', forum_time(false));
	$events = getEventRange($date, $date, true, $max_events);

	$return = array();]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for bootstrap.php -->		
	<file name="BOARDDIR/bootstrap.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.8
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$db_show_debug = false;

		// Report errors but not depreciated ones
		$ssi_error_reporting = error_reporting(E_ALL | E_STRICT & ~8192);

		// Get the things needed for ALL modes
		$this->bringUpBasics();]]></search>
			<add><![CDATA[		$db_show_debug = false;

		// Report errors but not depreciated ones
		$ssi_error_reporting = error_reporting(E_ALL & ~E_DEPRECATED);

		// Get the things needed for ALL modes
		$this->bringUpBasics();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		define('ELKBOOT', '1');

		// The software version
		define('FORUM_VERSION', 'ElkArte 1.1.8');

		// Shortcut for the browser cache stale
		define('CACHE_STALE', '?R118');
	}

	/**]]></search>
			<add><![CDATA[		define('ELKBOOT', '1');

		// The software version
		define('FORUM_VERSION', 'ElkArte 1.1.9');

		// Shortcut for the browser cache stale
		define('CACHE_STALE', '?R119');
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	private function setDebug()
	{
		global $db_show_debug, $rusage_start;

		// Show lots of debug information below the page, not for production sites
		if ($db_show_debug === true)
		{
			Debug::instance()->rusage('start', $rusage_start);
		}
	}
]]></search>
			<add><![CDATA[	 */
	private function setDebug()
	{
		global $db_show_debug, $rusage_start, $ssi_error_reporting;

		// Show lots of debug information below the page, not for production sites
		if ($db_show_debug === true)
		{
			Debug::instance()->rusage('start', $rusage_start);
			$ssi_error_reporting = error_reporting(E_ALL | E_STRICT & ~8192);
		}
	}
]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for DumpDatabase.php -->		
	<file name="SOURCEDIR/DumpDatabase.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$scripturl = '';

	// Send the proper headers to let them download this file.
	header('Content-Disposition: attachment; filename="' . $db_name . '-' . (empty($_REQUEST['struct']) ? 'data' : (empty($_REQUEST['data']) ? 'structure' : 'complete')) . '_' . strftime('%Y-%m-%d') . $extension . '"');
	header('Cache-Control: private');
	header('Connection: close');
]]></search>
			<add><![CDATA[	$scripturl = '';

	// Send the proper headers to let them download this file.
	header('Content-Disposition: attachment; filename="' . $db_name . '-' . (empty($_REQUEST['struct']) ? 'data' : (empty($_REQUEST['data']) ? 'structure' : 'complete')) . '_' . Util::strftime('%Y-%m-%d') . $extension . '"');
	header('Cache-Control: private');
	header('Connection: close');
]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Load.php -->		
	<file name="SOURCEDIR/Load.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		});
		$id_member = !empty($id_member) && strlen($password) > 0 ? (int) $id_member : 0;
	}
	elseif (empty($id_member) && isset($_SESSION['login_' . $cookiename]) && (!empty($modSettings['disableCheckUA']) || $_SESSION['USER_AGENT'] == $req->user_agent()))
	{
		// @todo Perhaps we can do some more checking on this, such as on the first octet of the IP?
		list ($id_member, $password, $login_span) = serializeToJson($_SESSION['login_' . $cookiename], function ($array_from) use ($cookiename) {]]></search>
			<add><![CDATA[		});
		$id_member = !empty($id_member) && strlen($password) > 0 ? (int) $id_member : 0;
	}
	elseif (empty($id_member) && isset($_SESSION['login_' . $cookiename]) && (!empty($modSettings['disableCheckUA']) || (!empty($_SESSION['USER_AGENT']) && $_SESSION['USER_AGENT'] == $req->user_agent())))
	{
		// @todo Perhaps we can do some more checking on this, such as on the first octet of the IP?
		list ($id_member, $password, $login_span) = serializeToJson($_SESSION['login_' . $cookiename], function ($array_from) use ($cookiename) {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$db->free_result($request);

		if (isset($cache_groups))
			$cache->put('permissions:' . $cache_groups, array($user_info['permissions'], !empty($removals) ? $removals : array()), 2);
	}

	// Get the board permissions.]]></search>
			<add><![CDATA[		$db->free_result($request);

		if (isset($cache_groups))
			$cache->put('permissions:' . $cache_groups, array($user_info['permissions'], !empty($removals) ? $removals : array()), 240);
	}

	// Get the board permissions.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		'is_mod' => &$user_info['is_mod'],
		'is_moderator' => &$user_info['is_moderator'],
		// A user can mod if they have permission to see the mod center, or they are a board/group/approval moderator.
		'can_mod' => allowedTo('access_mod_center') || (!$user_info['is_guest'] && ($user_info['mod_cache']['gq'] != '0=1' || $user_info['mod_cache']['bq'] != '0=1' || ($modSettings['postmod_active'] && !empty($user_info['mod_cache']['ap'])))),
		'username' => $user_info['username'],
		'language' => $user_info['language'],
		'email' => $user_info['email'],]]></search>
			<add><![CDATA[		'is_mod' => &$user_info['is_mod'],
		'is_moderator' => &$user_info['is_moderator'],
		// A user can mod if they have permission to see the mod center, or they are a board/group/approval moderator.
		'can_mod' => allowedTo('access_mod_center') || (!$user_info['is_guest'] && !empty($user_info['mod_cache']) && ($user_info['mod_cache']['gq'] != '0=1' || $user_info['mod_cache']['bq'] != '0=1' || ($modSettings['postmod_active'] && !empty($user_info['mod_cache']['ap'])))),
		'username' => $user_info['username'],
		'language' => $user_info['language'],
		'email' => $user_info['email'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (empty($profile))
		return array();

	$avatar_protocol = substr(strtolower($profile['avatar']), 0, 7);

	// uploaded avatar?
	if ($profile['id_attach'] > 0 && empty($profile['avatar']))]]></search>
			<add><![CDATA[	if (empty($profile))
		return array();

	$avatar_protocol = empty($profile['avatar']) ? '' : strtolower(substr($profile['avatar'], 0, 7));

	// Build the gravatar request once.
	$gravatar = '//www.gravatar.com/avatar/' .
		hash('md5', strtolower(isset($profile['email_address']) ? $profile['email_address'] : '')) .
		'?s=' . $modSettings['avatar_max_height'] .
		(!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '') .
		((!empty($modSettings['gravatar_default']) && $modSettings['gravatar_default'] !== 'none') ? ('&amp;d=' . $modSettings['gravatar_default']) : '');

	// uploaded avatar?
	if ($profile['id_attach'] > 0 && empty($profile['avatar']))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar avatarresize" src="' . $avatar_url . '" alt="" />',
			'href' => $avatar_url,
			'url' => '',
		);]]></search>
			<add><![CDATA[
		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar avatarresize" src="' . $avatar_url . '" alt="" loading="lazy" />',
			'href' => $avatar_url,
			'url' => '',
		);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar avatarresize" src="' . $profile['avatar'] . '" alt="" />',
			'href' => $profile['avatar'],
			'url' => $profile['avatar'],
		);]]></search>
			<add><![CDATA[	{
		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar avatarresize" src="' . $profile['avatar'] . '" alt="" loading="lazy" />',
			'href' => $profile['avatar'],
			'url' => $profile['avatar'],
		);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	elseif (!empty($profile['avatar']) && $profile['avatar'] === 'gravatar')
	{
		// Gravatars URL.
		$gravatar_url = '//www.gravatar.com/avatar/' . hash('md5', strtolower($profile['email_address'])) . '?s=' . $modSettings['avatar_max_height'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');

		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar avatarresize" src="' . $gravatar_url . '" alt="" />',
			'href' => $gravatar_url,
			'url' => $gravatar_url,
		);]]></search>
			<add><![CDATA[	elseif (!empty($profile['avatar']) && $profile['avatar'] === 'gravatar')
	{
		// Gravatars URL.
		$gravatar_url = $gravatar;

		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar avatarresize" src="' . $gravatar_url . '" alt="" loading="lazy" />',
			'href' => $gravatar_url,
			'url' => $gravatar_url,
		);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar avatarresize" src="' . $modSettings['avatar_url'] . '/' . $profile['avatar'] . '" alt="" />',
			'href' => $modSettings['avatar_url'] . '/' . $profile['avatar'],
			'url' => $modSettings['avatar_url'] . '/' . $profile['avatar'],
		);]]></search>
			<add><![CDATA[	{
		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar avatarresize" src="' . $modSettings['avatar_url'] . '/' . $profile['avatar'] . '" alt="" loading="lazy" />',
			'href' => $modSettings['avatar_url'] . '/' . $profile['avatar'],
			'url' => $modSettings['avatar_url'] . '/' . $profile['avatar'],
		);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			// TODO: This should be incorporated into the theme.
			$avatar = array(
				'name' => '',
				'image' => '<img class="avatar avatarresize" src="' . $settings['images_url'] . '/default_avatar.png" alt="" />',
				'href' => $settings['images_url'] . '/default_avatar.png',
				'url' => 'http://',
			);]]></search>
			<add><![CDATA[			// TODO: This should be incorporated into the theme.
			$avatar = array(
				'name' => '',
				'image' => '<img class="avatar avatarresize" src="' . $settings['images_url'] . '/default_avatar.png" alt="" loading="lazy" />',
				'href' => $settings['images_url'] . '/default_avatar.png',
				'url' => 'http://',
			);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		);

	// Make sure there's a preview for gravatars available.
	$avatar['gravatar_preview'] = '//www.gravatar.com/avatar/' . hash('md5', strtolower($profile['email_address'])) . '?s=' . $modSettings['avatar_max_height'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');

	call_integration_hook('integrate_avatar', array(&$avatar, $profile));
]]></search>
			<add><![CDATA[		);

	// Make sure there's a preview for gravatars available.
	$avatar['gravatar_preview'] = $gravatar;

	call_integration_hook('integrate_avatar', array(&$avatar, $profile));
]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Logging.php -->		
	<file name="SOURCEDIR/Logging.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$setStringUpdate = array();
	$insert_keys = array();

	$date = strftime('%Y-%m-%d', forum_time(false));
	$update_parameters = array(
		'current_date' => $date,
	);]]></search>
			<add><![CDATA[	$setStringUpdate = array();
	$insert_keys = array();

	$date = Util::strftime('%Y-%m-%d', forum_time(false));
	$update_parameters = array(
		'current_date' => $date,
	);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	foreach ($logs as $log)
	{
		if (!isset($log_types[$log['log_type']]))
			return false;

		// Do we have something to log here, after all?
		if (!is_array($log['extra']))]]></search>
			<add><![CDATA[	foreach ($logs as $log)
	{
		if (!isset($log_types[$log['log_type']]))
			continue;

		// Do we have something to log here, after all?
		if (!is_array($log['extra']))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		);
	}

	require_once(SUBSDIR . '/Logging.subs.php');

	return insertLogActions($inserts);
}]]></search>
			<add><![CDATA[		);
	}

	if (!empty($inserts))
	{
		require_once(SUBSDIR . '/Logging.subs.php');

		return insertLogActions($inserts);
	}

	return 0;
}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for QueryString.php -->		
	<file name="SOURCEDIR/QueryString.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[function cleanXml($string)
{
	// http://www.w3.org/TR/2000/REC-xml-20001006#NT-Char
	return preg_replace('~[\x00-\x08\x0B\x0C\x0E-\x19\x{FFFE}\x{FFFF}]~u', '', $string);
}

/**]]></search>
			<add><![CDATA[function cleanXml($string)
{
	// http://www.w3.org/TR/2000/REC-xml-20001006#NT-Char
	return preg_replace('~[\x00-\x08\x0B\x0C\x0E-\x1F\x{FFFE}\x{FFFF}]~u', '', $string);
}

/**]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Subs.php -->		
	<file name="SOURCEDIR/Subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * - Applies all necessary time offsets to the timestamp, unless offset_type is set.
 * - If todayMod is set and show_today was not not specified or true, an
 *   alternate format string is used to show the date with something to show it is "today" or "yesterday".
 * - Performs localization (more than just strftime would do alone.)
 *
 * @param int $log_time A unix timestamp
 * @param string|bool $show_today = true show "Today"/"Yesterday",]]></search>
			<add><![CDATA[ * - Applies all necessary time offsets to the timestamp, unless offset_type is set.
 * - If todayMod is set and show_today was not not specified or true, an
 *   alternate format string is used to show the date with something to show it is "today" or "yesterday".
 * - Performs localization (more than just Util::strftime would do alone.)
 *
 * @param int $log_time A unix timestamp
 * @param string|bool $show_today = true show "Today"/"Yesterday",]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (setlocale(LC_TIME, $txt['lang_locale']))
	{
		if (!isset($non_twelve_hour))
			$non_twelve_hour = trim(strftime('%p')) === '';
		if ($non_twelve_hour && strpos($str, '%p') !== false)
			$str = str_replace('%p', (strftime('%H', $time) < 12 ? $txt['time_am'] : $txt['time_pm']), $str);

		foreach (array('%a', '%A', '%b', '%B') as $token)
			if (strpos($str, $token) !== false)
				$str = str_replace($token, !empty($txt['lang_capitalize_dates']) ? Util::ucwords(strftime($token, $time)) : strftime($token, $time), $str);
	}
	else
	{
		// Do-it-yourself time localization.  Fun.
		foreach (array('%a' => 'days_short', '%A' => 'days', '%b' => 'months_short', '%B' => 'months') as $token => $text_label)
			if (strpos($str, $token) !== false)
				$str = str_replace($token, $txt[$text_label][(int) strftime($token === '%a' || $token === '%A' ? '%w' : '%m', $time)], $str);

		if (strpos($str, '%p') !== false)
			$str = str_replace('%p', (strftime('%H', $time) < 12 ? $txt['time_am'] : $txt['time_pm']), $str);
	}

	// Windows doesn't support %e; on some versions, strftime fails altogether if used, so let's prevent that.
	if ($support_e && strpos($str, '%e') !== false)
		$str = str_replace('%e', ltrim(strftime('%d', $time), '0'), $str);

	// Format any other characters..
	return strftime($str, $time);
}

/**]]></search>
			<add><![CDATA[	if (setlocale(LC_TIME, $txt['lang_locale']))
	{
		if (!isset($non_twelve_hour))
			$non_twelve_hour = trim(Util::strftime('%p')) === '';
		if ($non_twelve_hour && strpos($str, '%p') !== false)
			$str = str_replace('%p', (Util::strftime('%H', $time) < 12 ? $txt['time_am'] : $txt['time_pm']), $str);

		foreach (array('%a', '%A', '%b', '%B') as $token)
			if (strpos($str, $token) !== false)
				$str = str_replace($token, !empty($txt['lang_capitalize_dates']) ? Util::ucwords(Util::strftime($token, $time)) : Util::strftime($token, $time), $str);
	}
	else
	{
		// Do-it-yourself time localization.  Fun.
		foreach (array('%a' => 'days_short', '%A' => 'days', '%b' => 'months_short', '%B' => 'months') as $token => $text_label)
			if (strpos($str, $token) !== false)
				$str = str_replace($token, $txt[$text_label][(int) Util::strftime($token === '%a' || $token === '%A' ? '%w' : '%m', $time)], $str);

		if (strpos($str, '%p') !== false)
			$str = str_replace('%p', (Util::strftime('%H', $time) < 12 ? $txt['time_am'] : $txt['time_pm']), $str);
	}

	// Windows doesn't support %e; on some versions, Util::strftime fails altogether if used, so let's prevent that.
	if ($support_e && strpos($str, '%e') !== false)
		$str = str_replace('%e', ltrim(Util::strftime('%d', $time), '0'), $str);

	// Format any other characters..
	return Util::strftime($str, $time);
}

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (empty($timestamp))
		return '';

	$timestamp = forum_time(true, $timestamp);
	$time = date('Y-m-d H:i', $timestamp);
	$stdtime = standardTime($timestamp, true, true);

	// @todo maybe htmlspecialchars on the title attribute?
	return '<time title="' . (!empty($context['using_relative_time']) ? $stdtime : $txt['last_post']) . '" datetime="' . $time . '" data-timestamp="' . $timestamp . '">' . $stdtime . '</time>';
}

/**]]></search>
			<add><![CDATA[	if (empty($timestamp))
		return '';

	$forumtime = forum_time(false, $timestamp);
	$timestamp = forum_time(true, $timestamp);
	$time = date('Y-m-d H:i', $timestamp);
	$stdtime = standardTime($timestamp, true, true);

	// @todo maybe htmlspecialchars on the title attribute?
	return '<time title="' . (!empty($context['using_relative_time']) ? $stdtime : $txt['last_post']) . '" datetime="' . $time . '" data-timestamp="' . $timestamp . '" data-forumtime="' . $forumtime . '">' . $stdtime . '</time>';
}

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function un_htmlspecialchars($string)
{
	$string = htmlspecialchars_decode($string, ENT_QUOTES);
	$string = str_replace('&nbsp;', ' ', $string);
]]></search>
			<add><![CDATA[ */
function un_htmlspecialchars($string)
{
	if (empty($string))
		return $string;

	$string = htmlspecialchars_decode($string, ENT_QUOTES);
	$string = str_replace('&nbsp;', ' ', $string);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function memoryReturnBytes($val)
{
	if (is_integer($val))
		return $val;

	// Separate the number from the designator
	$val = trim($val);
	$num = intval(substr($val, 0, strlen($val) - 1));
	$last = strtolower(substr($val, -1));

	// Convert to bytes
	switch ($last)]]></search>
			<add><![CDATA[ */
function memoryReturnBytes($val)
{
	// Treat blank values as 0
	$val = is_bool($val) || empty($val) ? 0 : trim($val);

	// Separate the number from the designator
	preg_match('~(\d+)(.*)~', $val, $val);
	$num = intval($val[1]);
	$last = strtolower(substr(!empty($val[2]) ? $val[2] : '', 0, 1));

	// Convert to bytes
	switch ($last)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$t = microtime(true);

	// Try the Linux host command, perhaps?
	if ((strpos(strtolower(PHP_OS), 'win') === false || strpos(strtolower(PHP_OS), 'darwin') !== false) && mt_rand(0, 1) == 1)
	{
		if (!isset($modSettings['host_to_dis']))
			$test = @shell_exec('host -W 1 ' . @escapeshellarg($ip));
		else
			$test = @shell_exec('host ' . @escapeshellarg($ip));

		// Did host say it didn't find anything?
		if (strpos($test, 'not found') !== false)
			$host = '';
		// Invalid server option?
		elseif ((strpos($test, 'invalid option') || strpos($test, 'Invalid query name 1')) && !isset($modSettings['host_to_dis']))
			updateSettings(array('host_to_dis' => 1));
		// Maybe it found something, after all?
		elseif (preg_match('~\s([^\s]+?)\.\s~', $test, $match) == 1)
			$host = $match[1];
	}

	// This is nslookup; usually only Windows, but possibly some Unix?
	if (empty($host) && stripos(PHP_OS, 'win') !== false && strpos(strtolower(PHP_OS), 'darwin') === false && mt_rand(0, 1) == 1)
	{
		$test = @shell_exec('nslookup -timeout=1 ' . @escapeshellarg($ip));

		if (strpos($test, 'Non-existent domain') !== false)
			$host = '';
		elseif (preg_match('~Name:\s+([^\s]+)~', $test, $match) == 1)
			$host = $match[1];
	}

	// This is the last try :/.]]></search>
			<add><![CDATA[	$t = microtime(true);

	// Try the Linux host command, perhaps?
	if (function_exists('shell_exec'))
	{
		if ((stripos(PHP_OS, 'win') === false || stripos(PHP_OS, 'darwin') !== false) && mt_rand(0, 1) == 1)
		{
			if (!isset($modSettings['host_to_dis']))
			{
				$test = @shell_exec('host -W 1 ' . @escapeshellarg($ip));
			}
			else
			{
				$test = @shell_exec('host ' . @escapeshellarg($ip));
			}

			$test = isset($test) ? $test : '';

			// Did host say it didn't find anything?
			if (strpos($test, 'not found') !== false)
			{
				$host = '';
			}
			// Invalid server option?
			elseif ((strpos($test, 'invalid option') || strpos($test, 'Invalid query name 1')) && !isset($modSettings['host_to_dis']))
			{
				updateSettings(array('host_to_dis' => 1));
			}
			// Maybe it found something, after all?
			elseif (preg_match('~\s([^\s]+?)\.\s~', $test, $match) == 1)
			{
				$host = $match[1];
			}
		}

		// This is nslookup; usually only Windows, but possibly some Unix?
		if (empty($host) && stripos(PHP_OS, 'win') !== false && stripos(PHP_OS, 'darwin') === false && mt_rand(0, 1) == 1)
		{
			$test = @shell_exec('nslookup -timeout=1 ' . @escapeshellarg($ip));

			if (strpos($test, 'Non-existent domain') !== false)
			{
				$host = '';
			}
			elseif (preg_match('~Name:\s+([^\s]+)~', $test, $match) == 1)
			{
				$host = $match[1];
			}
		}
	}

	// This is the last try :/.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}

/**
 * Removes nested quotes from a text string.
 *
 * @param string $text - The body we want to remove nested quotes from
 *]]></search>
			<add><![CDATA[}

/**
 * Removes all, or those over a limit, of nested quotes from a text string.
 *
 * @param string $text - The body we want to remove nested quotes from
 *]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[{
	global $modSettings;

	// Remove any nested quotes, if necessary.
	if (!empty($modSettings['removeNestedQuotes']))
	{
		return preg_replace(array('~\n?\[quote.*?\].+?\[/quote\]\n?~is', '~^\n~', '~\[/quote\]~'), '', $text);
	}
	else
	{
		return $text;
	}
}

/**]]></search>
			<add><![CDATA[{
	global $modSettings;

	if (!isset($modSettings['removeNestedQuotes']))
	{
		return $text;
	}

	// How many levels will we allow?
	$max_depth = (int) $modSettings['removeNestedQuotes'];

	// Remove all nested quotes?
	if ($max_depth === 0)
	{
		return preg_replace(array('~\n?\[quote.*?\].+?\[/quote\]\n?~is', '~^\n~', '~\[/quote\]~'), '', $text);
	}

	// Remove just -some- of the quotes, then we need to find them all
	preg_match_all('~(\[\/?quote(?:(.*?))?\])~i', $text, $matches, PREG_OFFSET_CAPTURE);
	$depth = 0;
	$remove = array();
	$start_pos = 0;

	// Mark ones that are in excess of the limit.  $match[0] will be the found tag
	// such as [quote=some author] or [/quote], $match[1] is the starting position of that tag.
	foreach ($matches[0] as $match)
	{
		// Closing quote
		if ($match[0][1] === '/')
		{
			--$depth;

			// To many, mark it for removal
			if ($depth === $max_depth)
			{
				// This quote position in the string, note [/quote] = 8
				$end_pos = $match[1] + 8;
				$length = $end_pos - $start_pos;
				$remove[] = array($start_pos, $length);
			}

			continue;
		}

		// Another quote level inward
		++$depth;
		if ($depth === $max_depth + 1)
		{
			$start_pos = $match[1];
		}
	}

	// Time to cull the herd
	foreach (array_reverse($remove) as list($start_pos, $length))
	{
		$text = substr_replace($text, '', $start_pos, $length);
	}

	return $text;
}

/**]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ValuesContainer.php -->		
	<file name="SOURCEDIR/ValuesContainer.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 * @param mixed|mixed[] $offset
	 * @param string $value
	 */
	public function offsetSet($offset, $value)
	{
		if (is_null($offset))]]></search>
			<add><![CDATA[	 * @param mixed|mixed[] $offset
	 * @param string $value
	 */
	#[\ReturnTypeWillChange]
	public function offsetSet($offset, $value)
	{
		if (is_null($offset))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 * @param string|int $offset
	 * @return bool
	 */
	public function offsetExists($offset)
	{
		return isset($this->data[$offset]);]]></search>
			<add><![CDATA[	 * @param string|int $offset
	 * @return bool
	 */
	#[\ReturnTypeWillChange]
	public function offsetExists($offset)
	{
		return isset($this->data[$offset]);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 *
	 * @param string|int $offset
	 */
	public function offsetUnset($offset)
	{
		unset($this->data[$offset]);]]></search>
			<add><![CDATA[	 *
	 * @param string|int $offset
	 */
	#[\ReturnTypeWillChange]
	public function offsetUnset($offset)
	{
		unset($this->data[$offset]);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 * Returns the value associated to a certain offset.
	 *
	 * @param string|int $offset
	 * @return mixed|mixed[]
	 */
	public function offsetGet($offset)
	{
		return isset($this->data[$offset]) ? $this->data[$offset] : null;]]></search>
			<add><![CDATA[	 * Returns the value associated to a certain offset.
	 *
	 * @param string|int $offset
	 * @return mixed
	 */
	#[\ReturnTypeWillChange]
	public function offsetGet($offset)
	{
		return isset($this->data[$offset]) ? $this->data[$offset] : null;]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Admin.controller.php -->		
	<file name="ADMINDIR/Admin.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.6
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Clean any admin tokens as well.
		cleanTokens(false, '-admin');

		if (isset($this->_req->query->redir, $this->_req->server->HTTP_REFERER))
		{
			redirectexit($_SERVER['HTTP_REFERER']);
		}]]></search>
			<add><![CDATA[		// Clean any admin tokens as well.
		cleanTokens(false, '-admin');

		if (isset($this->_req->query->redir, $_SERVER['HTTP_REFERER']))
		{
			redirectexit($_SERVER['HTTP_REFERER']);
		}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ManageAttachments.controller.php -->		
	<file name="ADMINDIR/ManageAttachments.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				}
			}

			call_integration_hook('integrate_save_attachment_settings');

			$settingsForm->setConfigValues((array) $this->_req->post);]]></search>
			<add><![CDATA[				}
			}

			// Allow webp extension if its being enabled
			if (!empty($this->_req->post->attachment_webp_enable))
			{
				if (strpos($this->_req->post->attachmentExtensions, 'webp') === false)
				{
					$this->_req->post->attachmentExtensions .= ',webp';
				}
			}

			call_integration_hook('integrate_save_attachment_settings');

			$settingsForm->setConfigValues((array) $this->_req->post);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$txt['basedirectory_for_attachments_warning'] = $txt['basedirectory_for_attachments_current'] . $txt['basedirectory_for_attachments_warning'];

		// Perform a test to see if the GD module or ImageMagick are installed.
		$testImg = get_extension_funcs('gd') || class_exists('Imagick');

		// See if we can find if the server is set up to support the attachment limits
		$post_max_size = ini_get('post_max_size');
		$upload_max_filesize = ini_get('upload_max_filesize');
		$testPM = !empty($post_max_size) ? (memoryReturnBytes($post_max_size) >= (isset($modSettings['attachmentPostLimit']) ? $modSettings['attachmentPostLimit'] * 1024 : 0)) : true;
		$testUM = !empty($upload_max_filesize) ? (memoryReturnBytes($upload_max_filesize) >= (isset($modSettings['attachmentSizeLimit']) ? $modSettings['attachmentSizeLimit'] * 1024 : 0)) : true;
		$testImgRotate = class_exists('Imagick') || (get_extension_funcs('gd') && function_exists('exif_read_data'));

		$config_vars = array(
			array('title', 'attachment_manager_settings'),
				// Are attachments enabled?
				array('select', 'attachmentEnable', array($txt['attachmentEnable_deactivate'], $txt['attachmentEnable_enable_all'], $txt['attachmentEnable_disable_new'])),
			'',
				// Extension checks etc.
				array('check', 'attachmentRecodeLineEndings'),
			'',
				// Directory and size limits.
				array('select', 'automanage_attachments', array(0 => $txt['attachments_normal'], 1 => $txt['attachments_auto_space'], 2 => $txt['attachments_auto_years'], 3 => $txt['attachments_auto_months'], 4 => $txt['attachments_auto_16'])),]]></search>
			<add><![CDATA[		$txt['basedirectory_for_attachments_warning'] = $txt['basedirectory_for_attachments_current'] . $txt['basedirectory_for_attachments_warning'];

		// Perform a test to see if the GD module or ImageMagick are installed.
		require_once(SUBSDIR . '/Graphics.subs.php');
		$testImg = checkGD() || checkImagick();
		$testWebP = hasWebpSupport();
		$testImgRotate = checkImagick() || (checkGD() && function_exists('exif_read_data'));

		// See if we can find if the server is set up to support the attachment limits
		$post_max_size = ini_get('post_max_size');
		$upload_max_filesize = ini_get('upload_max_filesize');
		$testPM = !empty($post_max_size) ? (memoryReturnBytes($post_max_size) >= (isset($modSettings['attachmentPostLimit']) ? $modSettings['attachmentPostLimit'] * 1024 : 0)) : true;
		$testUM = !empty($upload_max_filesize) ? (memoryReturnBytes($upload_max_filesize) >= (isset($modSettings['attachmentSizeLimit']) ? $modSettings['attachmentSizeLimit'] * 1024 : 0)) : true;

		$config_vars = array(
			array('title', 'attachment_manager_settings'),
				// Are attachments enabled?
				array('select', 'attachmentEnable', array($txt['attachmentEnable_deactivate'], $txt['attachmentEnable_enable_all'], $txt['attachmentEnable_disable_new'])),
			'',
				// Directory and size limits.
				array('select', 'automanage_attachments', array(0 => $txt['attachments_normal'], 1 => $txt['attachments_auto_space'], 2 => $txt['attachments_auto_years'], 3 => $txt['attachments_auto_months'], 4 => $txt['attachments_auto_16'])),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				array('warning', empty($testUM) ? 'attachment_filesize_warning' : ''),
				array('int', 'attachmentSizeLimit', 'subtext' => $txt['zero_for_no_limit'], 6, 'postinput' => $txt['kilobyte']),
				array('int', 'attachmentNumPerPostLimit', 'subtext' => $txt['zero_for_no_limit'], 6),
				array('check', 'attachment_autorotate', 'postinput' => empty($testImgRotate) ? $txt['attachment_autorotate_na'] : ''),
			// Security Items
			array('title', 'attachment_security_settings'),
				// Extension checks etc.]]></search>
			<add><![CDATA[				array('warning', empty($testUM) ? 'attachment_filesize_warning' : ''),
				array('int', 'attachmentSizeLimit', 'subtext' => $txt['zero_for_no_limit'], 6, 'postinput' => $txt['kilobyte']),
				array('int', 'attachmentNumPerPostLimit', 'subtext' => $txt['zero_for_no_limit'], 6),
				'',
				array('check', 'attachment_webp_enable', 'disabled' => !$testWebP, 'postinput' => $testWebP ? "" : $txt['attachment_webp_enable_na']),
				array('check', 'attachment_autorotate', 'disabled' => !$testImgRotate, 'postinput' => $testImgRotate ? '' : $txt['attachment_autorotate_na']),
			// Security Items
			array('title', 'attachment_security_settings'),
				// Extension checks etc.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			array('title', 'attachment_thumbnail_settings'),
				array('check', 'attachmentShowImages'),
				array('check', 'attachmentThumbnails'),
				array('check', 'attachment_thumb_png'),
				array('check', 'attachment_thumb_memory', 'subtext' => $txt['attachment_thumb_memory_note1'], 'postinput' => $txt['attachment_thumb_memory_note2']),
				array('text', 'attachmentThumbWidth', 6),
				array('text', 'attachmentThumbHeight', 6),]]></search>
			<add><![CDATA[			array('title', 'attachment_thumbnail_settings'),
				array('check', 'attachmentShowImages'),
				array('check', 'attachmentThumbnails'),
				array('check', 'attachment_thumb_memory', 'subtext' => $txt['attachment_thumb_memory_note1'], 'postinput' => $txt['attachment_thumb_memory_note2']),
				array('text', 'attachmentThumbWidth', 6),
				array('text', 'attachmentThumbHeight', 6),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			checkSession();

			// Changing the current base directory?
			$this->current_base_dir = $this->_req->getQuery('current_base_dir', 'intval');
			if (empty($this->_req->post->new_base_dir) && !empty($this->current_base_dir))
			{
				if ($modSettings['basedirectory_for_attachments'] != $modSettings['attachmentUploadDir'][$this->current_base_dir])]]></search>
			<add><![CDATA[			checkSession();

			// Changing the current base directory?
			$this->current_base_dir = $this->_req->getPost('current_base_dir', 'intval');
			if (empty($this->_req->post->new_base_dir) && !empty($this->current_base_dir))
			{
				if ($modSettings['basedirectory_for_attachments'] != $modSettings['attachmentUploadDir'][$this->current_base_dir])]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ManageAvatars.controller.php -->		
	<file name="ADMINDIR/ManageAvatars.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						'x' => 'x',
					),
				),
			// Upload-able avatars?
			array('title', 'avatar_upload'),
				array('check', 'avatar_upload_enabled'),]]></search>
			<add><![CDATA[						'x' => 'x',
					),
				),
				array('select', 'gravatar_default', array(
					'none' => $txt['gravatar_none'],
					'identicon' => $txt['gravatar_identicon'],
					'monsterid' => $txt['gravatar_monsterid'],
					'wavatar' => $txt['gravatar_wavatar'],
					'retro' => $txt['gravatar_retro'],
					'robohash' => $txt['gravatar_robohash'])
				),
			// Upload-able avatars?
			array('title', 'avatar_upload'),
				array('check', 'avatar_upload_enabled'),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				array('warning', 'avatar_paranoid_warning'),
				array('check', 'avatar_paranoid'),
			'',
				array('check', 'avatar_download_png'),
				array('select', 'custom_avatar_enabled', array($txt['option_attachment_dir'], $txt['option_specified_dir']), 'onchange' => 'fUpdateStatus();'),
				array('text', 'custom_avatar_dir', 40, 'subtext' => $txt['custom_avatar_dir_desc'], 'invalid' => !$context['valid_custom_avatar_dir']),
				array('text', 'custom_avatar_url', 40),]]></search>
			<add><![CDATA[				array('warning', 'avatar_paranoid_warning'),
				array('check', 'avatar_paranoid'),
			'',
				array('select', 'custom_avatar_enabled', array($txt['option_attachment_dir'], $txt['option_specified_dir']), 'onchange' => 'fUpdateStatus();'),
				array('text', 'custom_avatar_dir', 40, 'subtext' => $txt['custom_avatar_dir_desc'], 'invalid' => !$context['valid_custom_avatar_dir']),
				array('text', 'custom_avatar_url', 40),]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ManageBoards.controller.php -->		
	<file name="ADMINDIR/ManageBoards.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			// Change '1 & 2' to '1 &amp; 2', but not '&amp;' to '&amp;amp;'...
			$boardOptions['board_name'] = preg_replace('~[&]([^;]{8}|[^;]{0,8}$)~', '&amp;$1', $this->_req->post->board_name);

			$boardOptions['board_description'] = Util::htmlspecialchars($this->_req->post->desc);
			preparsecode($boardOptions['board_description']);

			$boardOptions['moderator_string'] = $this->_req->post->moderators;]]></search>
			<add><![CDATA[			// Change '1 & 2' to '1 &amp; 2', but not '&amp;' to '&amp;amp;'...
			$boardOptions['board_name'] = preg_replace('~[&]([^;]{8}|[^;]{0,8}$)~', '&amp;$1', $this->_req->post->board_name);

			// Convert any html to bbc
			$parser = new Html_2_BBC($this->_req->post->desc);
			$boardOptions['board_description'] = Util::htmlspecialchars($parser->get_bbc());
			preparsecode($boardOptions['board_description']);

			$boardOptions['moderator_string'] = $this->_req->post->moderators;]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ManageCalendarModule.controller.php -->		
	<file name="ADMINDIR/ManageCalendarModule.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		$context['is_new'] = !isset($this->_req->query->holiday);
		$context['cal_minyear'] = $modSettings['cal_minyear'];
		$context['cal_maxyear'] = date('Y') + $modSettings['cal_limityear'];
		$context['page_title'] = $context['is_new'] ? $txt['holidays_add'] : $txt['holidays_edit'];
		$context['sub_template'] = 'edit_holiday';
]]></search>
			<add><![CDATA[
		$context['is_new'] = !isset($this->_req->query->holiday);
		$context['cal_minyear'] = $modSettings['cal_minyear'];
		$context['cal_maxyear'] = (int) date('Y') + (int) $modSettings['cal_limityear'];
		$context['page_title'] = $context['is_new'] ? $txt['holidays_add'] : $txt['holidays_edit'];
		$context['sub_template'] = 'edit_holiday';
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				removeHolidays($this->_req->post->holiday);
			else
			{
				$date = strftime($this->_req->post->year <= 4 ? '0004-%m-%d' : '%Y-%m-%d', mktime(0, 0, 0, $this->_req->post->month, $this->_req->post->day, $this->_req->post->year));
				if (isset($this->_req->post->edit))
					editHoliday($this->_req->post->holiday, $date, $this->_req->post->title);
				else]]></search>
			<add><![CDATA[				removeHolidays($this->_req->post->holiday);
			else
			{
				$date = Util::strftime($this->_req->post->year <= 4 ? '0004-%m-%d' : '%Y-%m-%d', mktime(0, 0, 0, $this->_req->post->month, $this->_req->post->day, $this->_req->post->year));
				if (isset($this->_req->post->edit))
					editHoliday($this->_req->post->holiday, $date, $this->_req->post->title);
				else]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$context['holiday'] = getHoliday($this->_req->query->holiday);

		// Last day for the drop down?
		$context['holiday']['last_day'] = (int) strftime('%d', mktime(0, 0, 0, $context['holiday']['month'] == 12 ? 1 : $context['holiday']['month'] + 1, 0, $context['holiday']['month'] == 12 ? $context['holiday']['year'] + 1 : $context['holiday']['year']));
	}

	/**]]></search>
			<add><![CDATA[			$context['holiday'] = getHoliday($this->_req->query->holiday);

		// Last day for the drop down?
		$context['holiday']['last_day'] = (int) Util::strftime('%d', mktime(0, 0, 0, $context['holiday']['month'] == 12 ? 1 : $context['holiday']['month'] + 1, 0, $context['holiday']['month'] == 12 ? $context['holiday']['year'] + 1 : $context['holiday']['year']));
	}

	/**]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ManageErrors.controller.php -->		
	<file name="ADMINDIR/ManageErrors.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Filtering anything?
		$this->_applyFilter($filter);

		$sort = ($context['sort_direction'] == 'down') ? ';desc' : '';

		// What type of errors do we have and how many do we have?
		$context['error_types'] = array();
		$context['error_types'] = $this->errorLog->fetchErrorsByType($filter, $sort);
		$tmp = array_keys($context['error_types']);
		$sum = (int) end($tmp);
]]></search>
			<add><![CDATA[		// Filtering anything?
		$this->_applyFilter($filter);

		// What type of errors do we have and how many do we have?
		$context['error_types'] = array();
		$context['error_types'] = $this->errorLog->fetchErrorsByType($filter, $context['sort_direction']);
		$tmp = array_keys($context['error_types']);
		$sum = (int) end($tmp);
]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ManageFeatures.controller.php -->		
	<file name="ADMINDIR/ManageFeatures.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.8
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			call_integration_hook('integrate_save_basic_settings');

			$settingsForm->setConfigValues((array) $this->_req->post);
			$settingsForm->save();

			writeLog();
			redirectexit('action=admin;area=featuresettings;sa=basic');
		}
		if (isset($this->_req->post->cleanhives))
		{
			$clean_hives_result = theme()->cleanHives();]]></search>
			<add><![CDATA[
			call_integration_hook('integrate_save_basic_settings');

			// Microdata needs to enable its integration
			if (!empty($this->_req->getPost('metadata_enabled')))
			{
				Hooks::instance()->enableIntegration('Metadata_Integrate');
			}
			else
			{
				Hooks::instance()->disableIntegration('Metadata_Integrate');
			}

			$settingsForm->setConfigValues((array) $this->_req->post);
			$settingsForm->save();

			writeLog();
			redirectexit('action=admin;area=featuresettings;sa=basic');
		}

		if (isset($this->_req->post->cleanhives))
		{
			$clean_hives_result = theme()->cleanHives();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				array('check', 'hitStats'),
			'',
				// Option-ish things... miscellaneous sorta.
				array('check', 'allow_disableAnnounce'),
				array('check', 'disallow_sendBody'),
				array('select', 'enable_contactform', array('disabled' => $txt['contact_form_disabled'], 'registration' => $txt['contact_form_registration'], 'menu' => $txt['contact_form_menu'])),]]></search>
			<add><![CDATA[				array('check', 'hitStats'),
			'',
				// Option-ish things... miscellaneous sorta.
				array('check', 'metadata_enabled'),
				array('check', 'allow_disableAnnounce'),
				array('check', 'disallow_sendBody'),
				array('select', 'enable_contactform', array('disabled' => $txt['contact_form_disabled'], 'registration' => $txt['contact_form_registration'], 'menu' => $txt['contact_form_menu'])),]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ManagePaid.controller.php -->		
	<file name="ADMINDIR/ManagePaid.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$context['sub'] = array(
				'id' => 0,
				'start' => array(
					'year' => (int) strftime('%Y', time()),
					'month' => (int) strftime('%m', time()),
					'day' => (int) strftime('%d', time()),
					'hour' => (int) strftime('%H', time()),
					'min' => (int) strftime('%M', time()) < 10 ? '0' . (int) strftime('%M', time()) : (int) strftime('%M', time()),
					'last_day' => 0,
				),
				'end' => array(
					'year' => (int) strftime('%Y', time()),
					'month' => (int) strftime('%m', time()),
					'day' => (int) strftime('%d', time()),
					'hour' => (int) strftime('%H', time()),
					'min' => (int) strftime('%M', time()) < 10 ? '0' . (int) strftime('%M', time()) : (int) strftime('%M', time()),
					'last_day' => 0,
				),
				'status' => 1,
			);
			$context['sub']['start']['last_day'] = (int) strftime('%d', mktime(0, 0, 0, $context['sub']['start']['month'] == 12 ? 1 : $context['sub']['start']['month'] + 1, 0, $context['sub']['start']['month'] == 12 ? $context['sub']['start']['year'] + 1 : $context['sub']['start']['year']));
			$context['sub']['end']['last_day'] = (int) strftime('%d', mktime(0, 0, 0, $context['sub']['end']['month'] == 12 ? 1 : $context['sub']['end']['month'] + 1, 0, $context['sub']['end']['month'] == 12 ? $context['sub']['end']['year'] + 1 : $context['sub']['end']['year']));

			if (isset($this->_req->query->uid))
			{]]></search>
			<add><![CDATA[			$context['sub'] = array(
				'id' => 0,
				'start' => array(
					'year' => (int) Util::strftime('%Y', time()),
					'month' => (int) Util::strftime('%m', time()),
					'day' => (int) Util::strftime('%d', time()),
					'hour' => (int) Util::strftime('%H', time()),
					'min' => (int) Util::strftime('%M', time()) < 10 ? '0' . (int) Util::strftime('%M', time()) : (int) Util::strftime('%M', time()),
					'last_day' => 0,
				),
				'end' => array(
					'year' => (int) Util::strftime('%Y', time()),
					'month' => (int) Util::strftime('%m', time()),
					'day' => (int) Util::strftime('%d', time()),
					'hour' => (int) Util::strftime('%H', time()),
					'min' => (int) Util::strftime('%M', time()) < 10 ? '0' . (int) Util::strftime('%M', time()) : (int) Util::strftime('%M', time()),
					'last_day' => 0,
				),
				'status' => 1,
			);
			$context['sub']['start']['last_day'] = (int) Util::strftime('%d', mktime(0, 0, 0, $context['sub']['start']['month'] == 12 ? 1 : $context['sub']['start']['month'] + 1, 0, $context['sub']['start']['month'] == 12 ? $context['sub']['start']['year'] + 1 : $context['sub']['start']['year']));
			$context['sub']['end']['last_day'] = (int) Util::strftime('%d', mktime(0, 0, 0, $context['sub']['end']['month'] == 12 ? 1 : $context['sub']['end']['month'] + 1, 0, $context['sub']['end']['month'] == 12 ? $context['sub']['end']['year'] + 1 : $context['sub']['end']['year']));

			if (isset($this->_req->query->uid))
			{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$context['sub'] = array(
				'id' => 0,
				'start' => array(
					'year' => (int) strftime('%Y', $row['start_time']),
					'month' => (int) strftime('%m', $row['start_time']),
					'day' => (int) strftime('%d', $row['start_time']),
					'hour' => (int) strftime('%H', $row['start_time']),
					'min' => (int) strftime('%M', $row['start_time']) < 10 ? '0' . (int) strftime('%M', $row['start_time']) : (int) strftime('%M', $row['start_time']),
					'last_day' => 0,
				),
				'end' => array(
					'year' => (int) strftime('%Y', $row['end_time']),
					'month' => (int) strftime('%m', $row['end_time']),
					'day' => (int) strftime('%d', $row['end_time']),
					'hour' => (int) strftime('%H', $row['end_time']),
					'min' => (int) strftime('%M', $row['end_time']) < 10 ? '0' . (int) strftime('%M', $row['end_time']) : (int) strftime('%M', $row['end_time']),
					'last_day' => 0,
				),
				'status' => $row['status'],
				'username' => $row['username'],
			);
			$context['sub']['start']['last_day'] = (int) strftime('%d', mktime(0, 0, 0, $context['sub']['start']['month'] == 12 ? 1 : $context['sub']['start']['month'] + 1, 0, $context['sub']['start']['month'] == 12 ? $context['sub']['start']['year'] + 1 : $context['sub']['start']['year']));
			$context['sub']['end']['last_day'] = (int) strftime('%d', mktime(0, 0, 0, $context['sub']['end']['month'] == 12 ? 1 : $context['sub']['end']['month'] + 1, 0, $context['sub']['end']['month'] == 12 ? $context['sub']['end']['year'] + 1 : $context['sub']['end']['year']));
		}
	}
}]]></search>
			<add><![CDATA[			$context['sub'] = array(
				'id' => 0,
				'start' => array(
					'year' => (int) Util::strftime('%Y', $row['start_time']),
					'month' => (int) Util::strftime('%m', $row['start_time']),
					'day' => (int) Util::strftime('%d', $row['start_time']),
					'hour' => (int) Util::strftime('%H', $row['start_time']),
					'min' => (int) Util::strftime('%M', $row['start_time']) < 10 ? '0' . (int) Util::strftime('%M', $row['start_time']) : (int) Util::strftime('%M', $row['start_time']),
					'last_day' => 0,
				),
				'end' => array(
					'year' => (int) Util::strftime('%Y', $row['end_time']),
					'month' => (int) Util::strftime('%m', $row['end_time']),
					'day' => (int) Util::strftime('%d', $row['end_time']),
					'hour' => (int) Util::strftime('%H', $row['end_time']),
					'min' => (int) Util::strftime('%M', $row['end_time']) < 10 ? '0' . (int) Util::strftime('%M', $row['end_time']) : (int) Util::strftime('%M', $row['end_time']),
					'last_day' => 0,
				),
				'status' => $row['status'],
				'username' => $row['username'],
			);
			$context['sub']['start']['last_day'] = (int) Util::strftime('%d', mktime(0, 0, 0, $context['sub']['start']['month'] == 12 ? 1 : $context['sub']['start']['month'] + 1, 0, $context['sub']['start']['month'] == 12 ? $context['sub']['start']['year'] + 1 : $context['sub']['start']['year']));
			$context['sub']['end']['last_day'] = (int) Util::strftime('%d', mktime(0, 0, 0, $context['sub']['end']['month'] == 12 ? 1 : $context['sub']['end']['month'] + 1, 0, $context['sub']['end']['month'] == 12 ? $context['sub']['end']['year'] + 1 : $context['sub']['end']['year']));
		}
	}
}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ManagePosts.controller.php -->		
	<file name="ADMINDIR/ManagePosts.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				$this->_req->post->preview_characters = (int) min(max(0, $this->_req->post->preview_characters), 512);
			}

			call_integration_hook('integrate_save_post_settings');

			$settingsForm->setConfigValues((array) $this->_req->post);]]></search>
			<add><![CDATA[				$this->_req->post->preview_characters = (int) min(max(0, $this->_req->post->preview_characters), 512);
			}

			// Set a min quote length of 3 lines of text (@ default font size)
			if (!empty($this->_req->post->heightBeforeShowMore))
			{
				$this->_req->post->heightBeforeShowMore = (int) max((int) $this->_req->post->heightBeforeShowMore, 155);
			}

			call_integration_hook('integrate_save_post_settings');

			$settingsForm->setConfigValues((array) $this->_req->post);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Initialize it with our settings
		$config_vars = array(
			// Simple post options...
			array('check', 'removeNestedQuotes'),
			array('check', 'enableVideoEmbeding'),
			array('check', 'enableCodePrettify'),
			// Note show the warning as read if pspell not installed!]]></search>
			<add><![CDATA[
		// Initialize it with our settings
		$config_vars = array(
			// Quote options...
			array('int', 'removeNestedQuotes', 'postinput' => $txt['zero_to_disable']),
			array('int', 'heightBeforeShowMore', 'postinput' => $txt['zero_to_disable']),
			// Simple post options...
			array('check', 'enableVideoEmbeding'),
			array('check', 'enableCodePrettify'),
			// Note show the warning as read if pspell not installed!]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ManageServer.controller.php -->		
	<file name="ADMINDIR/ManageServer.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			call_integration_hook('integrate_save_general_settings');

			$settingsForm->setConfigValues((array) $this->_req->post);
			$settingsForm->save();
			redirectexit('action=admin;area=serversettings;sa=general;' . $context['session_var'] . '=' . $context['session_id'] . ';msg=' . (!empty($context['settings_message']) ? $context['settings_message'] : 'core_settings_saved'));]]></search>
			<add><![CDATA[		{
			call_integration_hook('integrate_save_general_settings');

			// Reset this in the event the server has changed, it will get set again if needed.
			updateSettings(array('host_to_dis' => 0));

			$settingsForm->setConfigValues((array) $this->_req->post);
			$settingsForm->save();
			redirectexit('action=admin;area=serversettings;sa=general;' . $context['session_var'] . '=' . $context['session_id'] . ';msg=' . (!empty($context['settings_message']) ? $context['settings_message'] : 'core_settings_saved'));]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			call_integration_hook('integrate_save_cookie_settings');

			// Its either local or global cookies
			if (!empty($this->_req->post->localCookies) && empty($this->_req->post->globalCookies))
				unset($this->_req->post->globalCookies);

			if (!empty($this->_req->post->globalCookiesDomain) && strpos($boardurl, $this->_req->post->globalCookiesDomain) === false)
				throw new Elk_Exception('invalid_cookie_domain', false);

			$settingsForm->setConfigValues((array) $this->_req->post);
			$settingsForm->save();
]]></search>
			<add><![CDATA[			call_integration_hook('integrate_save_cookie_settings');

			// Its either local or global cookies
			if (!empty($this->_req->post->localCookies) && !empty($this->_req->post->globalCookies))
				unset($this->_req->post->globalCookies);

			if (!empty($this->_req->post->globalCookiesDomain) && strpos($boardurl, $this->_req->post->globalCookiesDomain) === false)
				throw new Elk_Exception('invalid_cookie_domain', false);

			if ($this->_req->getPost('cookiename', 'trim', '') === '')
				$this->_req->post->cookiename = $cookiename;

			$settingsForm->setConfigValues((array) $this->_req->post);
			$settingsForm->save();
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				array('localCookies', $txt['localCookies'], 'subtext' => $txt['localCookies_note'], 'db', 'check', false, 'localCookies'),
				array('globalCookies', $txt['globalCookies'], 'subtext' => $txt['globalCookies_note'], 'db', 'check', false, 'globalCookies'),
				array('globalCookiesDomain', $txt['globalCookiesDomain'], 'subtext' => $txt['globalCookiesDomain_note'], 'db', 'text', false, 'globalCookiesDomain'),
				array('secureCookies', $txt['secureCookies'], 'subtext' => $txt['secureCookies_note'], 'db', 'check', false, 'secureCookies', 'disabled' => !isset($this->_req->server->HTTPS) || !(strtolower($this->_req->server->HTTPS) === 'on' || strtolower($this->_req->server->HTTPS) == '1')),
				array('httponlyCookies', $txt['httponlyCookies'], 'subtext' => $txt['httponlyCookies_note'], 'db', 'check', false, 'httponlyCookies'),
			'',
				// Sessions]]></search>
			<add><![CDATA[				array('localCookies', $txt['localCookies'], 'subtext' => $txt['localCookies_note'], 'db', 'check', false, 'localCookies'),
				array('globalCookies', $txt['globalCookies'], 'subtext' => $txt['globalCookies_note'], 'db', 'check', false, 'globalCookies'),
				array('globalCookiesDomain', $txt['globalCookiesDomain'], 'subtext' => $txt['globalCookiesDomain_note'], 'db', 'text', false, 'globalCookiesDomain'),
				array('secureCookies', $txt['secureCookies'], 'subtext' => $txt['secureCookies_note'], 'db', 'check', false, 'secureCookies', 'disabled' => !isset($_SERVER['HTTPS']) || !(strtolower($_SERVER['HTTPS']) === 'on' || strtolower($_SERVER['HTTPS']) == '1')),
				array('httponlyCookies', $txt['httponlyCookies'], 'subtext' => $txt['httponlyCookies_note'], 'db', 'check', false, 'httponlyCookies'),
			'',
				// Sessions]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ManageSmileys.controller.php -->		
	<file name="ADMINDIR/ManageSmileys.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					$dir = dir($modSettings['smileys_dir'] . '/' . $context['current_set']['path']);
					while ($entry = $dir->read())
					{
						if (in_array(strrchr($entry, '.'), array('.jpg', '.gif', '.jpeg', '.png')))
							$smileys[strtolower($entry)] = $entry;
					}
					$dir->close();]]></search>
			<add><![CDATA[					$dir = dir($modSettings['smileys_dir'] . '/' . $context['current_set']['path']);
					while ($entry = $dir->read())
					{
						if (in_array(strrchr($entry, '.'), array('.jpg', '.gif', '.jpeg', '.png', '.webp')))
							$smileys[strtolower($entry)] = $entry;
					}
					$dir->close();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			checkSession();

			// Some useful arrays... types we allow - and ports we don't!
			$allowedTypes = array('jpeg', 'jpg', 'gif', 'png', 'bmp');
			$disabledFiles = array('con', 'com1', 'com2', 'com3', 'com4', 'prn', 'aux', 'lpt1', '.htaccess', 'index.php');

			$this->_req->post->smiley_code = $this->_req->getPost('smiley_code', 'Util::htmltrim', '');]]></search>
			<add><![CDATA[			checkSession();

			// Some useful arrays... types we allow - and ports we don't!
			$allowedTypes = array('jpeg', 'jpg', 'gif', 'png', 'bmp', 'webp');
			$disabledFiles = array('con', 'com1', 'com2', 'com3', 'com4', 'prn', 'aux', 'lpt1', '.htaccess', 'index.php');

			$this->_req->post->smiley_code = $this->_req->getPost('smiley_code', 'Util::htmltrim', '');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				$dir = dir($context['smileys_dir'] . '/' . un_htmlspecialchars($smiley_set['path']));
				while ($entry = $dir->read())
				{
					if (!in_array($entry, $context['filenames']) && in_array(strrchr($entry, '.'), array('.jpg', '.gif', '.jpeg', '.png')))
						$context['filenames'][strtolower($entry)] = array(
							'id' => htmlspecialchars($entry, ENT_COMPAT, 'UTF-8'),
							'selected' => false,]]></search>
			<add><![CDATA[				$dir = dir($context['smileys_dir'] . '/' . un_htmlspecialchars($smiley_set['path']));
				while ($entry = $dir->read())
				{
					if (!in_array($entry, $context['filenames']) && in_array(strrchr($entry, '.'), array('.jpg', '.gif', '.jpeg', '.png', '.webp')))
						$context['filenames'][strtolower($entry)] = array(
							'id' => htmlspecialchars($entry, ENT_COMPAT, 'UTF-8'),
							'selected' => false,]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					$dir = dir($context['smileys_dir'] . '/' . un_htmlspecialchars($smiley_set['path']));
					while ($entry = $dir->read())
					{
						if (!in_array($entry, $context['filenames']) && in_array(strrchr($entry, '.'), array('.jpg', '.gif', '.jpeg', '.png')))
							$context['filenames'][strtolower($entry)] = array(
								'id' => htmlspecialchars($entry, ENT_COMPAT, 'UTF-8'),
								'selected' => false,]]></search>
			<add><![CDATA[					$dir = dir($context['smileys_dir'] . '/' . un_htmlspecialchars($smiley_set['path']));
					while ($entry = $dir->read())
					{
						if (!in_array($entry, $context['filenames']) && in_array(strrchr($entry, '.'), array('.jpg', '.gif', '.jpeg', '.png', '.webp')))
							$context['filenames'][strtolower($entry)] = array(
								'id' => htmlspecialchars($entry, ENT_COMPAT, 'UTF-8'),
								'selected' => false,]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$dir = dir($modSettings['smileys_dir'] . '/' . $smileyPath);
		while ($entry = $dir->read())
		{
			if (in_array(strrchr($entry, '.'), array('.jpg', '.gif', '.jpeg', '.png')))
				$smileys[strtolower($entry)] = $entry;
		}
		$dir->close();]]></search>
			<add><![CDATA[		$dir = dir($modSettings['smileys_dir'] . '/' . $smileyPath);
		while ($entry = $dir->read())
		{
			if (in_array(strrchr($entry, '.'), array('.jpg', '.gif', '.jpeg', '.png', '.webp')))
				$smileys[strtolower($entry)] = $entry;
		}
		$dir->close();]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for PackageServers.controller.php -->		
	<file name="ADMINDIR/PackageServers.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function action_index()
	{
		global $txt, $context;

		// This is for admins only.
		isAllowedTo('admin_forum');]]></search>
			<add><![CDATA[	 */
	public function action_index()
	{
		global $txt, $context, $scripturl;

		// This is for admins only.
		isAllowedTo('admin_forum');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Set up action/subaction stuff.
		$action = new Action('package_servers');

		// Now let's decide where we are taking this... call integrate_sa_package_servers
		$subAction = $action->initialize($subActions, 'servers');
]]></search>
			<add><![CDATA[		// Set up action/subaction stuff.
		$action = new Action('package_servers');

		// Set up some tabs...
		$context[$context['admin_menu_name']]['tab_data'] = array(
			'title' => $txt['package_manager'],
			'description' => $txt['upload_packages_desc'],
			'class' => 'database',
			'tabs' => array(
				'browse' => array(
					'url' => $scripturl . '?action=admin;area=packages;sa=browse',
					'label' => $txt['browse_packages'],
				),
				'installed' => array(
					'url' => $scripturl . '?action=admin;area=packages;sa=installed',
					'label' => $txt['installed_packages'],
				),
				'options' => array(
					'url' => $scripturl . '?action=admin;area=packages;sa=options',
					'label' => $txt['package_settings'],
				),
			),
		);

		// Now let's decide where we are taking this... call integrate_sa_package_servers
		$subAction = $action->initialize($subActions, 'servers');
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if (!is_array($context['package']))
			throw new Elk_Exception('package_cant_download', false);

		if ($context['package']['type'] === 'modification')
			$context['package']['install']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">' . $txt['install_mod'] . '</a>';
		elseif ($context['package']['type'] === 'avatar')
			$context['package']['install']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">' . $txt['use_avatars'] . '</a>';]]></search>
			<add><![CDATA[		if (!is_array($context['package']))
			throw new Elk_Exception('package_cant_download', false);

		if ($context['package']['type'] === 'modification' || $context['package']['type'] === 'addon')
			$context['package']['install']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">' . $txt['install_mod'] . '</a>';
		elseif ($context['package']['type'] === 'avatar')
			$context['package']['install']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">' . $txt['use_avatars'] . '</a>';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					{
						@unlink($destination);
						loadLanguage('Errors');
						throw new Elk_Exception('package_upload_already_exists', 'general', $package->getFilename());
					}
				}
			}]]></search>
			<add><![CDATA[					{
						@unlink($destination);
						loadLanguage('Errors');
						throw new Elk_Exception('package_upload_already_exists', 'general', array($package->getFilename()));
					}
				}
			}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			}
		}

		if ($context['package']['type'] === 'modification')
			$context['package']['install']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">' . $txt['install_mod'] . '</a>';
		elseif ($context['package']['type'] === 'avatar')
			$context['package']['install']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">' . $txt['use_avatars'] . '</a>';]]></search>
			<add><![CDATA[			}
		}

		if ($context['package']['type'] === 'modification' || $context['package']['type'] === 'addon')
			$context['package']['install']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">' . $txt['install_mod'] . '</a>';
		elseif ($context['package']['type'] === 'avatar')
			$context['package']['install']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">' . $txt['use_avatars'] . '</a>';]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Attachment.controller.php -->		
	<file name="CONTROLLERDIR/Attachment.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.8
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function action_dlattach()
	{
		global $modSettings, $user_info, $context, $topic, $board, $settings;

		// Some defaults that we need.
		$context['no_last_modified'] = true;
		$filename = null;

		// Make sure some attachment was requested!
		if (!isset($this->_req->query->attach) && !isset($this->_req->query->id))
		{
			return $this->action_no_attach();
		}

		// We need to do some work on attachments and avatars.]]></search>
			<add><![CDATA[	 */
	public function action_dlattach()
	{
		global $modSettings, $user_info, $context, $topic, $board, $settings, $txt;

		// Some defaults that we need.
		$context['no_last_modified'] = true;
		$filename = null;

		// Make sure some attachment was requested!
		if (!isset($this->_req->query->attach))
		{
			if (!isset($this->_req->query->id))
				$this->action_no_attach();

			if ($this->_req->query->id === 'ila')
			{
				loadLanguage('index');
				$this->action_no_attach($txt['awaiting_approval']);
			}
		}

		// We need to do some work on attachments and avatars.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}

		$eTag = '"' . substr($id_attach . $real_filename . @filemtime($filename), 0, 64) . '"';
		$use_compression = !empty($modSettings['enableCompressedOutput']) && @filesize($filename) <= 4194304 && in_array($file_ext, array('txt', 'html', 'htm', 'js', 'doc', 'docx', 'rtf', 'css', 'php', 'log', 'xml', 'sql', 'c', 'java'));
		$disposition = !isset($this->_req->query->image) ? 'attachment' : 'inline';
		$do_cache = false === (!isset($this->_req->query->image) && getValidMimeImageType($file_ext) !== '');
]]></search>
			<add><![CDATA[		}

		$eTag = '"' . substr($id_attach . $real_filename . @filemtime($filename), 0, 64) . '"';
		$use_compression = $this->useCompression($mime_type);
		$disposition = !isset($this->_req->query->image) ? 'attachment' : 'inline';
		$do_cache = false === (!isset($this->_req->query->image) && getValidMimeImageType($file_ext) !== '');
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}

		$this->_send_headers($filename, $eTag, $mime_type, $use_compression, $disposition, $real_filename, $do_cache);

		// Recode line endings for text files, if enabled.
		if (!empty($modSettings['attachmentRecodeLineEndings']) && !isset($this->_req->query->image) && in_array($file_ext, array('txt', 'css', 'htm', 'html', 'php', 'xml')))
		{
			$req = request();
			if (strpos($req->user_agent(), 'Windows') !== false)
				$callback = function ($buffer) {
					return preg_replace('~[\r]?\n~', "\r\n", $buffer);
				};
			elseif (strpos($req->user_agent(), 'Mac') !== false)
				$callback = function ($buffer) {
					return preg_replace('~[\r]?\n~', "\r", $buffer);
				};
			else
				$callback = function ($buffer) {
					return preg_replace('~[\r]?\n~', "\n", $buffer);
				};
		}

		// Since we don't do output compression for files this large...
		if (filesize($filename) > 4194304)
		{
			// Forcibly end any output buffering going on.
			while (ob_get_level() > 0)
				@ob_end_clean();

			$fp = fopen($filename, 'rb');
			while (!feof($fp))
			{
				if (isset($callback))
					echo $callback(fread($fp, 8192));
				else
					echo fread($fp, 8192);

				flush();
			}
			fclose($fp);
		}
		// On some of the less-bright hosts, readfile() is disabled.  It's just a faster, more byte safe, version of what's in the if.
		elseif (isset($callback) || @readfile($filename) === null)
		{
			echo isset($callback) ? $callback(file_get_contents($filename)) : file_get_contents($filename);
		}

		obExit(false);
	}

	/**]]></search>
			<add><![CDATA[		}

		$this->_send_headers($filename, $eTag, $mime_type, $use_compression, $disposition, $real_filename, $do_cache);
		$this->send_file($filename, $mime_type);

		obExit(false);
	}

	/**
	 * If the mime type benefits from compression e.g. text/xyz and gzencode is
	 * available and the user agent accepts gzip, then return true, else false
	 *
	 * @param string $mime_type
	 * @return bool if we should compress the file
	 */
	public function useCompression($mime_type)
	{
		global $modSettings;

		// Support is available on the server
		if (!function_exists('gzencode') || empty($modSettings['enableCompressedOutput']))
		{
			return false;
		}

		// Not compressible, or not supported / requested by client
		if (!preg_match('~^(?:text/|application/(?:json|xml|rss\+xml)$)~i', $mime_type)
			|| (!isset($_SERVER['HTTP_ACCEPT_ENCODING']) || strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') === false))
		{
			return false;
		}

		return true;
	}

	/**
	 * Sends the requested file to the user.  If the file is compressible e.g.
	 * has a mine type of text/??? may compress the file prior to sending.
	 *
	 * @param string $filename
	 * @param string $mime_type
	 */
	public function send_file($filename, $mime_type)
	{
		$body = file_get_contents($filename);
		$use_compression = $this->useCompression($mime_type);
		$length = filesize($filename);

		// If we can/should compress this file
		if ($use_compression && strlen($body) > 250)
		{
			$body = gzencode($body, 2);
			$length = strlen($body);
			header('Content-Encoding: gzip');
			header('Vary: Accept-Encoding');
		}

		// Someone is getting a present
		if (!empty($length))
		{
			header('Content-Length: ' . $length);
		}

		// Forcibly end any output buffering going on.
		while (ob_get_level() > 0)
		{
			@ob_end_clean();
		}

		echo $body;
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}

		$eTag = '"' . substr($id_attach . $real_filename . filemtime($filename), 0, 64) . '"';
		$use_compression = !empty($modSettings['enableCompressedOutput']) && @filesize($filename) <= 4194304 && in_array($file_ext, array('txt', 'html', 'htm', 'js', 'doc', 'docx', 'rtf', 'css', 'php', 'log', 'xml', 'sql', 'c', 'java'));
		$do_cache = false === (!isset($this->_req->query->image) && getValidMimeImageType($file_ext) !== '');

		$this->_send_headers($filename, $eTag, $mime_type, $use_compression, 'inline', $real_filename, $do_cache);

		if ($resize && resizeImageFile($filename, $filename . '_thumb', 100, 100))
		{
			if (!empty($modSettings['attachment_autorotate']))
			{]]></search>
			<add><![CDATA[		}

		$eTag = '"' . substr($id_attach . $real_filename . filemtime($filename), 0, 64) . '"';
		$use_compression = $this->useCompression($mime_type);
		$do_cache = false === (!isset($this->_req->query->image) && getValidMimeImageType($file_ext) !== '');

		$this->_send_headers($filename, $eTag, $mime_type, $use_compression, 'inline', $real_filename, $do_cache);

		$max_width = $this->_req->is_set('thumb') && !empty($modSettings['attachmentThumbWidth']) ? $modSettings['attachmentThumbWidth'] : 250;
		$max_height = $this->_req->is_set('thumb') && !empty($modSettings['attachmentThumbHeight']) ? $modSettings['attachmentThumbHeight'] : 250;
		$format = setDefaultFormat($filename);
		if ($resize && resizeImageFile($filename, $filename . '_thumb', $max_width, $max_height, $format, false, false))
		{
			if (!empty($modSettings['attachment_autorotate']))
			{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$filename = $filename . '_thumb';
		}

		if (empty($modSettings['enableCompressedOutput']) || filesize($filename) > 4194304)
			header('Content-Length: ' . filesize($filename));

		if (@readfile($filename) === null)
			echo file_get_contents($filename);

		obExit(false);
	}]]></search>
			<add><![CDATA[			$filename = $filename . '_thumb';
		}

		$this->send_file($filename, $mime_type);

		obExit(false);
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 * @param string $filename Full path+file name of the file in the filesystem
	 * @param string $eTag ETag cache validator
	 * @param string $mime_type The mime-type of the file
	 * @param boolean $use_compression If use gzip compression
	 * @param string $disposition The value of the Content-Disposition header
	 * @param string $real_filename The original name of the file
	 * @param boolean $do_cache If send the a max-age header or not]]></search>
			<add><![CDATA[	 * @param string $filename Full path+file name of the file in the filesystem
	 * @param string $eTag ETag cache validator
	 * @param string $mime_type The mime-type of the file
	 * @param boolean $use_compression If use gzip compression - Deprecated since 1.1.9
	 * @param string $disposition The value of the Content-Disposition header
	 * @param string $real_filename The original name of the file
	 * @param boolean $do_cache If send the a max-age header or not]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		global $txt;

		obStart($use_compression);

		// No point in a nicer message, because this is supposed to be an attachment anyway...
		if ($check_filename === true && !file_exists($filename))
		{
			loadLanguage('Errors');

			header((preg_match('~HTTP/1\.[01]~i', $this->_req->server->SERVER_PROTOCOL) ? $this->_req->server->SERVER_PROTOCOL : 'HTTP/1.0') . ' 404 Not Found');
			header('Content-Type: text/plain; charset=UTF-8');

			// We need to die like this *before* we send any anti-caching headers as below.]]></search>
			<add><![CDATA[	{
		global $txt;

		// No point in a nicer message, because this is supposed to be an attachment anyway...
		if ($check_filename === true && !file_exists($filename))
		{
			loadLanguage('Errors');

			header((preg_match('~HTTP/1\.[01]~i', $_SERVER['SERVER_PROTOCOL']) ? $_SERVER['SERVER_PROTOCOL'] : 'HTTP/1.0') . ' 404 Not Found');
			header('Content-Type: text/plain; charset=UTF-8');

			// We need to die like this *before* we send any anti-caching headers as below.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}

		// If it hasn't been modified since the last time this attachment was retrieved, there's no need to display it again.
		if (!empty($this->_req->server->HTTP_IF_MODIFIED_SINCE))
		{
			list ($modified_since) = explode(';', $this->_req->server->HTTP_IF_MODIFIED_SINCE);
			if ($check_filename === false || strtotime($modified_since) >= filemtime($filename))
			{
				@ob_end_clean();]]></search>
			<add><![CDATA[		}

		// If it hasn't been modified since the last time this attachment was retrieved, there's no need to display it again.
		if (!empty($_SERVER['HTTP_IF_MODIFIED_SINCE']))
		{
			list ($modified_since) = explode(';', $_SERVER['HTTP_IF_MODIFIED_SINCE']);
			if ($check_filename === false || strtotime($modified_since) >= filemtime($filename))
			{
				@ob_end_clean();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}

		// Check whether the ETag was sent back, and cache based on that...
		if (!empty($this->_req->server->HTTP_IF_NONE_MATCH) && strpos($this->_req->server->HTTP_IF_NONE_MATCH, $eTag) !== false)
		{
			@ob_end_clean();
]]></search>
			<add><![CDATA[		}

		// Check whether the ETag was sent back, and cache based on that...
		if (!empty($_SERVER['HTTP_IF_NONE_MATCH']) && strpos($_SERVER['HTTP_IF_NONE_MATCH'], $eTag) !== false)
		{
			@ob_end_clean();
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		if (!empty($mime_type) && strpos($mime_type, 'image/') === 0)
		{
			header('Content-Type: ' . strtr($mime_type, array('image/bmp' => 'image/x-ms-bmp')));
		}
		else
		{
			header('Content-Type: ' . (isBrowser('ie') || isBrowser('opera') ? 'application/octetstream' : 'application/octet-stream'));
		}

		// Different browsers like different standards...
		if (isBrowser('firefox'))
			header('Content-Disposition: ' . $disposition . '; filename*=UTF-8\'\'' . rawurlencode(preg_replace_callback('~&#(\d{3,8});~', 'fixchar__callback', $real_filename)));
		elseif (isBrowser('opera'))
			header('Content-Disposition: ' . $disposition . '; filename="' . preg_replace_callback('~&#(\d{3,8});~', 'fixchar__callback', $real_filename) . '"');
		elseif (isBrowser('ie'))
			header('Content-Disposition: ' . $disposition . '; filename="' . urlencode(preg_replace_callback('~&#(\d{3,8});~', 'fixchar__callback', $real_filename)) . '"');
		else
			header('Content-Disposition: ' . $disposition . '; filename="' . $real_filename . '"');

		// If this has an "image extension" - but isn't actually an image - then ensure it isn't cached cause of silly IE.
		if ($do_cache === true)]]></search>
			<add><![CDATA[
		if (!empty($mime_type) && strpos($mime_type, 'image/') === 0)
		{
			header('Content-Type: ' . $mime_type);
		}
		else
		{
			header('Content-Type: application/octet-stream');
		}

		// Different browsers like different standards...
		$filename = str_replace('"', '', $real_filename);

		// Send as UTF-8 if the name requires that
		$altName = '';
		if (preg_match('~[\x80-\xFF]~', $filename))
			$altName = "; filename*=UTF-8''" . rawurlencode($filename);

		header('Content-Disposition: ' . $disposition . '; filename="' . $filename . '"' . $altName);

		// If this has an "image extension" - but isn't actually an image - then ensure it isn't cached cause of silly IE.
		if ($do_cache === true)]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Auth.controller.php -->		
	<file name="CONTROLLERDIR/Auth.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			// Maybe we were too hasty... let's try some other authentication methods.
			$other_passwords = $this->_other_passwords($user_settings);

			// Whichever encryption it was using, let's make it use ElkArte's now ;).
			if (in_array($user_settings['passwd'], $other_passwords))
			{
				updateMemberSalt($user_settings['id_member']);
				$user_settings['passwd'] = validateLoginPassword($sha_passwd, '', '', true);]]></search>
			<add><![CDATA[
			// Maybe we were too hasty... let's try some other authentication methods.
			$other_passwords = $this->_other_passwords($user_settings);
			$conversionPassword = in_array($user_settings['passwd'], $other_passwords, true);

			// Maybe we have a "standard" password_hash (xenforo, smf2.1, phpbb3.3, vbulletin5...)
			if (!$conversionPassword && !empty($modSettings['enable_password_conversion']) && strpos($user_settings['passwd'], '$') === 0)
			{
				// Some common hash generation arrangements
				$conversionPassword = password_verify(Util::strtolower($user_settings['member_name']) . $_POST['passwrd'], $user_settings['passwd']);
				$conversionPassword = $conversionPassword || password_verify($_POST['passwrd'], $user_settings['passwd']);
				$conversionPassword = $conversionPassword || password_verify(md5($_POST['passwrd']), $user_settings['passwd']);
			}

			// Whichever encryption it was using, let's make it use ElkArte's now ;).
			if ($conversionPassword)
			{
				updateMemberSalt($user_settings['id_member']);
				$user_settings['passwd'] = validateLoginPassword($sha_passwd, '', '', true);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			if ($pw_strlen === 64)
			{
				// Snitz style
				$other_passwords[] = bin2hex(hash('sha256', $_POST['passwrd']));

				// Normal SHA-256
				$other_passwords[] = hash('sha256', $_POST['passwrd']);]]></search>
			<add><![CDATA[			if ($pw_strlen === 64)
			{
				// Snitz style
				$other_passwords[] = bin2hex(hash('sha256', $_POST['passwrd'], true));

				// Normal SHA-256
				$other_passwords[] = hash('sha256', $_POST['passwrd']);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			// Hmm.. p'raps it's Invision 2 style?
			$other_passwords[] = md5(md5($user_settings['password_salt']) . md5($_POST['passwrd']));

			// Some common md5 ones.
			$other_passwords[] = md5($user_settings['password_salt'] . $_POST['passwrd']);
			$other_passwords[] = md5($_POST['passwrd'] . $user_settings['password_salt']);
		}
		// The hash is 40 characters, lets try some SHA-1 style auth
		elseif ($pw_strlen === 40)]]></search>
			<add><![CDATA[			// Hmm.. p'raps it's Invision 2 style?
			$other_passwords[] = md5(md5($user_settings['password_salt']) . md5($_POST['passwrd']));

			// Some common md5 ones, like myBB
			$other_passwords[] = md5($user_settings['password_salt'] . $_POST['passwrd']);
			$other_passwords[] = md5($_POST['passwrd'] . $user_settings['password_salt']);
			$other_passwords[] = md5(md5($user_settings['password_salt']) . md5($_POST['passwrd']));
		}
		// The hash is 40 characters, lets try some SHA-1 style auth
		elseif ($pw_strlen === 40)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// ElkArte's sha1 function can give a funny result on Linux (Not our fault!). If we've now got the real one let the old one be valid!
		if (stripos(PHP_OS, 'win') !== 0)
		{
			require_once(SUBSDIR . '/Compat.subs.php');
			$other_passwords[] = sha1_smf(strtolower($user_settings['member_name']) . un_htmlspecialchars($_POST['passwrd']));
		}

		// Allows mods to easily extend the $other_passwords array]]></search>
			<add><![CDATA[		// ElkArte's sha1 function can give a funny result on Linux (Not our fault!). If we've now got the real one let the old one be valid!
		if (stripos(PHP_OS, 'win') !== 0)
		{
			$other_passwords[] = bin2hex(hash('sha1', strtolower($user_settings['member_name']) . un_htmlspecialchars($_POST['passwrd']), true));
		}

		// Allows mods to easily extend the $other_passwords array]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Calendar.controller.php -->		
	<file name="CONTROLLERDIR/Calendar.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Is this a week view?
		$context['view_week'] = isset($_GET['viewweek']);
		$context['cal_minyear'] = $modSettings['cal_minyear'];
		$context['cal_maxyear'] = date('Y') + $modSettings['cal_limityear'];

		// Don't let search engines index weekly calendar pages.
		if ($context['view_week'])]]></search>
			<add><![CDATA[		// Is this a week view?
		$context['view_week'] = isset($_GET['viewweek']);
		$context['cal_minyear'] = $modSettings['cal_minyear'];
		$context['cal_maxyear'] = (int) date('Y') + (int) $modSettings['cal_limityear'];

		// Don't let search engines index weekly calendar pages.
		if ($context['view_week'])]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$context['sub_template'] = 'unlinked_event_post';

		$context['cal_minyear'] = $modSettings['cal_minyear'];
		$context['cal_maxyear'] = date('Y') + $modSettings['cal_limityear'];
		$context['page_title'] = $event->isNew() ? $txt['calendar_edit'] : $txt['calendar_post_event'];
		$context['linktree'][] = array(
			'name' => $context['page_title'],]]></search>
			<add><![CDATA[		$context['sub_template'] = 'unlinked_event_post';

		$context['cal_minyear'] = $modSettings['cal_minyear'];
		$context['cal_maxyear'] = (int) date('Y') + (int) $modSettings['cal_limityear'];
		$context['page_title'] = $event->isNew() ? $txt['calendar_edit'] : $txt['calendar_post_event'];
		$context['linktree'][] = array(
			'name' => $context['page_title'],]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Display.controller.php -->		
	<file name="CONTROLLERDIR/Display.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$total_visible_posts = $context['num_replies'] + $topicinfo['unapproved_posts'] + ($topicinfo['approved'] ? 1 : 0);

		// When was the last time this topic was replied to?  Should we warn them about it?
		if (!empty($modSettings['oldTopicDays']))
		{
			$mgsOptions = basicMessageInfo($topicinfo['id_last_msg'], true);
			$context['oldTopicError'] = $mgsOptions['poster_time'] + $modSettings['oldTopicDays'] * 86400 < time() && empty($topicinfo['is_sticky']);
		}
		else
			$context['oldTopicError'] = false;

		// The start isn't a number; it's information about what to do, where to go.
		if (!is_numeric($this->_start))]]></search>
			<add><![CDATA[			$total_visible_posts = $context['num_replies'] + $topicinfo['unapproved_posts'] + ($topicinfo['approved'] ? 1 : 0);

		// When was the last time this topic was replied to?  Should we warn them about it?
		$context['oldTopicError'] = false;
		if (!empty($modSettings['oldTopicDays']))
		{
			$mgsOptions = basicMessageInfo($topicinfo['id_last_msg'], true);
			if ($mgsOptions !== false)
				$context['oldTopicError'] = $mgsOptions['poster_time'] + $modSettings['oldTopicDays'] * 86400 < time() && empty($topicinfo['is_sticky']);
		}

		// The start isn't a number; it's information about what to do, where to go.
		if (!is_numeric($this->_start))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						}),
					});

					$(".like_button, .unlike_button, .likes_button").SiteTooltip({
						hoverIntent: {
							sensitivity: 10,
							interval: 150,]]></search>
			<add><![CDATA[						}),
					});

					$(".react_button, .unreact_button, .reacts_button").SiteTooltip({
						hoverIntent: {
							sensitivity: 10,
							interval: 150,]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Quick reply & modify enabled?
		if ($context['can_reply'] && !empty($options['display_quick_reply']))
			$this->_template_layers->add('quickreply');

		$this->_template_layers->add('pages_and_buttons');
]]></search>
			<add><![CDATA[
		// Quick reply & modify enabled?
		if ($context['can_reply'] && !empty($options['display_quick_reply']))
		{
			loadJavascriptFile('quickQuote.js', array('defer' => true));
			$this->_template_layers->add('quickreply');
			theme()->addInlineJavascript("
				document.addEventListener('DOMContentLoaded', () => new Elk_QuickQuote(), false);", true
			);
		}

		$this->_template_layers->add('pages_and_buttons');
]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Emailpost.controller.php -->		
	<file name="CONTROLLERDIR/Emailpost.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function pbe_load_text(&$html, $email_message, $pbe)
{
	if (!$html || ($html && preg_match_all('~<table.*?>~i', $email_message->body, $match) >= 2))
	{
		// Some mobile responses wrap everything in a table structure so use plain text
		$text = $email_message->plain_body;]]></search>
			<add><![CDATA[ */
function pbe_load_text(&$html, $email_message, $pbe)
{
	if (!$html || ($html && preg_match_all('~<table.*?>~i', $email_message->body, $match) > 2))
	{
		// Some mobile responses wrap everything in a table structure so use plain text
		$text = $email_message->plain_body;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (empty($text))
		return '';

	if ($email_message->message_type !== 'p')
	{
		// Prepare it for the database
		require_once(SUBSDIR . '/Post.subs.php');
		preparsecode($text);
	}]]></search>
			<add><![CDATA[	if (empty($text))
		return '';

	// This will be taken care of by sendpm
	if ($email_message->message_type !== 'p')
	{
		// Prepare it for the database
		$text = Util::htmlspecialchars($text, ENT_QUOTES, 'UTF-8', true);
		require_once(SUBSDIR . '/Post.subs.php');
		preparsecode($text);
	}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Help.controller.php -->		
	<file name="CONTROLLERDIR/Help.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Sections we are going to link...
		$context['manual_sections'] = array(
			'registering' => 'Registering',
			'logging_in' => 'Logging_In',
			'profile' => 'Profile',
			'search' => 'Search',
			'posting' => 'Posting',
			'bbc' => 'Bulletin_board_code',
			'personal_messages' => 'Personal_messages',
			'memberlist' => 'Memberlist',
			'calendar' => 'Calendar',
			'features' => 'Features',]]></search>
			<add><![CDATA[		// Sections we are going to link...
		$context['manual_sections'] = array(
			'registering' => 'Registering',
			'logging_in' => 'Logging In',
			'profile' => 'Profile',
			'search' => 'Search',
			'posting' => 'Posting',
			'bbc' => 'BBC',
			'personal_messages' => 'Personal Messages',
			'memberlist' => 'Memberlist',
			'calendar' => 'Calendar',
			'features' => 'Features',]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Memberlist.controller.php -->		
	<file name="CONTROLLERDIR/Memberlist.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			if (defined('DB_CASE_SENSITIVE'))
			{
				foreach ($fields as $key => $field)
					$fields[$key] = 'LOWER(' . $field . ')';
			}

			$customJoin = array();]]></search>
			<add><![CDATA[			if (defined('DB_CASE_SENSITIVE'))
			{
				foreach ($fields as $key => $field)
				{

					if ($key === 2 && strpos($field, '(hide_email') === 0)
					{
						$fields[$key] = '(hide_email = 0 AND LOWER(email_address)';
						continue;
					}

					$fields[$key] = 'LOWER(' . $field . ')';
				}
			}

			$customJoin = array();]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for MessageIndex.controller.php -->		
	<file name="CONTROLLERDIR/MessageIndex.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.6
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$possibleActions[] = 'lock';
		if (!empty($boards_can['merge_any']))
			$possibleActions[] = 'merge';

		// Two methods: $_REQUEST['actions'] (id_topic => action), and $_REQUEST['topics'] and $this->_req->post->qaction.
		// (if action is 'move', $_REQUEST['move_to'] or $_REQUEST['move_tos'][$topic] is used.)]]></search>
			<add><![CDATA[			$possibleActions[] = 'lock';
		if (!empty($boards_can['merge_any']))
			$possibleActions[] = 'merge';
		if (!empty($boards_can['approve_posts']))
			$possibleActions[] = 'approve';

		// Two methods: $_REQUEST['actions'] (id_topic => action), and $_REQUEST['topics'] and $this->_req->post->qaction.
		// (if action is 'move', $_REQUEST['move_to'] or $_REQUEST['move_tos'][$topic] is used.)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$removeCache = array();
		$lockCache = array();
		$markCache = array();

		if (!empty($all_actions))
		{]]></search>
			<add><![CDATA[		$removeCache = array();
		$lockCache = array();
		$markCache = array();
		$approveCache = array();

		if (!empty($all_actions))
		{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					case 'lock':
						$lockCache[] = $row['id_topic'];
						break;
				}
			}
		}]]></search>
			<add><![CDATA[					case 'lock':
						$lockCache[] = $row['id_topic'];
						break;
					case 'approve':
						$approveCache[] = $row['id_topic'];
						break;
				}
			}
		}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if (!empty($removeCache))
			removeTopicsPermissions($removeCache);

		// And (almost) lastly, lock the topics...
		if (!empty($lockCache))
			toggleTopicsLock($lockCache, true);]]></search>
			<add><![CDATA[		if (!empty($removeCache))
			removeTopicsPermissions($removeCache);

		// Approve the topics...
		if (!empty($approveCache))
			approveTopics($approveCache, true, true);

		// And (almost) lastly, lock the topics...
		if (!empty($lockCache))
			toggleTopicsLock($lockCache, true);]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for News.controller.php -->		
	<file name="CONTROLLERDIR/News.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 *
 */]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 *
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				$data[] = array(
					'title' => cdata_parse($member['real_name']),
					'link' => $scripturl . '?action=profile;u=' . $member['id_member'],
					'published' => gmstrftime('%Y-%m-%dT%H:%M:%SZ', $member['date_registered']),
					'updated' => gmstrftime('%Y-%m-%dT%H:%M:%SZ', $member['last_login']),
					'id' => $scripturl . '?action=profile;u=' . $member['id_member'],
				);
			// More logical format for the data, but harder to apply.]]></search>
			<add><![CDATA[				$data[] = array(
					'title' => cdata_parse($member['real_name']),
					'link' => $scripturl . '?action=profile;u=' . $member['id_member'],
					'published' => Util::gmstrftime('%Y-%m-%dT%H:%M:%SZ', $member['date_registered']),
					'updated' => Util::gmstrftime('%Y-%m-%dT%H:%M:%SZ', $member['last_login']),
					'id' => $scripturl . '?action=profile;u=' . $member['id_member'],
				);
			// More logical format for the data, but harder to apply.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						'email' => in_array(showEmailAddress(!empty($row['hide_email']), $row['id_member']), array('yes', 'yes_permission_override')) ? $row['poster_email'] : null,
						'uri' => !empty($row['id_member']) ? $scripturl . '?action=profile;u=' . $row['id_member'] : '',
					),
					'published' => gmstrftime('%Y-%m-%dT%H:%M:%SZ', $row['poster_time']),
					'modified' => gmstrftime('%Y-%m-%dT%H:%M:%SZ', empty($row['modified_time']) ? $row['poster_time'] : $row['modified_time']),
					'id' => $scripturl . '?topic=' . $row['id_topic'] . '.0',
				);
			}]]></search>
			<add><![CDATA[						'email' => in_array(showEmailAddress(!empty($row['hide_email']), $row['id_member']), array('yes', 'yes_permission_override')) ? $row['poster_email'] : null,
						'uri' => !empty($row['id_member']) ? $scripturl . '?action=profile;u=' . $row['id_member'] : '',
					),
					'published' => Util::gmstrftime('%Y-%m-%dT%H:%M:%SZ', $row['poster_time']),
					'modified' => Util::gmstrftime('%Y-%m-%dT%H:%M:%SZ', empty($row['modified_time']) ? $row['poster_time'] : $row['modified_time']),
					'id' => $scripturl . '?topic=' . $row['id_topic'] . '.0',
				);
			}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						'email' => in_array(showEmailAddress(!empty($row['hide_email']), $row['id_member']), array('yes', 'yes_permission_override')) ? $row['poster_email'] : null,
						'uri' => !empty($row['id_member']) ? $scripturl . '?action=profile;u=' . $row['id_member'] : ''
					),
					'published' => gmstrftime('%Y-%m-%dT%H:%M:%SZ', $row['poster_time']),
					'updated' => gmstrftime('%Y-%m-%dT%H:%M:%SZ', empty($row['modified_time']) ? $row['poster_time'] : $row['modified_time']),
					'id' => $scripturl . '?topic=' . $row['id_topic'] . '.msg' . $row['id_msg'] . '#msg' . $row['id_msg'],
				);
			}]]></search>
			<add><![CDATA[						'email' => in_array(showEmailAddress(!empty($row['hide_email']), $row['id_member']), array('yes', 'yes_permission_override')) ? $row['poster_email'] : null,
						'uri' => !empty($row['id_member']) ? $scripturl . '?action=profile;u=' . $row['id_member'] : ''
					),
					'published' => Util::gmstrftime('%Y-%m-%dT%H:%M:%SZ', $row['poster_time']),
					'updated' => Util::gmstrftime('%Y-%m-%dT%H:%M:%SZ', empty($row['modified_time']) ? $row['poster_time'] : $row['modified_time']),
					'id' => $scripturl . '?topic=' . $row['id_topic'] . '.msg' . $row['id_msg'] . '#msg' . $row['id_msg'],
				);
			}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					'email' => in_array(showEmailAddress(!empty($profile['hide_email']), $profile['id']), array('yes', 'yes_permission_override')) ? $profile['email'] : null,
					'uri' => !empty($profile['website']) ? $profile['website']['url'] : ''
				),
				'published' => gmstrftime('%Y-%m-%dT%H:%M:%SZ', $user_profile[$profile['id']]['date_registered']),
				'updated' => gmstrftime('%Y-%m-%dT%H:%M:%SZ', $user_profile[$profile['id']]['last_login']),
				'id' => $scripturl . '?action=profile;u=' . $profile['id'],
				'logo' => !empty($profile['avatar']) ? $profile['avatar']['url'] : '',
			);]]></search>
			<add><![CDATA[					'email' => in_array(showEmailAddress(!empty($profile['hide_email']), $profile['id']), array('yes', 'yes_permission_override')) ? $profile['email'] : null,
					'uri' => !empty($profile['website']) ? $profile['website']['url'] : ''
				),
				'published' => Util::gmstrftime('%Y-%m-%dT%H:%M:%SZ', $user_profile[$profile['id']]['date_registered']),
				'updated' => Util::gmstrftime('%Y-%m-%dT%H:%M:%SZ', $user_profile[$profile['id']]['last_login']),
				'id' => $scripturl . '?action=profile;u=' . $profile['id'],
				'logo' => !empty($profile['avatar']) ? $profile['avatar']['url'] : '',
			);]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Notify.controller.php -->		
	<file name="CONTROLLERDIR/Notify.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Token was passed and matches our expected pattern
		$token = $this->_req->getQuery('token', 'trim', '');
		$token = urldecode($token);
		if (empty($token) || preg_match('~^(\d+_[a-zA-Z0-9./]{53}_.*)$~', $token, $match) !== 1)
		{
			return false;
		}]]></search>
			<add><![CDATA[		// Token was passed and matches our expected pattern
		$token = $this->_req->getQuery('token', 'trim', '');
		$token = urldecode($token);
		if (empty($token) || preg_match('~^(\d+_[a-zA-Z0-9./]{32,44}_[^)]*)~m', $token, $match) !== 1)
		{
			return false;
		}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for PersonalMessage.controller.php -->		
	<file name="CONTROLLERDIR/PersonalMessage.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}

		// Mark the message as "replied to".
		if (!empty($context['send_log']['sent']) && !empty($this->_req->post->replied_to) && $this->_req->getQuery('f') === 'inbox')
		{
			require_once(SUBSDIR . '/PersonalMessage.subs.php');
			setPMRepliedStatus($user_info['id'], (int) $this->_req->post->replied_to);
		}

		$failed = !empty($context['send_log']['failed']);]]></search>
			<add><![CDATA[		}

		// Mark the message as "replied to".
		$replied_to = $this->_req->getPost('replied_to', 'intval', 0);
		$box = $this->_req->getPost('f', 'trim', '');
		if (!empty($context['send_log']['sent']) && !empty($replied_to) && $box === 'inbox')
		{
			require_once(SUBSDIR . '/PersonalMessage.subs.php');
			setPMRepliedStatus($user_info['id'], $replied_to);
		}

		$failed = !empty($context['send_log']['failed']);]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Post.controller.php -->		
	<file name="CONTROLLERDIR/Post.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			// Add a quote string on the front and end.
			$context['quote']['xml'] = '[quote author=' . $row['poster_name'] . ' link=msg=' . (int) $_REQUEST['quote'] . ' date=' . $row['poster_time'] . "]\n" . $row['body'] . "\n[/quote]";
			$context['quote']['text'] = strtr(un_htmlspecialchars($context['quote']['xml']), array('\'' => '\\\'', '\\' => '\\\\', "\n" => '\\n', '</script>' => '</\' + \'script>'));
			$context['quote']['xml'] = strtr($context['quote']['xml'], array('&nbsp;' => '&#160;', '<' => '&lt;', '>' => '&gt;'));

			$context['quote']['mozilla'] = strtr(Util::htmlspecialchars($context['quote']['text']), array('&quot;' => '"'));
		}]]></search>
			<add><![CDATA[			// Add a quote string on the front and end.
			$context['quote']['xml'] = '[quote author=' . $row['poster_name'] . ' link=msg=' . (int) $_REQUEST['quote'] . ' date=' . $row['poster_time'] . "]\n" . $row['body'] . "\n[/quote]";
			$context['quote']['text'] = strtr(un_htmlspecialchars($context['quote']['xml']), array('\'' => '\\\'', '\\' => '\\\\', "\n" => '\\n', '</script>' => '</\' + \'script>'));
			$context['quote']['xml'] = strtr(Util::htmlspecialchars($context['quote']['xml']), array('&nbsp;' => '&#160;'));

			$context['quote']['mozilla'] = strtr(Util::htmlspecialchars($context['quote']['text']), array('&quot;' => '"'));
		}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Profile.controller.php -->		
	<file name="CONTROLLERDIR/Profile.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						'subsections' => array(
							'activity' => array($txt['trackActivity'], 'moderate_forum'),
							'ip' => array($txt['trackIP'], 'moderate_forum'),
							'edits' => array($txt['trackEdits'], 'moderate_forum'),
							'logins' => array($txt['trackLogins'], array('profile_view_own', 'moderate_forum')),
						),
						'permission' => array(]]></search>
			<add><![CDATA[						'subsections' => array(
							'activity' => array($txt['trackActivity'], 'moderate_forum'),
							'ip' => array($txt['trackIP'], 'moderate_forum'),
							'edits' => array($txt['trackEdits'], 'moderate_forum', 'enabled' => !empty($modSettings['modlog_enabled'])),
							'logins' => array($txt['trackLogins'], array('profile_view_own', 'moderate_forum')),
						),
						'permission' => array(]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ProfileHistory.controller.php -->		
	<file name="CONTROLLERDIR/ProfileHistory.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.6
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$subAction = $action->initialize($subActions, 'activity');
		$context['sub_action'] = $subAction;

		// Moderation must be on to track edits.
		if (empty($modSettings['modlog_enabled']))
			unset($context[$context['profile_menu_name']]['tab_data']['edits']);

		// Set a page title.
		$context['history_area'] = $subAction;
		$context['page_title'] = $txt['trackUser'] . ' - ' . $subActions[$subAction]['label'] . ' - ' . $user_profile[$this->_memID]['real_name'];]]></search>
			<add><![CDATA[		$subAction = $action->initialize($subActions, 'activity');
		$context['sub_action'] = $subAction;

		// Set a page title.
		$context['history_area'] = $subAction;
		$context['page_title'] = $txt['trackUser'] . ' - ' . $subActions[$subAction]['label'] . ' - ' . $user_profile[$this->_memID]['real_name'];]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Recent.controller.php -->		
	<file name="CONTROLLERDIR/Recent.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			$txt_like_post = '
				<li class="listlevel1' . (!empty($post['like_counter']) ? ' liked"' : '"') . '>
					<a class="linklevel1 ' . ($post['can_unlike'] ? 'unlike_button' : 'like_button') . '" href="javascript:void(0)" title="' . (!empty($post['like_counter']) ? $txt['liked_by'] . ' ' . implode(', ', $context['likes'][$post['id']]['member']) : '') . '" onclick="likePosts.prototype.likeUnlikePosts(event,' . $post['id'] . ', ' . $post['topic'] . '); return false;">' .
						(!empty($post['like_counter']) ? '<span class="likes_indicator">' . $post['like_counter'] . '</span>&nbsp;' . $txt['likes'] : $txt['like_post']) . '
					</a>
				</li>';]]></search>
			<add><![CDATA[		{
			$txt_like_post = '
				<li class="listlevel1' . (!empty($post['like_counter']) ? ' liked"' : '"') . '>
					<a class="linklevel1 ' . ($post['can_unlike'] ? 'unreact_button' : 'react_button') . '" href="javascript:void(0)" title="' . (!empty($post['like_counter']) ? $txt['liked_by'] . ' ' . implode(', ', $context['likes'][$post['id']]['member']) : '') . '" onclick="likePosts.prototype.likeUnlikePosts(event,' . $post['id'] . ', ' . $post['topic'] . '); return false;">' .
						(!empty($post['like_counter']) ? '<span class="likes_indicator">' . $post['like_counter'] . '</span>&nbsp;' . $txt['likes'] : $txt['like_post']) . '
					</a>
				</li>';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			$txt_like_post = '
				<li class="listlevel1 liked">
					<a href="javascript:void(0)" title="' . $txt['liked_by'] . ' ' . implode(', ', $context['likes'][$post['id']]['member']) . '" class="linklevel1 likes_button">
						<span class="likes_indicator">' . $post['like_counter'] . '</span>&nbsp;' . $txt['likes'] . '
					</a>
				</li>';]]></search>
			<add><![CDATA[		{
			$txt_like_post = '
				<li class="listlevel1 liked">
					<a href="javascript:void(0)" title="' . $txt['liked_by'] . ' ' . implode(', ', $context['likes'][$post['id']]['member']) . '" class="linklevel1 reacts_button">
						<span class="likes_indicator">' . $post['like_counter'] . '</span>&nbsp;' . $txt['likes'] . '
					</a>
				</li>';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					}),
				});

				$(".like_button, .unlike_button, .likes_button").SiteTooltip({
					hoverIntent: {
						sensitivity: 10,
						interval: 150,]]></search>
			<add><![CDATA[					}),
				});

				$(".react_button, .unreact_button, .reacts_button").SiteTooltip({
					hoverIntent: {
						sensitivity: 10,
						interval: 150,]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Register.controller.php -->		
	<file name="CONTROLLERDIR/Register.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Handle a string as a birth date...
		if ($this->_req->getPost('birthdate', 'trim', '') !== '')
			$this->_req->post->birthdate = strftime('%Y-%m-%d', strtotime($this->_req->post->birthdate));
		// Or birthdate parts...
		elseif (!empty($this->_req->post->bday1) && !empty($this->_req->post->bday2))
			$this->_req->post->birthdate = sprintf('%04d-%02d-%02d', empty($this->_req->post->bday3) ? 0 : (int) $this->_req->post->bday3, (int) $this->_req->post->bday1, (int) $this->_req->post->bday2);]]></search>
			<add><![CDATA[
		// Handle a string as a birth date...
		if ($this->_req->getPost('birthdate', 'trim', '') !== '')
			$this->_req->post->birthdate = Util::strftime('%Y-%m-%d', strtotime($this->_req->post->birthdate));
		// Or birthdate parts...
		elseif (!empty($this->_req->post->bday1) && !empty($this->_req->post->bday2))
			$this->_req->post->birthdate = sprintf('%04d-%02d-%02d', empty($this->_req->post->bday3) ? 0 : (int) $this->_req->post->bday3, (int) $this->_req->post->bday1, (int) $this->_req->post->bday2);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		$lang = !empty($modSettings['userLanguage']) ? $modSettings['userLanguage'] : 'english';
		$agreement = new Agreement($lang);
		$agreement->accept($memberID, $user_info['ip'], empty($modSettings['agreementRevision']) ? strftime('%Y-%m-%d', forum_time(false)) : $modSettings['agreementRevision']);

		if (!empty($modSettings['requirePrivacypolicy']))
		{
			$policy = new \PrivacyPolicy($lang);
			$policy->accept($memberID, $user_info['ip'], empty($modSettings['privacypolicyRevision']) ? strftime('%Y-%m-%d', forum_time(false)) : $modSettings['privacypolicyRevision']);
		}

		// Do our spam protection now.]]></search>
			<add><![CDATA[
		$lang = !empty($modSettings['userLanguage']) ? $modSettings['userLanguage'] : 'english';
		$agreement = new Agreement($lang);
		$agreement->accept($memberID, $user_info['ip'], empty($modSettings['agreementRevision']) ? Util::strftime('%Y-%m-%d', forum_time(false)) : $modSettings['agreementRevision']);

		if (!empty($modSettings['requirePrivacypolicy']))
		{
			$policy = new \PrivacyPolicy($lang);
			$policy->accept($memberID, $user_info['ip'], empty($modSettings['privacypolicyRevision']) ? Util::strftime('%Y-%m-%d', forum_time(false)) : $modSettings['privacypolicyRevision']);
		}

		// Do our spam protection now.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if (isset($this->_req->post->accept_agreement))
		{
			$agreement = new Agreement($user_info['language']);
			$agreement->accept($user_info['id'], $user_info['ip'], empty($modSettings['agreementRevision']) ? strftime('%Y-%m-%d', forum_time(false)) : $modSettings['agreementRevision']);

			$_SESSION['agreement_accepted'] = true;
			if (isset($_SESSION['agreement_url_redirect']))]]></search>
			<add><![CDATA[		if (isset($this->_req->post->accept_agreement))
		{
			$agreement = new Agreement($user_info['language']);
			$agreement->accept($user_info['id'], $user_info['ip'], empty($modSettings['agreementRevision']) ? Util::strftime('%Y-%m-%d', forum_time(false)) : $modSettings['agreementRevision']);

			$_SESSION['agreement_accepted'] = true;
			if (isset($_SESSION['agreement_url_redirect']))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		if (isset($this->_req->post->accept_agreement))
		{
			$policy->accept($user_info['id'], $user_info['ip'], empty($modSettings['privacypolicyRevision']) ? strftime('%Y-%m-%d', forum_time(false)) : $modSettings['privacypolicyRevision']);

			$_SESSION['privacypolicy_accepted'] = true;
			if (isset($_SESSION['privacypolicy_url_redirect']))]]></search>
			<add><![CDATA[
		if (isset($this->_req->post->accept_agreement))
		{
			$policy->accept($user_info['id'], $user_info['ip'], empty($modSettings['privacypolicyRevision']) ? Util::strftime('%Y-%m-%d', forum_time(false)) : $modSettings['privacypolicyRevision']);

			$_SESSION['privacypolicy_accepted'] = true;
			if (isset($_SESSION['privacypolicy_url_redirect']))]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Search.controller.php -->		
	<file name="CONTROLLERDIR/Search.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.8
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$query = trim($query, '\*+');
			$query = strtr(Util::htmlspecialchars($query), array('\\\'' => '\''));

			$body_highlighted = preg_replace_callback('/((<[^>]*)|' . preg_quote(strtr($query, array('\'' => '&#039;')), '/') . ')/iu', array($this, '_highlighted_callback'), $body_highlighted);
			$subject_highlighted = preg_replace('/(' . preg_quote($query, '/') . ')/iu', '<strong class="highlight">$1</strong>', $subject_highlighted);
		}
]]></search>
			<add><![CDATA[			$query = trim($query, '\*+');
			$query = strtr(Util::htmlspecialchars($query), array('\\\'' => '\''));

			$search_highlight = preg_quote(strtr($query, array('\'' => '&#039;')), '/');
			$body_highlighted = preg_replace_callback('/((<[^>]*)|(\b' . $search_highlight . '\b)|'. $search_highlight . ')/iu', array($this, '_highlighted_callback'), $body_highlighted);
			$subject_highlighted = preg_replace('/(' . preg_quote($query, '/') . ')/iu', '<strong class="highlight">$1</strong>', $subject_highlighted);
		}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	private function _highlighted_callback($matches)
	{
		return isset($matches[2]) && $matches[2] == $matches[1] ? stripslashes($matches[1]) : '<span class="highlight">' . $matches[1] . '</span>';
	}

	/**]]></search>
			<add><![CDATA[	 */
	private function _highlighted_callback($matches)
	{
		if (isset($matches[2]) && $matches[2] === $matches[1])
		{
			return stripslashes($matches[1]);
		}

		// Full word match
		if (isset($matches[3]))
		{
			return '<span class="highlight">' . $matches[3] . '</span>';
		}

		// Partial word match
		return '<span class="highlight" style="font-weight: 600;font-style: italic;">' . $matches[1] . '</span>';
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		$default_factors = $this->_weight_factors = array(
			'frequency' => array(
				'search' => 'COUNT(*) / (MAX(t.num_replies) + 1)',
				'results' => '(t.num_replies + 1)',
			),
			'age' => array(]]></search>
			<add><![CDATA[
		$default_factors = $this->_weight_factors = array(
			'frequency' => array(
				'search' => 'COUNT(*) / (CASE WHEN MAX(t.num_replies) < 5 THEN 5 ELSE MAX(t.num_replies) + 1 END)',
				'results' => '(t.num_replies + 1)',
			),
			'age' => array(]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'results' => 't.is_sticky',
			),
			'likes' => array(
				'search' => 'MAX(t.num_likes)',
				'results' => 't.num_likes',
			),
		);]]></search>
			<add><![CDATA[				'results' => 't.is_sticky',
			),
			'likes' => array(
				'search' => 'CASE WHEN t.num_likes > 20 THEN 1 ELSE t.num_likes / 20 END',
				'results' => 't.num_likes',
			),
		);]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Stats.controller.php -->		
	<file name="CONTROLLERDIR/Stats.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// This would be the amount of time the forum has been up... in days...
		$total_days_up = ceil((time() - strtotime($averages['date'])) / (60 * 60 * 24));
		$date = strftime('%Y-%m-%d', forum_time(false));

		// General forum stats
		$context['general_statistics']['left'] = array(]]></search>
			<add><![CDATA[
		// This would be the amount of time the forum has been up... in days...
		$total_days_up = ceil((time() - strtotime($averages['date'])) / (60 * 60 * 24));
		$date = Util::strftime('%Y-%m-%d', forum_time(false));

		// General forum stats
		$context['general_statistics']['left'] = array(]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Db-abstract.class.php -->		
	<file name="SOURCEDIR/database/Db-abstract.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.6
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}

		// A special case - we want the file and line numbers for debugging.
		if ($error_type == 'return')
			return array($file, $line);

		// Is always a critical error.]]></search>
			<add><![CDATA[		}

		// A special case - we want the file and line numbers for debugging.
		if ($error_type === 'return')
			return array($file, $line);

		// Is always a critical error.]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Db-mysql.class.php -->		
	<file name="SOURCEDIR/database/Db-mysql.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2004-2011, GreyWyvern - All rights reserved.
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2004-2011, GreyWyvern - All rights reserved.
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		else
			$db_port = 0;

		// Select the database. Maybe.
		if (empty($db_options['dont_select_db']))
			$connection = @mysqli_connect((!empty($db_options['persist']) ? 'p:' : '') . $db_server, $db_user, $db_passwd, $db_name, $db_port);]]></search>
			<add><![CDATA[		else
			$db_port = 0;

		// PHP 8.1 default is to throw exceptions, this reverts it to the <=php8 semantics
		mysqli_report(MYSQLI_REPORT_OFF);

		// Select the database. Maybe.
		if (empty($db_options['dont_select_db']))
			$connection = @mysqli_connect((!empty($db_options['persist']) ? 'p:' : '') . $db_server, $db_user, $db_passwd, $db_name, $db_port);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		return $ret;
	}

	/**
	 * Checks if the string contains any 4byte chars and if so,
	 * converts them into HTML entities.
	 *
	 * This is necessary because MySQL utf8 doesn't know how to store such
	 * characters and would generate an error any time one is used.
	 * The 4byte chars are used by emoji
	 *
	 * @param string $string
	 * @return string
	 */
	private function _clean_4byte_chars($string)
	{
		global $modSettings;

		if (!empty($modSettings['using_utf8mb4']))
			return $string;

		$result = $string;
		$ord = array_map('ord', str_split($string));

		// If we are in the 4-byte range
		if (max($ord) >= 240)
		{
			// Byte length
			$length = strlen($string);
			$result = '';

			// Look for a 4byte marker
			for ($i = 0; $i < $length; $i++)
			{
				// The first byte of a 4-byte character encoding starts with the bytes 0xF0-0xF4 (240 <-> 244)
				// but look all the way to 247 for safe measure
				$ord1 = $ord[$i];
				if ($ord1 >= 240 && $ord1 <= 247)
				{
					// Replace it with the corresponding html entity
					$entity = $this->_uniord(chr($ord[$i]) . chr($ord[$i + 1]) . chr($ord[$i + 2]) . chr($ord[$i + 3]));
					if ($entity === false)
						$result .= "\xEF\xBF\xBD";
					else
						$result .= '&#x' . dechex($entity) . ';';
					$i += 3;
				}
				else
					$result .= $string[$i];
			}
		}

		return $result;
	}

	/**
	 * Converts a 4byte char into the corresponding HTML entity code.
	 *
	 * This function is derived from:
	 * http://www.greywyvern.com/code/php/utf8_html.phps
	 *
	 * @param string $c
	 * @return integer|false
	 */
	private function _uniord($c)
	{
		if (ord($c[0]) >= 0 && ord($c[0]) <= 127)
			return ord($c[0]);
		if (ord($c[0]) >= 192 && ord($c[0]) <= 223)
			return (ord($c[0]) - 192) * 64 + (ord($c[1]) - 128);
		if (ord($c[0]) >= 224 && ord($c[0]) <= 239)
			return (ord($c[0]) - 224) * 4096 + (ord($c[1]) - 128) * 64 + (ord($c[2]) - 128);
		if (ord($c[0]) >= 240 && ord($c[0]) <= 247)
			return (ord($c[0]) - 240) * 262144 + (ord($c[1]) - 128) * 4096 + (ord($c[2]) - 128) * 64 + (ord($c[3]) - 128);
		if (ord($c[0]) >= 248 && ord($c[0]) <= 251)
			return (ord($c[0]) - 248) * 16777216 + (ord($c[1]) - 128) * 262144 + (ord($c[2]) - 128) * 4096 + (ord($c[3]) - 128) * 64 + (ord($c[4]) - 128);
		if (ord($c[0]) >= 252 && ord($c[0]) <= 253)
			return (ord($c[0]) - 252) * 1073741824 + (ord($c[1]) - 128) * 16777216 + (ord($c[2]) - 128) * 262144 + (ord($c[3]) - 128) * 4096 + (ord($c[4]) - 128) * 64 + (ord($c[5]) - 128);
		if (ord($c[0]) >= 254 && ord($c[0]) <= 255)
			return false;
	}

	/**
	 * Affected rows from previous operation.
	 *]]></search>
			<add><![CDATA[		return $ret;
	}

	/**
	 * Affected rows from previous operation.
	 *]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function escape_string($string)
	{
		$string = $this->_clean_4byte_chars($string);

		return mysqli_real_escape_string($this->_connection, $string);
	}]]></search>
			<add><![CDATA[	 */
	public function escape_string($string)
	{
		// This is necessary because MySQL utf8 doesn't know how to store such
		// characters and would generate an error any time one is used.
		// The 4byte chars are used by emoji
		$string = Util::clean_4byte_chars($string);

		return mysqli_real_escape_string($this->_connection, $string);
	}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Db-postgresql.class.php -->		
	<file name="SOURCEDIR/database/Db-postgresql.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			return pg_fetch_row($result, $counter);

		// Reset the row counter...
		if (!isset($db_row_count[(int) $result]))
			$db_row_count[(int) $result] = 0;

		// Return the right row.
		return @pg_fetch_row($result, $db_row_count[(int) $result]++);
	}

	/**]]></search>
			<add><![CDATA[			return pg_fetch_row($result, $counter);

		// Reset the row counter...
		if (!isset($db_row_count[$this->seekCounter($result)]))
			$db_row_count[$this->seekCounter($result)] = 0;

		// Return the right row.
		return @pg_fetch_row($result, $db_row_count[$this->seekCounter($result)]++);
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function free_result($result)
	{
		// Just delegate to the native function
		pg_free_result($result);
	}]]></search>
			<add><![CDATA[	 */
	public function free_result($result)
	{
		global $db_row_count;

		$id = $this->seekCounter($result);
		// Reset the row counter...
		if (isset($db_row_count[$id]))
			unset($db_row_count[$id]);

		// Just delegate to the native function
		pg_free_result($result);
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		global $db_row_count;

		$db_row_count[(int) $request] = $counter;

		return true;
	}]]></search>
			<add><![CDATA[	{
		global $db_row_count;

		$db_row_count[$this->seekCounter($request)] = $counter;

		return true;
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Decide which connection to use
		$connection = $connection === null ? $this->_connection : $connection;

		if (is_resource($connection))
			return pg_last_error($connection);
	}
]]></search>
			<add><![CDATA[		// Decide which connection to use
		$connection = $connection === null ? $this->_connection : $connection;

		if (is_resource($connection) || $connection instanceof \PgSql\Connection)
			return pg_last_error($connection);
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function db_server_version()
	{
		$version = pg_version();

		return $version['server'];
	}]]></search>
			<add><![CDATA[	 */
	public function db_server_version()
	{
		$version = pg_version($this->_connection);

		return $version['server'];
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function escape_string($string)
	{
		return pg_escape_string($string);
	}

	/**]]></search>
			<add><![CDATA[	 */
	public function escape_string($string)
	{
		return pg_escape_string($this->_connection, $string);
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			return pg_fetch_assoc($request, $counter);

		// Reset the row counter...
		if (!isset($db_row_count[(int) $request]))
			$db_row_count[(int) $request] = 0;

		// Return the right row.
		return @pg_fetch_assoc($request, $db_row_count[(int) $request]++);
	}

	/**]]></search>
			<add><![CDATA[			return pg_fetch_assoc($request, $counter);

		// Reset the row counter...
		if (!isset($db_row_count[$this->seekCounter($request)]))
			$db_row_count[$this->seekCounter($request)] = 0;

		// Return the right row.
		return @pg_fetch_assoc($request, $db_row_count[$this->seekCounter($request)]++);
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	public function db_server_info()
	{
		// give info on client! we use it in install and upgrade and such things.
		$version = pg_version();

		return $version['client'];
	}]]></search>
			<add><![CDATA[	public function db_server_info()
	{
		// give info on client! we use it in install and upgrade and such things.
		$version = pg_version($this->_connection);

		return $version['client'];
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function db_client_version()
	{
		$version = pg_version();

		return $version['client'];
	}]]></search>
			<add><![CDATA[	 */
	public function db_client_version()
	{
		$version = pg_version($this->_connection);

		return $version['client'];
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function validConnection($connection = null)
	{
		return is_resource($connection);
	}
}]]></search>
			<add><![CDATA[	 */
	public function validConnection($connection = null)
	{
		return (is_resource($connection) || $connection instanceof \PgSql\Connection);
	}

	/**
	 * Return an id for the resource/object
	 *
	 * @param resource|object $resource of returned result set
	 */
	public function seekCounter($resource)
	{
		global $db_row_count;

		if(!is_resource($resource) && ($resource instanceof \PgSql\Result))
		{
			$id = spl_object_id($resource);
		}
		else
		{
			$id = (int)$resource;
		}

		return $id;
	}
}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for AttachmentsPostModule.class.php -->		
	<file name="SOURCEDIR/modules/Attachments/AttachmentsPostModule.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$context['attachments']['can']['post'] = self::$_attach_level == 1 && (allowedTo('post_attachment') || ($modSettings['postmod_active'] && allowedTo('post_unapproved_attachments')));
		$context['attachments']['ila_enabled'] = !empty($modSettings['attachment_inline_enabled']);

		if ($context['attachments']['can']['post'])
		{
			// If there are attachments, calculate the total size and how many.
			$attachments = array();
			$attachments['total_size'] = 0;
			$attachments['quantity'] = 0;

			// If this isn't a new post, check the current attachments.
			if (isset($_REQUEST['msg']))
			{]]></search>
			<add><![CDATA[		$context['attachments']['can']['post'] = self::$_attach_level == 1 && (allowedTo('post_attachment') || ($modSettings['postmod_active'] && allowedTo('post_unapproved_attachments')));
		$context['attachments']['ila_enabled'] = !empty($modSettings['attachment_inline_enabled']);

		// If there are attachments, calculate the total size and how many.
		$attachments = array();
		$attachments['total_size'] = 0;
		$attachments['quantity'] = 0;

		if ($context['attachments']['can']['post'])
		{
			// If this isn't a new post, check the current attachments.
			if (isset($_REQUEST['msg']))
			{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						if ($context['current_action'] !== 'post2')
						{
							$txt['error_attach_errors'] = empty($txt['error_attach_errors']) ? '<br />' : '';
							$txt['error_attach_errors'] .= vsprintf($txt['attach_warning'], $attachment['name']) . '<div class="attachmenterrors">';
							foreach ($attachment['errors'] as $error)
								$txt['error_attach_errors'] .= (is_array($error) ? vsprintf($txt[$error[0]], $error[1]) : $txt[$error]) . '<br  />';
							$txt['error_attach_errors'] .= '</div>';]]></search>
			<add><![CDATA[						if ($context['current_action'] !== 'post2')
						{
							$txt['error_attach_errors'] = empty($txt['error_attach_errors']) ? '<br />' : '';
							$txt['error_attach_errors'] .= sprintf($txt['attach_warning'], $attachment['name']) . '<div class="attachmenterrors">';
							foreach ($attachment['errors'] as $error)
								$txt['error_attach_errors'] .= (is_array($error) ? vsprintf($txt[$error[0]], $error[1]) : $txt[$error]) . '<br  />';
							$txt['error_attach_errors'] .= '</div>';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			// If they've unchecked an attachment, they may still want to attach that many more files, but don't allow more than num_allowed_attachments.
			$context['attachments']['num_allowed'] = empty($modSettings['attachmentNumPerPostLimit']) ? 50 : min($modSettings['attachmentNumPerPostLimit'] - count($context['attachments']['current']), $modSettings['attachmentNumPerPostLimit']);
			$context['attachments']['can']['post_unapproved'] = allowedTo('post_attachment');
			$context['attachments']['restrictions'] = array();
			if (!empty($modSettings['attachmentCheckExtensions']))
				$context['attachments']['allowed_extensions'] = strtr(strtolower($modSettings['attachmentExtensions']), array(',' => ', '));]]></search>
			<add><![CDATA[			// If they've unchecked an attachment, they may still want to attach that many more files, but don't allow more than num_allowed_attachments.
			$context['attachments']['num_allowed'] = empty($modSettings['attachmentNumPerPostLimit']) ? 50 : min($modSettings['attachmentNumPerPostLimit'] - count($context['attachments']['current']), $modSettings['attachmentNumPerPostLimit']);
			$context['attachments']['can']['post_unapproved'] = allowedTo('post_attachment');
			$context['attachments']['total_size'] = $attachments['total_size'];
			$context['attachments']['quantity'] = $attachments['quantity'];
			$context['attachments']['restrictions'] = array();
			if (!empty($modSettings['attachmentCheckExtensions']))
				$context['attachments']['allowed_extensions'] = strtr(strtolower($modSettings['attachmentExtensions']), array(',' => ', '));]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			{
				if (!empty($modSettings[$type]))
				{
					$context['attachments']['restrictions'][] = sprintf($txt['attach_restrict_' . $type], comma_format($modSettings[$type], 0));

					// Show some numbers. If they exist.
					if ($type === 'attachmentNumPerPostLimit' && $attachments['quantity'] > 0)
						$context['attachments']['restrictions'][] = sprintf($txt['attach_remaining'], $modSettings['attachmentNumPerPostLimit'] - $attachments['quantity']);
					elseif ($type === 'attachmentPostLimit' && $attachments['total_size'] > 0)
						$context['attachments']['restrictions'][] = sprintf($txt['attach_available'], comma_format(round(max($modSettings['attachmentPostLimit'] - ($attachments['total_size'] / 1028), 0)), 0));
				}
			}
		}]]></search>
			<add><![CDATA[			{
				if (!empty($modSettings[$type]))
				{
					$context['attachments']['restrictions'][] = $type === 'attachmentNumPerPostLimit'
						? sprintf($txt['attach_restrict_' . $type], comma_format($modSettings[$type], 0))
						: sprintf($txt['attach_restrict_' . $type], byte_format($modSettings[$type] * 1024));

					// Show some numbers.
					if ($type === 'attachmentNumPerPostLimit')
						$context['attachments']['restrictions'][] = sprintf($txt['attach_remaining'], '<span id="' . $type . '">' . ($modSettings['attachmentNumPerPostLimit'] - $attachments['quantity']) . '</span>');
					elseif ($type === 'attachmentPostLimit')
						$context['attachments']['restrictions'][] = sprintf($txt['attach_available'], '<span id="' . $type . '">' . byte_format(max(($modSettings['attachmentPostLimit'] * 1024) - $attachments['total_size'], 0)) . '</span>');
				}
			}
		}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						if (!empty($attachmentOptions['thumb']))
							$this->_saved_attach_id[] = $attachmentOptions['thumb'];

						$msgOptions['body'] = preg_replace('~\[attach(.*?)\]' . $attachment['public_attachid'] . '\[\/attach\]~', '[attach$1]' . $attachmentOptions['id'] . '[/attach]', $msgOptions['body']);
					}
				}]]></search>
			<add><![CDATA[						if (!empty($attachmentOptions['thumb']))
							$this->_saved_attach_id[] = $attachmentOptions['thumb'];

						$msgOptions['body'] = preg_replace('~\[attachurl(?:.*?)\]' . $attachment['public_attachid'] . '\[\/attachurl\]~', '[attachurl]' . $attachmentOptions['id'] . '[/attachurl]', $msgOptions['body']);
						$msgOptions['body'] = preg_replace('~\[attach(.*?)\]' . $attachment['public_attachid'] . '\[\/attach\]~', '[attach$1]' . $attachmentOptions['id'] . '[/attach]', $msgOptions['body']);
					}
				}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for CalendarPostModule.class.php -->		
	<file name="SOURCEDIR/modules/Calendar/CalendarPostModule.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.6
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}
		$context['make_event'] = self::$_make_event;
		$context['cal_minyear'] = $modSettings['cal_minyear'];
		$context['cal_maxyear'] = date('Y') + $modSettings['cal_limityear'];

		if (self::$_make_event)
			return array(]]></search>
			<add><![CDATA[		}
		$context['make_event'] = self::$_make_event;
		$context['cal_minyear'] = $modSettings['cal_minyear'];
		$context['cal_maxyear'] = (int) date('Y') + (int) $modSettings['cal_limityear'];

		if (self::$_make_event)
			return array(]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			if ($context['event']['month'] < 1 || $context['event']['month'] > 12)
				throw new Elk_Exception('invalid_month', false);

			if ($context['event']['year'] < $modSettings['cal_minyear'] || $context['event']['year'] > date('Y') + $modSettings['cal_limityear'])
				throw new Elk_Exception('invalid_year', false);

			// Get a list of boards they can post in.]]></search>
			<add><![CDATA[			if ($context['event']['month'] < 1 || $context['event']['month'] > 12)
				throw new Elk_Exception('invalid_month', false);

			if ($context['event']['year'] < $modSettings['cal_minyear'] || $context['event']['year'] > (int) date('Y') + (int) $modSettings['cal_limityear'])
				throw new Elk_Exception('invalid_year', false);

			// Get a list of boards they can post in.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}

		// Find the last day of the month.
		$context['event']['last_day'] = (int) strftime('%d', mktime(0, 0, 0, $context['event']['month'] == 12 ? 1 : $context['event']['month'] + 1, 0, $context['event']['month'] == 12 ? $context['event']['year'] + 1 : $context['event']['year']));

		$context['event']['board'] = !empty($board) ? $board : $modSettings['cal_defaultboard'];
	}]]></search>
			<add><![CDATA[		}

		// Find the last day of the month.
		$context['event']['last_day'] = (int) Util::strftime('%d', mktime(0, 0, 0, $context['event']['month'] == 12 ? 1 : $context['event']['month'] + 1, 0, $context['event']['month'] == 12 ? $context['event']['year'] + 1 : $context['event']['year']));

		$context['event']['board'] = !empty($board) ? $board : $modSettings['cal_defaultboard'];
	}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Agreement.class.php -->		
	<file name="SUBSDIR/Agreement.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.4
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				array(
					'version' => $version,
					'id_member' => $id_member,
					'accepted_date' => strftime('%Y-%m-%d', forum_time(false)),
					'accepted_ip' => $ip,
				)
			),]]></search>
			<add><![CDATA[				array(
					'version' => $version,
					'id_member' => $id_member,
					'accepted_date' => Util::strftime('%Y-%m-%d', forum_time(false)),
					'accepted_ip' => $ip,
				)
			),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	protected function _backupId()
	{
		$backup_id = strftime('%Y-%m-%d', forum_time(false));
		$counter = '';
		$merger = '';
]]></search>
			<add><![CDATA[
	protected function _backupId()
	{
		$backup_id = Util::strftime('%Y-%m-%d', forum_time(false));
		$counter = '';
		$merger = '';
]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Attachments.subs.php -->		
	<file name="SUBSDIR/Attachments.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if (empty($errors))
		{
			$_SESSION['temp_attachments'][$attachID] = array(
				'name' => htmlspecialchars(basename($_FILES['attachment']['name'][$n]), ENT_COMPAT, 'UTF-8'),
				'tmp_name' => $destName,
				'attachid' => $attachID,
				'public_attachid' => 'post_tmp_' . $user_info['id'] . '_' . md5(mt_rand()),]]></search>
			<add><![CDATA[		if (empty($errors))
		{
			$_SESSION['temp_attachments'][$attachID] = array(
				'name' => Util::clean_4byte_chars(Util::htmlspecialchars(basename($_FILES['attachment']['name'][$n]))),
				'tmp_name' => $destName,
				'attachid' => $attachID,
				'public_attachid' => 'post_tmp_' . $user_info['id'] . '_' . md5(mt_rand()),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Want to correct for phonetographer photos?
		if (!empty($modSettings['attachment_autorotate']) && empty($_SESSION['temp_attachments'][$attachID]['errors']) && substr($_SESSION['temp_attachments'][$attachID]['type'], 0, 5) === 'image')
		{
			autoRotateImage($_SESSION['temp_attachments'][$attachID]['tmp_name']);
		}
]]></search>
			<add><![CDATA[		// Want to correct for phonetographer photos?
		if (!empty($modSettings['attachment_autorotate']) && empty($_SESSION['temp_attachments'][$attachID]['errors']) && substr($_SESSION['temp_attachments'][$attachID]['type'], 0, 5) === 'image')
		{
			require_once(SUBSDIR . '/Graphics.subs.php');
			autoRotateImage($_SESSION['temp_attachments'][$attachID]['tmp_name']);
		}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	$db = database();

	// No data or missing data .... Not necessarily needed, but in case a mod author missed something.
	if (empty($_SESSION['temp_attachments'][$attachID]))
		$error = '$_SESSION[\'temp_attachments\'][$attachID]';]]></search>
			<add><![CDATA[
	$db = database();

	require_once(SUBSDIR . '/Graphics.subs.php');

	// No data or missing data .... Not necessarily needed, but in case a mod author missed something.
	if (empty($_SESSION['temp_attachments'][$attachID]))
		$error = '$_SESSION[\'temp_attachments\'][$attachID]';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		return false;
	}

	// First, the dreaded security check. Sorry folks, but this should't be avoided
	$size = elk_getimagesize($_SESSION['temp_attachments'][$attachID]['tmp_name']);
	$valid_mime = getValidMimeImageType($size[2]);

	if ($valid_mime !== '')
	{
		require_once(SUBSDIR . '/Graphics.subs.php');
		if (!checkImageContents($_SESSION['temp_attachments'][$attachID]['tmp_name'], !empty($modSettings['attachment_image_paranoid'])))
		{
			// It's bad. Last chance, maybe we can re-encode it?]]></search>
			<add><![CDATA[		return false;
	}

	// Allow addons to make pre checks or adjustments
	call_integration_hook('integrate_attachment_checks', array($attachID));

	$size = elk_getimagesize($_SESSION['temp_attachments'][$attachID]['tmp_name']);
	$valid_mime = getValidMimeImageType($size[2]);

	// If it is a webp image, and ACP support is OFF, extension is on, server is capable, then convert it!
	if (empty($modSettings['attachment_webp_enable'])
		&& $size[2] === 18
		&& hasWebpSupport()
		&& (empty($modSettings['attachmentCheckExtensions']) || stripos($modSettings['attachmentExtensions'], ',webp') !== false))
	{
		// We do this before the checks as it will increase the filesize
		$format = setDefaultFormat($_SESSION['temp_attachments'][$attachID]['tmp_name']);
		if (reencodeImage($_SESSION['temp_attachments'][$attachID]['tmp_name'], $format))
		{
			// Update to what it now is (webp to png or jpg)
			$size = elk_getimagesize($_SESSION['temp_attachments'][$attachID]['tmp_name']);
			$valid_mime = getValidMimeImageType($size[2]);
			$ext = str_replace('jpeg', 'jpg', substr($valid_mime, strpos($valid_mime, '/') + 1));
			$_SESSION['temp_attachments'][$attachID]['type'] = $valid_mime;
			$_SESSION['temp_attachments'][$attachID]['name'] .= '.' . $ext;
			$_SESSION['temp_attachments'][$attachID]['size'] = filesize($_SESSION['temp_attachments'][$attachID]['tmp_name']);
		}
	}

	// First, the dreaded security check. Sorry folks, but this should't be avoided
	if ($valid_mime !== '')
	{
		if (!checkImageContents($_SESSION['temp_attachments'][$attachID]['tmp_name'], !empty($modSettings['attachment_image_paranoid'])))
		{
			// It's bad. Last chance, maybe we can re-encode it?]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			if (!(empty($size)) && ($size[2] !== $old_format))
			{
				$valid_mime = getValidMimeImageType($size[2]);
				if ($valid_mime !== '')
				{
					$_SESSION['temp_attachments'][$attachID]['type'] = $valid_mime;
				}
			}
		}]]></search>
			<add><![CDATA[			if (!(empty($size)) && ($size[2] !== $old_format))
			{
				$valid_mime = getValidMimeImageType($size[2]);
				$ext = str_replace('jpeg', 'jpg', substr($valid_mime, strpos($valid_mime, '/') + 1));
				if ($valid_mime !== '')
				{
					$_SESSION['temp_attachments'][$attachID]['type'] = $valid_mime;
					$_SESSION['temp_attachments'][$attachID]['name'] .= '.' . $ext;
					$_SESSION['temp_attachments'][$attachID]['size'] = filesize($_SESSION['temp_attachments'][$attachID]['tmp_name']);
				}
			}
		}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			INNER JOIN {db_prefix}boards AS b ON (b.id_board = m.id_board AND {query_see_board})
		WHERE id_attach = {int:attach}
			AND attachment_type = {int:type}
			AND a.approved = {int:approved}
		LIMIT 1',
		array(
			'attach' => $id_attach,
			'approved' => 1,
			'type' => 0,
		)
	);]]></search>
			<add><![CDATA[			INNER JOIN {db_prefix}boards AS b ON (b.id_board = m.id_board AND {query_see_board})
		WHERE id_attach = {int:attach}
			AND attachment_type = {int:type}
		LIMIT 1',
		array(
			'attach' => $id_attach,
			'type' => 0,
		)
	);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$attachmentData = $db->fetch_assoc($request);
		$attachmentData['is_image'] = substr($attachmentData['mime_type'], 0, 5) === 'image';
		$attachmentData['size'] = byte_format($attachmentData['size']);
	}
	$db->free_result($request);
]]></search>
			<add><![CDATA[		$attachmentData = $db->fetch_assoc($request);
		$attachmentData['is_image'] = substr($attachmentData['mime_type'], 0, 5) === 'image';
		$attachmentData['size'] = byte_format($attachmentData['size']);
		$attachmentData['is_approved'] = $attachmentData['approved'] === '1';
	}
	$db->free_result($request);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	$db = database();

	$ext = !empty($modSettings['avatar_download_png']) ? 'png' : 'jpeg';
	$destName = 'avatar_' . $memID . '_' . time() . '.' . $ext;

	// Just making sure there is a non-zero member.
	if (empty($memID))
		return false;

	require_once(SUBSDIR . '/ManageAttachments.subs.php');
	removeAttachments(array('id_member' => $memID));

	$id_folder = getAttachmentPathID();]]></search>
			<add><![CDATA[
	$db = database();

	// Just making sure there is a non-zero member.
	if (empty($memID))
		return false;

	require_once(SUBSDIR . '/Graphics.subs.php');
	require_once(SUBSDIR . '/ManageAttachments.subs.php');

	$valid_avatar_extensions = array(
		2 => 'jpeg',
		3 => 'png',
		18 => 'webp'
	);

 	$format = setDefaultFormat($temporary_path);
	$ext = $valid_avatar_extensions[$format];
	$destName = 'avatar_' . $memID . '_' . time() . '.' . $ext;

	// Clear out any this member may have
	removeAttachments(array('id_member' => $memID));

	$id_folder = getAttachmentPathID();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$destName = empty($avatar_hash) ? $destName : $path . '/' . $attachID . '_' . $avatar_hash . '.elk';

	// Resize it.
	require_once(SUBSDIR . '/Graphics.subs.php');
	if (!empty($modSettings['avatar_download_png']))
		$success = resizeImageFile($temporary_path, $tempName, $max_width, $max_height, 3);
	else
		$success = resizeImageFile($temporary_path, $tempName, $max_width, $max_height);

	if ($success)
	{]]></search>
			<add><![CDATA[	$destName = empty($avatar_hash) ? $destName : $path . '/' . $attachID . '_' . $avatar_hash . '.elk';

	// Resize it.
	$success = resizeImageFile($temporary_path, $tempName, $max_width, $max_height, $format);

	if ($success)
	{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			if (!empty($modSettings['attachmentThumbnails']) && !empty($modSettings['attachmentThumbWidth']) && !empty($modSettings['attachmentThumbHeight']) && ($attachment['width'] > $modSettings['attachmentThumbWidth'] || $attachment['height'] > $modSettings['attachmentThumbHeight']) && strlen($attachment['filename']) < 249)
			{
				// A proper thumb doesn't exist yet? Create one! Or, it needs update.
				if (empty($attachment['id_thumb']) || $attachment['thumb_width'] > $modSettings['attachmentThumbWidth'] || $attachment['thumb_height'] > $modSettings['attachmentThumbHeight'] || ($attachment['thumb_width'] < $modSettings['attachmentThumbWidth'] && $attachment['thumb_height'] < $modSettings['attachmentThumbHeight']))
				{
					$filename = getAttachmentFilename($attachment['filename'], $attachment['id_attach'], $attachment['id_folder'], false, $attachment['file_hash']);
					$attachment = array_merge($attachment, updateAttachmentThumbnail($filename, $attachment['id_attach'], $id_msg, $attachment['id_thumb'], $attachment['filename']));]]></search>
			<add><![CDATA[			if (!empty($modSettings['attachmentThumbnails']) && !empty($modSettings['attachmentThumbWidth']) && !empty($modSettings['attachmentThumbHeight']) && ($attachment['width'] > $modSettings['attachmentThumbWidth'] || $attachment['height'] > $modSettings['attachmentThumbHeight']) && strlen($attachment['filename']) < 249)
			{
				// A proper thumb doesn't exist yet? Create one! Or, it needs update.
				if (empty($attachment['id_thumb'])
					|| $attachment['thumb_width'] > $modSettings['attachmentThumbWidth']
					|| $attachment['thumb_height'] > $modSettings['attachmentThumbHeight'])
					//|| ($attachment['thumb_width'] < $modSettings['attachmentThumbWidth'] && $attachment['thumb_height'] < $modSettings['attachmentThumbHeight']))
				{
					$filename = getAttachmentFilename($attachment['filename'], $attachment['id_attach'], $attachment['id_folder'], false, $attachment['file_hash']);
					$attachment = array_merge($attachment, updateAttachmentThumbnail($filename, $attachment['id_attach'], $id_msg, $attachment['id_thumb'], $attachment['filename']));]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		7 => 'tiff',
		8 => 'tiff',
		9 => 'jpeg',
		14 => 'iff'
	);

	if ((int) $mime > 0)]]></search>
			<add><![CDATA[		7 => 'tiff',
		8 => 'tiff',
		9 => 'jpeg',
		14 => 'iff',
		18 => 'webp'
	);

	if ((int) $mime > 0)]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for BBCParser.php -->		
	<file name="SUBSDIR/BBC/BBCParser.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		// Start with standard
		$quote_alt = false;
		foreach ($this->open_tags as $open_quote)
		{
			// Every parent quote this quote has flips the styling
			if (isset($open_quote[Codes::ATTR_TAG]) && $open_quote[Codes::ATTR_TAG] === 'quote')
			{
				$quote_alt = !$quote_alt;
			}
		}
		// Add a class to the quote and quoteheader to style alternating blockquotes
		//  - Example: class="quoteheader" and class="quoteheader bbc_alt_quoteheader" on the header
		//             class="bbc_quote" and class="bbc_quote bbc_alternate_quote" on the blockquote
		// This allows simpler CSS for themes (like default) which do not use the alternate styling,
		// but still allow it for themes that want it.
		$tag[Codes::ATTR_BEFORE] = str_replace('<div class="quoteheader">', '<div class="quoteheader' . ($quote_alt ? ' bbc_alt_quoteheader' : '') . '">', $tag[Codes::ATTR_BEFORE]);
		$tag[Codes::ATTR_BEFORE] = str_replace('<blockquote>', '<blockquote class="bbc_quote' . ($quote_alt ? ' bbc_alternate_quote' : '') . '">', $tag[Codes::ATTR_BEFORE]);
	}

	/**]]></search>
			<add><![CDATA[	{
		// Start with standard
		$quote_alt = false;
		$first_quote = 0;

		foreach ($this->open_tags as $open_quote)
		{
			// Every parent quote this quote has flips the styling
			if (isset($open_quote[Codes::ATTR_TAG]) && $open_quote[Codes::ATTR_TAG] === 'quote')
			{
				$quote_alt = !$quote_alt;
				$first_quote++;
			}
		}

		// Add a class to the quote and quoteheader to style alternating blockquotes
		//  - Example: class="quoteheader" and class="quoteheader bbc_alt_quoteheader" on the header
		//             class="bbc_quote" and class="bbc_quote bbc_alternate_quote" on the blockquote
		// This allows simpler CSS for themes (like default) which do not use the alternate styling,
		// but still allow it for themes that want it.
		if ($first_quote === 0)
		{
			$tag[Codes::ATTR_BEFORE] = str_replace('<div class="quoteheader">', '<div class="quote-read-more"><input type="checkbox" title="show" class="quote-show-more"><div class="quoteheader">', $tag[Codes::ATTR_BEFORE]);
			$tag[Codes::ATTR_BEFORE] = str_replace('<blockquote>', '<blockquote class="bbc_quote">', $tag[Codes::ATTR_BEFORE]);
			$tag[Codes::ATTR_AFTER] = str_replace('</blockquote>', '</blockquote></div>', $tag[Codes::ATTR_AFTER]);
		}
		else
		{
			$tag[Codes::ATTR_BEFORE] = str_replace('<div class="quoteheader">', '<div class="quoteheader' . ($quote_alt ? ' bbc_alt_quoteheader' : '') . '">', $tag[Codes::ATTR_BEFORE]);
			$tag[Codes::ATTR_BEFORE] = str_replace('<blockquote>', '<blockquote class="bbc_quote' . ($quote_alt ? ' bbc_alternate_quote' : '') . '">', $tag[Codes::ATTR_BEFORE]);
		}
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// +1 for [, then the length of the tag, then a space
		$this->pos1 = $this->pos + 1 + $possible[Codes::ATTR_LENGTH] + 1;

		// This is long, but it makes things much easier and cleaner.
		if (!empty($possible[Codes::ATTR_PARAM]))
		{]]></search>
			<add><![CDATA[		// +1 for [, then the length of the tag, then a space
		$this->pos1 = $this->pos + 1 + $possible[Codes::ATTR_LENGTH] + 1;

		// If we need to reset content attr, this is where we step in
		if (isset($possible[Codes::ATTR_RESET]))
		{
			$possible[Codes::ATTR_CONTENT] = $possible[Codes::ATTR_RESET];
		}

		// This is long, but it makes things much easier and cleaner.
		if (!empty($possible[Codes::ATTR_PARAM]))
		{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	protected function trimWhiteSpace($offset = null)
	{
		if (preg_match('~(<br />|&nbsp;|\s)*~', $this->message, $matches, null, $offset) !== 0 && isset($matches[0]) && $matches[0] !== '')
		{
			$this->message = substr_replace($this->message, '', $offset, strlen($matches[0]));
		}]]></search>
			<add><![CDATA[	 */
	protected function trimWhiteSpace($offset = null)
	{
		if (preg_match('~(<br />|&nbsp;|\s)*~', $this->message, $matches, 0, $offset) !== 0 && isset($matches[0]) && $matches[0] !== '')
		{
			$this->message = substr_replace($this->message, '', $offset, strlen($matches[0]));
		}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Codes.php -->		
	<file name="SUBSDIR/BBC/Codes.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	const ATTR_NO_CACHE = 25;

	/** [tag]parsed content[/tag] */
	const TYPE_PARSED_CONTENT = 0;
]]></search>
			<add><![CDATA[	 */
	const ATTR_NO_CACHE = 25;

	/**
	 * If to reset ATTR_CONTENT to a new value, useful when build content tag in addons
	 */
	const ATTR_RESET = 26;

	/** [tag]parsed content[/tag] */
	const TYPE_PARSED_CONTENT = 0;
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						self::PARAM_ATTR_VALIDATE => 'htmlTime',
					),
				),
				self::ATTR_BEFORE => '<div class="quoteheader"><a href="' . $scripturl . '?{link}">' . $txt['quote_from'] . ': {author} ' . ($modSettings['todayMod'] == 3 ? ' - ' : $txt['search_on']) . ' {date}</a></div><blockquote>',
				self::ATTR_AFTER => '</blockquote>',
				self::ATTR_BLOCK_LEVEL => true,
				self::ATTR_AUTOLINK => true,]]></search>
			<add><![CDATA[						self::PARAM_ATTR_VALIDATE => 'htmlTime',
					),
				),
				self::ATTR_BEFORE => '<div class="quoteheader"><a href="' . $scripturl . '?{link}">' . $txt['quote_from'] . ': {author} &ndash;' . ($modSettings['todayMod'] == 3 ? '' : ' ' . $txt['search_on']) . ' {date}</a></div><blockquote>',
				self::ATTR_AFTER => '</blockquote>',
				self::ATTR_BLOCK_LEVEL => true,
				self::ATTR_AUTOLINK => true,]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Bans.subs.php -->		
	<file name="SUBSDIR/Bans.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[/**
 * Gets the number of ban items belonging to a certain ban group
 *
 * @package Bans
 * @return int
 */
function list_getNumBanItems()
{
	global $context;

	$db = database();

	$ban_group_id = isset($context['ban_group_id']) ? (int) $context['ban_group_id'] : 0;

	$request = $db->query('', '
		SELECT COUNT(bi.id_ban)]]></search>
			<add><![CDATA[/**
 * Gets the number of ban items belonging to a certain ban group
 *
 * @param int $ban_group_id
 * @return int
 */
function list_getNumBanItems($ban_group_id = 0)
{
	$db = database();

	$ban_group_id = (int) $ban_group_id;

	$request = $db->query('', '
		SELECT COUNT(bi.id_ban)]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Cache.class.php -->		
	<file name="SUBSDIR/Cache.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function __construct($level, $accelerator, $options)
	{
		$this->setLevel($level);

		// Default to file based so we can slow everything down :P
		if (empty($accelerator))
		{]]></search>
			<add><![CDATA[	 */
	public function __construct($level, $accelerator, $options)
	{
		// Default to file based so we can slow everything down :P
		if (empty($accelerator))
		{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		$this->_accelerator = $accelerator;

		if ($level > 0)
		{
			$this->enable(true);]]></search>
			<add><![CDATA[
		$this->_accelerator = $accelerator;

		$this->setLevel($level);

		if ($level > 0)
		{
			$this->enable(true);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			global $cache_accelerator, $cache_enable, $cache_uid, $cache_password, $cache_memcached;

			$options = array();
			if ($cache_accelerator === 'xcache')
			{]]></search>
			<add><![CDATA[		{
			global $cache_accelerator, $cache_enable, $cache_uid, $cache_password, $cache_memcached;

			$cache_accelerator = empty($cache_accelerator) ? 'filebased' : $cache_accelerator;
			$options = array();
			if ($cache_accelerator === 'xcache')
			{]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Calendar.subs.php -->		
	<file name="SUBSDIR/Calendar.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			// Attempt to avoid DST problems.
			// @todo Resolve this properly at some point.
			if (strftime('%Y-%m-%d', $date) == $lastDate)
				$date += 3601;
			$lastDate = strftime('%Y-%m-%d', $date);

			// If we're using permissions (calendar pages?) then just ouput normal contextual style information.
			if ($use_permissions)
				$events[strftime('%Y-%m-%d', $date)][] = array(
					'id' => $row['id_event'],
					'title' => $row['title'],
					'start_date' => $row['start_date'],]]></search>
			<add><![CDATA[		{
			// Attempt to avoid DST problems.
			// @todo Resolve this properly at some point.
			if (Util::strftime('%Y-%m-%d', $date) == $lastDate)
				$date += 3601;
			$lastDate = Util::strftime('%Y-%m-%d', $date);

			// If we're using permissions (calendar pages?) then just ouput normal contextual style information.
			if ($use_permissions)
				$events[Util::strftime('%Y-%m-%d', $date)][] = array(
					'id' => $row['id_event'],
					'title' => $row['title'],
					'start_date' => $row['start_date'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				);
			// Otherwise, this is going to be cached and the VIEWER'S permissions should apply... just put together some info.
			else
				$events[strftime('%Y-%m-%d', $date)][] = array(
					'id' => $row['id_event'],
					'title' => $row['title'],
					'start_date' => $row['start_date'],]]></search>
			<add><![CDATA[				);
			// Otherwise, this is going to be cached and the VIEWER'S permissions should apply... just put together some info.
			else
				$events[Util::strftime('%Y-%m-%d', $date)][] = array(
					'id' => $row['id_event'],
					'title' => $row['title'],
					'start_date' => $row['start_date'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[function getTodayInfo()
{
	return array(
		'day' => (int) strftime('%d', forum_time()),
		'month' => (int) strftime('%m', forum_time()),
		'year' => (int) strftime('%Y', forum_time()),
		'date' => strftime('%Y-%m-%d', forum_time()),
	);
}
]]></search>
			<add><![CDATA[function getTodayInfo()
{
	return array(
		'day' => (int) Util::strftime('%d', forum_time()),
		'month' => (int) Util::strftime('%m', forum_time()),
		'year' => (int) Util::strftime('%Y', forum_time()),
		'date' => Util::strftime('%Y-%m-%d', forum_time()),
	);
}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Get information about this month.
	$month_info = array(
		'first_day' => array(
			'day_of_week' => (int) strftime('%w', mktime(0, 0, 0, $month, 1, $year)),
			'week_num' => (int) strftime('%U', mktime(0, 0, 0, $month, 1, $year)),
			'date' => strftime('%Y-%m-%d', mktime(0, 0, 0, $month, 1, $year)),
		),
		'last_day' => array(
			'day_of_month' => (int) strftime('%d', mktime(0, 0, 0, $month == 12 ? 1 : $month + 1, 0, $month == 12 ? $year + 1 : $year)),
			'date' => strftime('%Y-%m-%d', mktime(0, 0, 0, $month == 12 ? 1 : $month + 1, 0, $month == 12 ? $year + 1 : $year)),
		),
		'first_day_of_year' => (int) strftime('%w', mktime(0, 0, 0, 1, 1, $year)),
		'first_day_of_next_year' => (int) strftime('%w', mktime(0, 0, 0, 1, 1, $year + 1)),
	);

	// The number of days the first row is shifted to the right for the starting day.]]></search>
			<add><![CDATA[	// Get information about this month.
	$month_info = array(
		'first_day' => array(
			'day_of_week' => (int) Util::strftime('%w', mktime(0, 0, 0, $month, 1, $year)),
			'week_num' => (int) Util::strftime('%U', mktime(0, 0, 0, $month, 1, $year)),
			'date' => Util::strftime('%Y-%m-%d', mktime(0, 0, 0, $month, 1, $year)),
		),
		'last_day' => array(
			'day_of_month' => (int) Util::strftime('%d', mktime(0, 0, 0, $month == 12 ? 1 : $month + 1, 0, $month == 12 ? $year + 1 : $year)),
			'date' => Util::strftime('%Y-%m-%d', mktime(0, 0, 0, $month == 12 ? 1 : $month + 1, 0, $month == 12 ? $year + 1 : $year)),
		),
		'first_day_of_year' => (int) Util::strftime('%w', mktime(0, 0, 0, 1, 1, $year)),
		'first_day_of_next_year' => (int) Util::strftime('%w', mktime(0, 0, 0, 1, 1, $year + 1)),
	);

	// The number of days the first row is shifted to the right for the starting day.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// What is the actual "start date" for the passed day.
	$calendarOptions['start_day'] = empty($calendarOptions['start_day']) ? 0 : (int) $calendarOptions['start_day'];
	$day_of_week = (int) strftime('%w', mktime(0, 0, 0, $month, $day, $year));
	if ($day_of_week != $calendarOptions['start_day'])
	{
		// Here we offset accordingly to get things to the real start of a week.]]></search>
			<add><![CDATA[
	// What is the actual "start date" for the passed day.
	$calendarOptions['start_day'] = empty($calendarOptions['start_day']) ? 0 : (int) $calendarOptions['start_day'];
	$day_of_week = (int) Util::strftime('%w', mktime(0, 0, 0, $month, $day, $year));
	if ($day_of_week != $calendarOptions['start_day'])
	{
		// Here we offset accordingly to get things to the real start of a week.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if ($date_diff < 0)
			$date_diff += 7;
		$new_timestamp = mktime(0, 0, 0, $month, $day, $year) - $date_diff * 86400;
		$day = (int) strftime('%d', $new_timestamp);
		$month = (int) strftime('%m', $new_timestamp);
		$year = (int) strftime('%Y', $new_timestamp);
	}

	// Now start filling in the calendar grid.]]></search>
			<add><![CDATA[		if ($date_diff < 0)
			$date_diff += 7;
		$new_timestamp = mktime(0, 0, 0, $month, $day, $year) - $date_diff * 86400;
		$day = (int) Util::strftime('%d', $new_timestamp);
		$month = (int) Util::strftime('%m', $new_timestamp);
		$year = (int) Util::strftime('%Y', $new_timestamp);
	}

	// Now start filling in the calendar grid.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// The next week calculation requires a bit more work.
	$curTimestamp = mktime(0, 0, 0, $month, $day, $year);
	$nextWeekTimestamp = $curTimestamp + 604800;
	$calendarGrid['next_week']['day'] = (int) strftime('%d', $nextWeekTimestamp);
	$calendarGrid['next_week']['month'] = (int) strftime('%m', $nextWeekTimestamp);
	$calendarGrid['next_week']['year'] = (int) strftime('%Y', $nextWeekTimestamp);

	// Fetch the arrays for birthdays, posted events, and holidays.
	$startDate = strftime('%Y-%m-%d', $curTimestamp);
	$endDate = strftime('%Y-%m-%d', $nextWeekTimestamp);
	$bday = $calendarOptions['show_birthdays'] ? getBirthdayRange($startDate, $endDate) : array();
	$events = $calendarOptions['show_events'] ? getEventRange($startDate, $endDate) : array();
	$holidays = $calendarOptions['show_holidays'] ? getHolidayRange($startDate, $endDate) : array();]]></search>
			<add><![CDATA[	// The next week calculation requires a bit more work.
	$curTimestamp = mktime(0, 0, 0, $month, $day, $year);
	$nextWeekTimestamp = $curTimestamp + 604800;
	$calendarGrid['next_week']['day'] = (int) Util::strftime('%d', $nextWeekTimestamp);
	$calendarGrid['next_week']['month'] = (int) Util::strftime('%m', $nextWeekTimestamp);
	$calendarGrid['next_week']['year'] = (int) Util::strftime('%Y', $nextWeekTimestamp);

	// Fetch the arrays for birthdays, posted events, and holidays.
	$startDate = Util::strftime('%Y-%m-%d', $curTimestamp);
	$endDate = Util::strftime('%Y-%m-%d', $nextWeekTimestamp);
	$bday = $calendarOptions['show_birthdays'] ? getBirthdayRange($startDate, $endDate) : array();
	$events = $calendarOptions['show_events'] ? getEventRange($startDate, $endDate) : array();
	$holidays = $calendarOptions['show_holidays'] ? getHolidayRange($startDate, $endDate) : array();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// An adjustment value to apply to all calculated week numbers.
	if (!empty($calendarOptions['show_week_num']))
	{
		$first_day_of_year = (int) strftime('%w', mktime(0, 0, 0, 1, 1, $year));
		$first_day_of_next_year = (int) strftime('%w', mktime(0, 0, 0, 1, 1, $year + 1));
		// this one is not used in its scope
		// $last_day_of_last_year = (int) strftime('%w', mktime(0, 0, 0, 12, 31, $year - 1));

		// All this is as getCalendarGrid.
		if ($calendarOptions['start_day'] === 0)]]></search>
			<add><![CDATA[	// An adjustment value to apply to all calculated week numbers.
	if (!empty($calendarOptions['show_week_num']))
	{
		$first_day_of_year = (int) Util::strftime('%w', mktime(0, 0, 0, 1, 1, $year));
		$first_day_of_next_year = (int) Util::strftime('%w', mktime(0, 0, 0, 1, 1, $year + 1));
		// this one is not used in its scope
		// $last_day_of_last_year = (int) Util::strftime('%w', mktime(0, 0, 0, 12, 31, $year - 1));

		// All this is as getCalendarGrid.
		if ($calendarOptions['start_day'] === 0)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		else
			$nWeekAdjust = $calendarOptions['start_day'] > $first_day_of_year && $first_day_of_year !== 0 ? 2 : 1;

		$calendarGrid['week_number'] = (int) strftime('%U', mktime(0, 0, 0, $month, $day, $year)) + $nWeekAdjust;

		// If this crosses a year boundary and includes january it should be week one.
		if ((int) strftime('%Y', $curTimestamp + 518400) != $year && $calendarGrid['week_number'] > 53 && $first_day_of_next_year < 5)
			$calendarGrid['week_number'] = 1;
	}
]]></search>
			<add><![CDATA[		else
			$nWeekAdjust = $calendarOptions['start_day'] > $first_day_of_year && $first_day_of_year !== 0 ? 2 : 1;

		$calendarGrid['week_number'] = (int) Util::strftime('%U', mktime(0, 0, 0, $month, $day, $year)) + $nWeekAdjust;

		// If this crosses a year boundary and includes january it should be week one.
		if ((int) Util::strftime('%Y', $curTimestamp + 518400) != $year && $calendarGrid['week_number'] > 53 && $first_day_of_next_year < 5)
			$calendarGrid['week_number'] = 1;
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Make the last day what the current day is and work out what the next day is.
		$lastDay = $curDay;
		$curTimestamp += 86400;
		$curDay = (int) strftime('%d', $curTimestamp);

		// Also increment the current day of the week.
		$curDayOfWeek = $curDayOfWeek >= 6 ? 0 : ++$curDayOfWeek;]]></search>
			<add><![CDATA[		// Make the last day what the current day is and work out what the next day is.
		$lastDay = $curDay;
		$curTimestamp += 86400;
		$curDay = (int) Util::strftime('%d', $curTimestamp);

		// Also increment the current day of the week.
		$curDayOfWeek = $curDayOfWeek >= 6 ? 0 : ++$curDayOfWeek;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function cache_getOffsetIndependentEvents($days_to_index)
{
	$low_date = strftime('%Y-%m-%d', forum_time(false) - 24 * 3600);
	$high_date = strftime('%Y-%m-%d', forum_time(false) + $days_to_index * 24 * 3600);

	return array(
		'data' => array(]]></search>
			<add><![CDATA[ */
function cache_getOffsetIndependentEvents($days_to_index)
{
	$low_date = Util::strftime('%Y-%m-%d', forum_time(false) - 24 * 3600);
	$high_date = Util::strftime('%Y-%m-%d', forum_time(false) + $days_to_index * 24 * 3600);

	return array(
		'data' => array(]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'birthdays' => getBirthdayRange($low_date, $high_date),
			'events' => getEventRange($low_date, $high_date, false),
		),
		'refresh_eval' => 'return \'' . strftime('%Y%m%d', forum_time(false)) . '\' != strftime(\'%Y%m%d\', forum_time(false)) || (!empty($modSettings[\'calendar_updated\']) && ' . time() . ' < $modSettings[\'calendar_updated\']);',
		'expires' => time() + 3600,
	);
}]]></search>
			<add><![CDATA[			'birthdays' => getBirthdayRange($low_date, $high_date),
			'events' => getEventRange($low_date, $high_date, false),
		),
		'refresh_eval' => 'return \'' . Util::strftime('%Y%m%d', forum_time(false)) . '\' != Util::strftime(\'%Y%m%d\', forum_time(false)) || (!empty($modSettings[\'calendar_updated\']) && ' . time() . ' < $modSettings[\'calendar_updated\']);',
		'expires' => time() + 3600,
	);
}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Holidays between now and now + days.
	for ($i = $now; $i < $now + $days_for_index; $i += 86400)
	{
		if (isset($cached_data['holidays'][strftime('%Y-%m-%d', $i)]))
			$return_data['calendar_holidays'] = array_merge($return_data['calendar_holidays'], $cached_data['holidays'][strftime('%Y-%m-%d', $i)]);
	}

	// Happy Birthday, guys and gals!
	for ($i = $now; $i < $now + $days_for_index; $i += 86400)
	{
		$loop_date = strftime('%Y-%m-%d', $i);
		if (isset($cached_data['birthdays'][$loop_date]))
		{
			foreach ($cached_data['birthdays'][$loop_date] as $index => $dummy)
				$cached_data['birthdays'][strftime('%Y-%m-%d', $i)][$index]['is_today'] = $loop_date === $today['date'];
			$return_data['calendar_birthdays'] = array_merge($return_data['calendar_birthdays'], $cached_data['birthdays'][$loop_date]);
		}
	}]]></search>
			<add><![CDATA[	// Holidays between now and now + days.
	for ($i = $now; $i < $now + $days_for_index; $i += 86400)
	{
		if (isset($cached_data['holidays'][Util::strftime('%Y-%m-%d', $i)]))
			$return_data['calendar_holidays'] = array_merge($return_data['calendar_holidays'], $cached_data['holidays'][Util::strftime('%Y-%m-%d', $i)]);
	}

	// Happy Birthday, guys and gals!
	for ($i = $now; $i < $now + $days_for_index; $i += 86400)
	{
		$loop_date = Util::strftime('%Y-%m-%d', $i);
		if (isset($cached_data['birthdays'][$loop_date]))
		{
			foreach ($cached_data['birthdays'][$loop_date] as $index => $dummy)
				$cached_data['birthdays'][Util::strftime('%Y-%m-%d', $i)][$index]['is_today'] = $loop_date === $today['date'];
			$return_data['calendar_birthdays'] = array_merge($return_data['calendar_birthdays'], $cached_data['birthdays'][$loop_date]);
		}
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	for ($i = $now; $i < $now + $days_for_index; $i += 86400)
	{
		// Determine the date of the current loop step.
		$loop_date = strftime('%Y-%m-%d', $i);

		// No events today? Check the next day.
		if (empty($cached_data['events'][$loop_date]))]]></search>
			<add><![CDATA[	for ($i = $now; $i < $now + $days_for_index; $i += 86400)
	{
		// Determine the date of the current loop step.
		$loop_date = Util::strftime('%Y-%m-%d', $i);

		// No events today? Check the next day.
		if (empty($cached_data['events'][$loop_date]))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	return array(
		'data' => $return_data,
		'expires' => time() + 3600,
		'refresh_eval' => 'return \'' . strftime('%Y%m%d', forum_time(false)) . '\' != strftime(\'%Y%m%d\', forum_time(false)) || (!empty($modSettings[\'calendar_updated\']) && ' . time() . ' < $modSettings[\'calendar_updated\']);',
		'post_retri_eval' => '
			global $context, $scripturl, $user_info;
]]></search>
			<add><![CDATA[	return array(
		'data' => $return_data,
		'expires' => time() + 3600,
		'refresh_eval' => 'return \'' . Util::strftime('%Y%m%d', forum_time(false)) . '\' != Util::strftime(\'%Y%m%d\', forum_time(false)) || (!empty($modSettings[\'calendar_updated\']) && ' . time() . ' < $modSettings[\'calendar_updated\']);',
		'post_retri_eval' => '
			global $context, $scripturl, $user_info;
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Set the end date (if not yet given)
	if (!isset($eventOptions['end_date']))
		$eventOptions['end_date'] = strftime('%Y-%m-%d', mktime(0, 0, 0, $month, $day, $year) + $eventOptions['span'] * 86400);

	// If no topic and board are given, they are not linked to a topic.
	$eventOptions['id_board'] = isset($eventOptions['id_board']) ? (int) $eventOptions['id_board'] : 0;]]></search>
			<add><![CDATA[
	// Set the end date (if not yet given)
	if (!isset($eventOptions['end_date']))
		$eventOptions['end_date'] = Util::strftime('%Y-%m-%d', mktime(0, 0, 0, $month, $day, $year) + $eventOptions['span'] * 86400);

	// If no topic and board are given, they are not linked to a topic.
	$eventOptions['id_board'] = isset($eventOptions['id_board']) ? (int) $eventOptions['id_board'] : 0;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Set the end date to the start date + span (if the end date wasn't already given).
	if (!isset($eventOptions['end_date']))
		$eventOptions['end_date'] = strftime('%Y-%m-%d', mktime(0, 0, 0, $month, $day, $year) + $eventOptions['span'] * 86400);

	$event_columns = array(
		'start_date' => 'start_date = {date:start_date}',]]></search>
			<add><![CDATA[
	// Set the end date to the start date + span (if the end date wasn't already given).
	if (!isset($eventOptions['end_date']))
		$eventOptions['end_date'] = Util::strftime('%Y-%m-%d', mktime(0, 0, 0, $month, $day, $year) + $eventOptions['span'] * 86400);

	$event_columns = array(
		'start_date' => 'start_date = {date:start_date}',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			),
		);

		$return_value['last_day'] = (int) strftime('%d', mktime(0, 0, 0, $return_value['month'] == 12 ? 1 : $return_value['month'] + 1, 0, $return_value['month'] == 12 ? $return_value['year'] + 1 : $return_value['year']));
	}

	return $return_value;]]></search>
			<add><![CDATA[			),
		);

		$return_value['last_day'] = (int) Util::strftime('%d', mktime(0, 0, 0, $return_value['month'] == 12 ? 1 : $return_value['month'] + 1, 0, $return_value['month'] == 12 ? $return_value['year'] + 1 : $return_value['year']));
	}

	return $return_value;]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for CalendarEvent.class.php -->		
	<file name="SUBSDIR/CalendarEvent.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.6
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			// Check the month and year...
			if ($event['month'] < 1 || $event['month'] > 12)
				throw new Elk_Exception('invalid_month', false);
			if ($event['year'] < $this->_settings['cal_minyear'] || $event['year'] > date('Y') + $this->_settings['cal_limityear'])
				throw new Elk_Exception('invalid_year', false);

			// No day?]]></search>
			<add><![CDATA[			// Check the month and year...
			if ($event['month'] < 1 || $event['month'] > 12)
				throw new Elk_Exception('invalid_month', false);
			if ($event['year'] < $this->_settings['cal_minyear'] || $event['year'] > (int) date('Y') + $this->_settings['cal_limityear'])
				throw new Elk_Exception('invalid_year', false);

			// No day?]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$eventOptions = array(
			'title' => Util::substr($options['evtitle'], 0, 100),
			'span' => $span,
			'start_date' => strftime('%Y-%m-%d', mktime(0, 0, 0, (int) $options['month'], (int) $options['day'], (int) $options['year'])),
			'id_board' => (int) $id_board,
			'id_topic' => (int) $id_topic,
		);]]></search>
			<add><![CDATA[		$eventOptions = array(
			'title' => Util::substr($options['evtitle'], 0, 100),
			'span' => $span,
			'start_date' => Util::strftime('%Y-%m-%d', mktime(0, 0, 0, (int) $options['month'], (int) $options['day'], (int) $options['year'])),
			'id_board' => (int) $id_board,
			'id_topic' => (int) $id_topic,
		);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'title' => '',
				'span' => 1,
			);
			$event['last_day'] = (int) strftime('%d', mktime(0, 0, 0, $event['month'] == 12 ? 1 : $event['month'] + 1, 0, $event['month'] == 12 ? $event['year'] + 1 : $event['year']));
		}
		else
		{]]></search>
			<add><![CDATA[				'title' => '',
				'span' => 1,
			);
			$event['last_day'] = (int) Util::strftime('%d', mktime(0, 0, 0, $event['month'] == 12 ? 1 : $event['month'] + 1, 0, $event['month'] == 12 ? $event['year'] + 1 : $event['year']));
		}
		else
		{]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Censor.class.php -->		
	<file name="SUBSDIR/Censor.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function censor($text, $force = false)
	{
		if (empty($this->vulgar) || (!$force && !$this->doCensor()))
		{
			return $text;
		}]]></search>
			<add><![CDATA[	 */
	public function censor($text, $force = false)
	{
		if (empty($text) || empty($this->vulgar) || (!$force && !$this->doCensor()))
		{
			return $text;
		}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for EmailFormat.class.php -->		
	<file name="SUBSDIR/EmailFormat.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Starting a list like a) 1. 1) etc ...
		$temp = $this->_in_plainlist;

		if (preg_match('~^[a-j](\.|\)|-)\s~i', $var)
			|| preg_match('~^[1-9](\.|\)|-)\s?~', $var)
			|| preg_match('~' . chr(187) . '~', $var)
			|| preg_match('~^[ \t]?\* ?~', $var)
		)
			$this->_in_plainlist++;
]]></search>
			<add><![CDATA[		// Starting a list like a) 1. 1) etc ...
		$temp = $this->_in_plainlist;

		if (preg_match('~^[a-j](\.|\)|-)\s~im', $var)
			|| preg_match('~^[1-9]\s?(\.|\)|-)\s?~m', $var)
			|| preg_match('~' . chr(187) . '~', $var)
			|| preg_match('~^[ \t]?\* ?~m', $var)
		)
			$this->_in_plainlist++;
]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for EmailParse.class.php -->		
	<file name="SUBSDIR/EmailParse.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			return;
		}

		$this->_header_block = $match[1];
		$this->body = $match[3];
	}

	/**]]></search>
			<add><![CDATA[			return;
		}

		// Actually no headers in this boundary
		if (empty($match[1]) || strpos($match[1], ':') === false)
		{
			$this->_header_block = '';
			$this->body = $this->raw_message;
		}
		else
		{
			$this->_header_block = $match[1];
			$this->body = $match[3];
		}
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			}
			else
			{
				$this->headers[$header_key] .= ' ' . $this->_decode_header($header_value);
			}
		}
	}]]></search>
			<add><![CDATA[			}
			else
			{
				// Only one is ever valid, so use the last one and hope its right
				if ($header_key === 'content-type' || $header_key === 'content-transfer-encoding')
				{
					$this->headers[$header_key] = $this->_decode_header($header_value);
				}
				else
				{
					$this->headers[$header_key] .= ' ' . $this->_decode_header($header_value);
				}
			}
		}
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				// own Content Type and Encoding and we will process each as such
				$this->_boundary_split($this->headers['x-parameters']['content-type']['boundary'], $html);

				// Some multi-part messages ... are singletons :P
				if ($this->_boundary_section_count === 1)
				{
					$this->body = $this->_boundary_section[0]->body;
					$this->headers['x-parameters'] = $this->_boundary_section[0]->headers['x-parameters'];
				}
				// We found multiple sections, lets go through each
				elseif ($this->_boundary_section_count > 1)
				{
					$html_ids = array();
					$text_ids = array();]]></search>
			<add><![CDATA[				// own Content Type and Encoding and we will process each as such
				$this->_boundary_split($this->headers['x-parameters']['content-type']['boundary'], $html);

				// We found multiple sections, lets go through each
				if ($this->_boundary_section_count > 0)
				{
					$html_ids = array();
					$text_ids = array();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[							$html_ids[] = $i;
						}
						// Plain section
						elseif ($this->_boundary_section[$i]->headers['content-type'] === 'text/plain')
						{
							$text_ids[] = $i;
						}]]></search>
			<add><![CDATA[							$html_ids[] = $i;
						}
						// Plain section
						elseif ($this->_boundary_section[$i]->headers['content-type'] === 'text/plain'
							&& $this->_boundary_section[$i]->headers['content-disposition'] !== 'attachment')
						{
							$text_ids[] = $i;
						}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					// We always return a plain text version for use
					if (!empty($text_ids))
					{
						// As parts are ordered by increasing accuracy, use the last one found
						$this->plain_body = $this->_boundary_section[end($text_ids)]->body;
						if ($this->_boundary_section[end($text_ids)]->headers["content-transfer-encoding"] === 'base64')
						{
							$this->plain_body = str_replace("\n", '<br />', $this->plain_body);
						}
					}
					elseif (!empty($html_ids))
					{
						// This should never run as emails should always have a plain text section to be valid, still ...
						$this->plain_body .= $this->_boundary_section[0]->body;
						$this->plain_body = str_ireplace('<p>', "\n\n", $this->plain_body);
						$this->plain_body = str_ireplace(array('<br />', '<br>', '</p>', '</div>'), "\n", $this->plain_body);
						$this->plain_body = strip_tags($this->plain_body);]]></search>
			<add><![CDATA[					// We always return a plain text version for use
					if (!empty($text_ids))
					{
						foreach ($text_ids as $id)
						{
							// Join or use the last?
							if ($this->headers['content-type'] === 'multipart/mixed')
							{
								$this->plain_body .= ' ' . $this->_decode_body($this->_boundary_section[$id]->body);
							}
							else
							{
								$this->plain_body = $this->_boundary_section[$id]->body;
							}
						}
					}
					elseif (!empty($html_ids))
					{
						// For emails that have no plain text section, which they should to be valid, still ...
						$this->plain_body .= $this->_boundary_section[key($html_ids)]->body;
						$this->plain_body = str_ireplace('<p>', "\n\n", $this->plain_body);
						$this->plain_body = str_ireplace(array('<br />', '<br>', '</p>', '</div>'), "\n", $this->plain_body);
						$this->plain_body = strip_tags($this->plain_body);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						// For all the chosen sections
						foreach ($text_ids as $id)
						{
							$this->body = $this->_boundary_section[$id]->body;

							// A section may have its own attachments if it had is own unique boundary sections
							// so we need to check and add them in as needed]]></search>
			<add><![CDATA[						// For all the chosen sections
						foreach ($text_ids as $id)
						{
							// Join or use the last? These could be HTML sections as well
							if ($this->headers['content-type'] === 'multipart/mixed')
							{
								$this->body .= ' ' . $this->_boundary_section[$id]->body;
							}
							// Such as multipart/alternative, just use the last found
							else
							{
								$this->body = $this->_boundary_section[$id]->body;
							}

							// A section may have its own attachments if it had is own unique boundary sections
							// so we need to check and add them in as needed]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	private function _process_attachments($i)
	{
		if ($this->_boundary_section[$i]->headers['content-disposition'] === 'attachment' || $this->_boundary_section[$i]->headers['content-disposition'] === 'inline' || isset($this->_boundary_section[$i]->headers['content-id']))
		{
			// Get the attachments file name
			if (isset($this->_boundary_section[$i]->headers['x-parameters']['content-disposition']['filename']))]]></search>
			<add><![CDATA[	 */
	private function _process_attachments($i)
	{
		if ($this->_boundary_section[$i]->headers['content-disposition'] === 'attachment'
			|| $this->_boundary_section[$i]->headers['content-disposition'] === 'inline'
			|| $this->_boundary_section[$i]->headers['content-disposition'] === '*'
			|| isset($this->_boundary_section[$i]->headers['content-id']))
		{
			// Get the attachments file name
			if (isset($this->_boundary_section[$i]->headers['x-parameters']['content-disposition']['filename']))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				return;
			}

			// Load the attachment data
			$this->attachments[$file_name] = $this->_boundary_section[$i]->body;
]]></search>
			<add><![CDATA[				return;
			}

			// Escape all potentially unsafe characters from the filename
			$file_name = preg_replace('~(^\.)|/|[\n|\r]|(\.$)~m', '_', $file_name);

			// Load the attachment data
			$this->attachments[$file_name] = $this->_boundary_section[$i]->body;
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// If iconv mime is available just use it and be done
		if (function_exists('iconv_mime_decode'))
		{
			return iconv_mime_decode($val, $strict ? 1 : 2, 'UTF-8');
		}

		// The RFC 2047-3 defines an encoded-word as a sequence of characters that]]></search>
			<add><![CDATA[		// If iconv mime is available just use it and be done
		if (function_exists('iconv_mime_decode'))
		{
			$decoded = iconv_mime_decode($val, $strict ? 1 : 2, 'UTF-8');

			// Bad decode, or partial decode
			if ($decoded !== false && strpos($decoded, '=?iso') === false)
			{
				return $decoded;
			}
		}

		// The RFC 2047-3 defines an encoded-word as a sequence of characters that]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	private function _decode_body($val)
	{
		// The encoding tag can be missing in the headers or just wrong
		if (preg_match('~(?:=C2|=A0|=D2|=D4|=96){1}~s', $val))
		{]]></search>
			<add><![CDATA[	 */
	private function _decode_body($val)
	{
		if (empty($val))
		{
			return $val;
		}

		// The encoding tag can be missing in the headers or just wrong
		if (preg_match('~(?:=C2|=A0|=D2|=D4|=96){1}~s', $val))
		{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$val = $this->_decode_string($val, 'quoted-printable');
		}
		// Lines end in the tell tail quoted printable ... wrap and decode
		elseif (preg_match('~\s=[\r?\n]~s', $val))
		{
			$val = preg_replace('~\s=[\r?\n]~', ' ', $val);
			$val = $this->_decode_string($val, 'quoted-printable');
		}
		// Lines end in = but not ==
		elseif (preg_match('~((?<!=)=[\r?\n])~s', $val))
		{
			$val = $this->_decode_string($val, 'quoted-printable');
		}

		return $val;
	}

	/**]]></search>
			<add><![CDATA[			$val = $this->_decode_string($val, 'quoted-printable');
		}
		// Lines end in the tell tail quoted printable ... wrap and decode
		elseif (preg_match('~\s=[\r\n]~s', $val))
		{
			$val = preg_replace('~\s=[\r\n]~', ' ', $val);
			$val = $this->_decode_string($val, 'quoted-printable');
		}
		// Lines end in = but not ==
		elseif (preg_match('~((?<!=)=[\r\n])~', $val))
		{
			$val = $this->_decode_string($val, 'quoted-printable');
		}

		return !empty($val) ? str_replace("\r\n", "\n", $val) : '';
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Decode if its quoted printable or base64 encoded
		if ($encoding === 'quoted-printable')
		{
			$string = quoted_printable_decode(preg_replace('~=\r?\n~', '', $string));
		}
		elseif ($encoding === 'base64')
		{
			$string = base64_decode($string);
		}

		// Convert this to utf-8 if needed.]]></search>
			<add><![CDATA[		// Decode if its quoted printable or base64 encoded
		if ($encoding === 'quoted-printable')
		{
			$string = preg_replace('~(^|\r\n)=A0($|\r\n)~m', '=0D=0A=0D=0A', $string);
			$string = quoted_printable_decode(preg_replace('~=\r?\n~', '', $string));
		}
		elseif ($encoding === 'base64')
		{
			$string = base64_decode($string);
			if (isset($this->headers['content-type']) && strpos($this->headers['content-type'], 'text/') === false)
				return $string;
		}

		// Convert this to utf-8 if needed.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$string = $this->_charset_convert($string, strtoupper($charset), 'UTF-8');
		}

		return $string;
	}

	/**]]></search>
			<add><![CDATA[			$string = $this->_charset_convert($string, strtoupper($charset), 'UTF-8');
		}

		return !empty($string) ? str_replace("\r\n", "\n", $string) : '';
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			{
				// Replace unknown characters with a space
				@ini_set('mbstring.substitute_character', '32');
				$string = @mb_convert_encoding($string, $to, $from);
			}
			elseif (function_exists('recode_string'))
			{]]></search>
			<add><![CDATA[			{
				// Replace unknown characters with a space
				@ini_set('mbstring.substitute_character', '32');
				try
				{
					$string = mb_convert_encoding($string_save, $to, $from);
				}
				catch (\ValueError $e)
				{
					// nothing, bad character set
				}
			}
			elseif (function_exists('recode_string'))
			{]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Emailpost.subs.php -->		
	<file name="SUBSDIR/Emailpost.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$tags = array(
		'~\*\*\s?(.*?)\*\*~is' => '**$1**',
		'~<\*>~i' => '&lt;*&gt;',
		'~-{20,}~' => '<hr>',
		'~#([0-9a-fA-F]{4,6}\b)~' => '&#35;$1',
	);
]]></search>
			<add><![CDATA[	$tags = array(
		'~\*\*\s?(.*?)\*\*~is' => '**$1**',
		'~<\*>~i' => '&lt;*&gt;',
		'~^-{3,}$~m' => '<hr>',
		'~#([0-9a-fA-F]{4,6}\b)~' => '&#35;$1',
	);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Some tags often end up as just empty tags - remove those.
	$emptytags = array(
		'~\[[bisu]\]\s*\[/[bisu]\]~' => '',
		'~\[[bisu]\]\s*\[/[bisu]\]~' => '',
		'~(\n){3,}~si' => "\n\n",
	);
	$text = preg_replace(array_keys($emptytags), array_values($emptytags), $text);]]></search>
			<add><![CDATA[	// Some tags often end up as just empty tags - remove those.
	$emptytags = array(
		'~\[[bisu]\]\s*\[/[bisu]\]~' => '',
		'~\[quote\]\s*\[/quote\]~' => '',
		'~\[center\]\s*\[/center\]~' => '',
		'~(\n){3,}~si' => "\n\n",
	);
	$text = preg_replace(array_keys($emptytags), array_values($emptytags), $text);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			foreach ($quotes as $quote)
			{
				$quotenew = preg_replace('~^.?> (.*)$~im', '$1', $quote[1] . "\n");
				$body = str_replace($quote[0], '[quote]' . $quotenew . '[/quote]', $body);
			}
		}]]></search>
			<add><![CDATA[		{
			foreach ($quotes as $quote)
			{
				$quotenew = preg_replace('~^\s?> (.*)$~m', '$1', $quote[1] . "\n");
				$body = str_replace($quote[0], '[quote]' . $quotenew . '[/quote]', $body);
			}
		}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$body_array[$i] = $quote_done;

	// Join the array back together while dropping null index's
	$body = implode("\n", array_values($body_array));

	return $body;
}

/**]]></search>
			<add><![CDATA[	$body_array[$i] = $quote_done;

	// Join the array back together while dropping null index's
	return implode("\n", array_values($body_array));
}

/**]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Graphics.subs.php -->		
	<file name="SUBSDIR/Graphics.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * specially as needed for avatars (uploaded avatars), attachments, or
 * visual verification images.
 *
 * TrueType fonts supplied by www.LarabieFonts.com
 *
 * @name      ElkArte Forum
 * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause]]></search>
			<add><![CDATA[ * specially as needed for avatars (uploaded avatars), attachments, or
 * visual verification images.
 *
 * @name      ElkArte Forum
 * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function createThumbnail($source, $max_width, $max_height)
{
	global $modSettings;

	$destName = $source . '_thumb.tmp';

	// Do the actual resize, thumbnails by default strip EXIF data to save space
	$format = !empty($modSettings['attachment_thumb_png']) ? 3 : 0;
	$success = resizeImageFile($source, $destName, $max_width, $max_height, $format, true);

	// Okay, we're done with the temporary stuff.]]></search>
			<add><![CDATA[ */
function createThumbnail($source, $max_width, $max_height)
{
	$destName = $source . '_thumb.tmp';
	$max_width = max(16, $max_width);
	$max_height = max(16, $max_height);

	// Do the actual resize, thumbnails by default strip EXIF data to save space
	$format = setDefaultFormat($source);
	$success = resizeImageFile($source, $destName, $max_width, $max_height, $format, true);

	// Okay, we're done with the temporary stuff.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ *   - 3 for png
 *   - 6 for bmp
 *   - 15 for wbmp
 *
 * @return boolean true on success, false on failure.
 */]]></search>
			<add><![CDATA[ *   - 3 for png
 *   - 6 for bmp
 *   - 15 for wbmp
 *   - 18 for webp
 *
 * @return boolean true on success, false on failure.
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	return class_exists('Imagick', false);
}

/**
 * See if we have enough memory to thumbnail an image
 *]]></search>
			<add><![CDATA[	return class_exists('Imagick', false);
}

/**
 * Check if the system supports webP
 *
 * @return bool
 */
function hasWebpSupport()
{
	if (checkImagick())
	{
		$check = Imagick::queryformats();
		return in_array('WEBP', $check);
	}

	if (checkGD())
	{
		$check = gd_info();
		return !empty($check['WebP Support']);
	}

	return false;
}

/**
 * See if we have enough memory to thumbnail an image
 *]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function resizeImageFile($source, $destination, $max_width, $max_height, $preferred_format = 0, $strip = false, $force_resize = true)
{
	// Nothing to do without GD or IM
	if (!checkGD() && !checkImagick())
		return false;]]></search>
			<add><![CDATA[ */
function resizeImageFile($source, $destination, $max_width, $max_height, $preferred_format = 0, $strip = false, $force_resize = true)
{
	global $modSettings;

	// Nothing to do without GD or IM
	if (!checkGD() && !checkImagick())
		return false;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		return false;
	}

	static $default_formats = array(
		'1' => 'gif',
		'2' => 'jpeg',
		'3' => 'png',
		'6' => 'bmp',
		'15' => 'wbmp'
	);

	require_once(SUBSDIR . '/Package.subs.php');]]></search>
			<add><![CDATA[		return false;
	}

	$default_formats = array(
		1 => 'gif',
		2 => 'jpeg',
		3 => 'png',
		6 => 'bmp',
		15 => 'wbmp',
		18 => 'webp'
	);

	require_once(SUBSDIR . '/Package.subs.php');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	else
		$sizes = array(-1, -1, -1);

	// See if we have -or- can get the needed memory for this operation
	if (checkGD() && !imageMemoryCheck($sizes))
		return false;

	// A known and supported format?
	if (checkImagick() && isset($default_formats[$sizes[2]]))
	{]]></search>
			<add><![CDATA[	else
		$sizes = array(-1, -1, -1);

	if ($sizes[0] === -1)
		return false;

	// See if we have -or- can get the needed memory for this operation
	if (checkGD() && !imageMemoryCheck($sizes))
		return false;

	// Not allowed to save webp or can't support webp input
	if ((empty($modSettings['attachment_webp_enable']) && $preferred_format == 18) || ($sizes[2] == 18 && !hasWebpSupport()))
		return false;

	// A known and supported format?
	if (checkImagick() && isset($default_formats[$sizes[2]]))
	{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}
	elseif (checkGD() && isset($default_formats[$sizes[2]]) && function_exists('imagecreatefrom' . $default_formats[$sizes[2]]))
	{
		$imagecreatefrom = 'imagecreatefrom' . $default_formats[$sizes[2]];
		if ($src_img = @$imagecreatefrom($destination))
		{
			return resizeImage($src_img, $destination, imagesx($src_img), imagesy($src_img), $max_width === null ? imagesx($src_img) : $max_width, $max_height === null ? imagesy($src_img) : $max_height, $force_resize, $preferred_format, $strip);
		}
	}

	return false;]]></search>
			<add><![CDATA[	}
	elseif (checkGD() && isset($default_formats[$sizes[2]]) && function_exists('imagecreatefrom' . $default_formats[$sizes[2]]))
	{
		try
		{
			$imagecreatefrom = 'imagecreatefrom' . $default_formats[$sizes[2]];
			$src_img = $imagecreatefrom($destination);
			return resizeImage($src_img, $destination, imagesx($src_img), imagesy($src_img), $max_width === null ? imagesx($src_img) : $max_width, $max_height === null ? imagesy($src_img) : $max_height, $force_resize, $preferred_format, $strip);
		}
		catch (\Exception $e)
		{
			return false;
		}
	}

	return false;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ *   - 3 for png
 *   - 6 for bmp
 *   - 15 for wbmp
 * @param bool $strip Whether to have IM strip EXIF data as GD will
 *
 * @return bool Whether resize was successful.
 */
function resizeImage($src_img, $destName, $src_width, $src_height, $max_width, $max_height, $force_resize = false, $preferred_format = 0, $strip = false)
{
	global $gd2;

	if (checkImagick())
	{
		// These are the file formats we know about
		static $default_formats = array(
			'1' => 'gif',
			'2' => 'jpeg',
			'3' => 'png',
			'6' => 'bmp',
			'15' => 'wbmp'
		);
		$preferred_format = empty($preferred_format) || !isset($default_formats[$preferred_format]) ? 2 : $preferred_format;

		// Since Imagick can throw exceptions, lets catch them]]></search>
			<add><![CDATA[ *   - 3 for png
 *   - 6 for bmp
 *   - 15 for wbmp
 *   - 18 for webp
 * @param bool $strip Whether to have IM strip EXIF data as GD will
 *
 * @return bool Whether resize was successful.
 */
function resizeImage($src_img, $destName, $src_width, $src_height, $max_width, $max_height, $force_resize = false, $preferred_format = 0, $strip = false)
{
	global $gd2, $modSettings;

	if (checkImagick())
	{
		// These are the file formats we know about
		$default_formats = array(
			1 => 'gif',
			2 => 'jpeg',
			3 => 'png',
			6 => 'bmp',
			15 => 'wbmp',
			18 => 'webp'
		);

		// Just to be sure, if the admin does not want webp
		if (empty($modSettings['attachment_webp_enable']))
			unset($default_formats[18]);

		$preferred_format = empty($preferred_format) || !isset($default_formats[$preferred_format]) ? 2 : $preferred_format;

		// Since Imagick can throw exceptions, lets catch them]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			// Get a new instance of Imagick for use
			$imagick = new Imagick($destName);

			// Set the input and output image size
			$src_width = empty($src_width) ? $imagick->getImageWidth() : $src_width;]]></search>
			<add><![CDATA[		{
			// Get a new instance of Imagick for use
			$imagick = new Imagick($destName);
			$imagick->setFirstIterator();

			// Set the input and output image size
			$src_width = empty($src_width) ? $imagick->getImageWidth() : $src_width;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				$imagick->setImageCompressionQuality(80);
			}

			// Create a new image in our preferred format and resize it if needed
			$imagick->setImageFormat($default_formats[$preferred_format]);
			$imagick->resizeImage($dest_width, $dest_height, Imagick::FILTER_LANCZOS, 1, true);

			// Remove EXIF / ICC data?
			if ($strip)]]></search>
			<add><![CDATA[				$imagick->setImageCompressionQuality(80);
			}

			// With PNG Save a few bytes the only way, realistically, we can
			if ($default_formats[$preferred_format] === 'png')
			{
				$imagick->setOption('png:compression-level', '9');
				$imagick->setOption('png:exclude-chunk', 'all');
			}

			// Webp
			if ($default_formats[$preferred_format] === 'webp')
			{
				$imagick->setImageCompressionQuality(80);
			}

			// Create a new image in our preferred format and resize it if needed
			$imagick->setImageFormat($default_formats[$preferred_format]);
			if (substr($destName, -6) === '_thumb')
				$imagick->thumbnailImage($dest_width, $dest_height, true);
			else
				$imagick->resizeImage($dest_width, $dest_height, imagick::FILTER_LANCZOS, 1, true);

			// Remove EXIF / ICC data?
			if ($strip)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			}

			// Save the new image in the destination location
			$success = $imagick->writeImage($destName);

			// Free resources associated with the Imagick object
			$imagick->clear();]]></search>
			<add><![CDATA[			}

			// Save the new image in the destination location
			if ($preferred_format === IMAGETYPE_GIF && $imagick->getNumberImages() !== 0)
				$success = $imagick->writeImages($destName, true);
			else
				$success = $imagick->writeImage($destName);

			// Free resources associated with the Imagick object
			$imagick->clear();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				{
					$dst_img = imagecreatetruecolor($dst_width, $dst_height);

					// Deal nicely with a PNG - because we can.
					if ((!empty($preferred_format)) && ($preferred_format == 3))
					{
						imagealphablending($dst_img, false);
						if (function_exists('imagesavealpha'))
							imagesavealpha($dst_img, true);
					}
				}
				else
					$dst_img = imagecreate($dst_width, $dst_height);

				// Resize it!
				if ($gd2)
					imagecopyresampled($dst_img, $src_img, 0, 0, 0, 0, $dst_width, $dst_height, $src_width, $src_height);
				else
					imagecopyresamplebicubic($dst_img, $src_img, 0, 0, 0, 0, $dst_width, $dst_height, $src_width, $src_height);
			}
			else
				$dst_img = $src_img;]]></search>
			<add><![CDATA[				{
					$dst_img = imagecreatetruecolor($dst_width, $dst_height);

					// Make a true color image, because it just looks better for resizing.
					imagesavealpha($dst_img, true);
					$color = imagecolorallocatealpha($dst_img, 255, 255, 255, 127);
					imagefill($dst_img, 0, 0, $color);

					// Resize it!
					imagecopyresampled($dst_img, $src_img, 0, 0, 0, 0, $dst_width, $dst_height, $src_width, $src_height);
				}
				else
				{
					$dst_img = imagecreate($dst_width, $dst_height);
					imagecopyresamplebicubic($dst_img, $src_img, 0, 0, 0, 0, $dst_width, $dst_height, $src_width, $src_height);
				}
			}
			else
				$dst_img = $src_img;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Save the image as ...
		if (!empty($preferred_format) && ($preferred_format == 3) && function_exists('imagepng'))
			$success = imagepng($dst_img, $destName);
		elseif (!empty($preferred_format) && ($preferred_format == 1) && function_exists('imagegif'))
			$success = imagegif($dst_img, $destName);
		elseif (function_exists('imagejpeg'))
			$success = imagejpeg($dst_img, $destName, 80);
]]></search>
			<add><![CDATA[
		// Save the image as ...
		if (!empty($preferred_format) && ($preferred_format == 3) && function_exists('imagepng'))
			$success = imagepng($dst_img, $destName, 9, PNG_ALL_FILTERS);
		elseif (!empty($preferred_format) && ($preferred_format == 1) && function_exists('imagegif'))
			$success = imagegif($dst_img, $destName);
		elseif (!empty($preferred_format) && $preferred_format == 18 && function_exists('imagewebp'))
			$success = imagewebp($dst_img, $destName, 80);
		elseif (function_exists('imagejpeg'))
			$success = imagejpeg($dst_img, $destName, 80);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		return false;
}

/**
 * Calls GD or ImageMagick functions to correct an images orientation
 * based on the EXIF orientation flag]]></search>
			<add><![CDATA[		return false;
}

/*
 * Determines if an image has any alpha pixels
 *
 * @param string $fileName
 * @return bool
 */
function hasTransparency($fileName, $png = true)
{
	if (empty($fileName) || !file_exists($fileName))
		return false;

	$header = file_get_contents($fileName, false, null, 0, 26);

	// Does it even claim to have been saved with transparency
	if ($png && !ord($header[25]) & 4)
		return false;

	// Webp has its own
	if (!$png)
	{
		if (($header[15] === 'L' && !(ord($header[24]) & 16)) || ($header[15] === 'X' && !(ord($header[20]) & 16)))
		{
			return false;
		}
	}

	// Saved with transparency is only a start, now Pixel inspection
	if (checkImagick())
	{
		$transparency = false;
		try
		{
			$image = new Imagick($fileName);
			if ($image->getImageWidth() > 1024 || $image->getImageHeight() > 1024)
			{
				// Used to look for transparency, it is not intended to be a quality image.
				$scaleValue = getImageScaleFactor($image->getImageWidth(), $image->getImageHeight());
				$image->scaleImage($scaleValue[0], $scaleValue[1], true);
			}

			$pixel_iterator = $image->getPixelIterator();

			// Look at each one, or until we find the first alpha pixel
			foreach ($pixel_iterator as $pixels)
			{
				foreach ($pixels as $pixel)
				{
					$color = $pixel->getColor();
					if ($color['a'] < 1)
					{
						$transparency = true;
						break 2;
					}
				}
			}
		}
		catch (\ImagickException $e)
		{
			// We don't know what it is, so don't mess with it
			unset($image);
			return true;
		}

		unset($image);

		return $transparency;
	}

	if (checkGD())
	{
		// Go through the image pixel by pixel until we find a transparent pixel
		$transparency = false;
		list ($width, $height, $type) = elk_getimagesize($fileName);

		if ($type === 18 && hasWebpSupport())
			$image = imagecreatefromwebp($fileName);
		elseif ($type === 3)
			$image = imagecreatefrompng($fileName);
		else
			return false;

		// Large image, scale down to reduce processing time
		if ($width > 1024 || $height > 1024)
		{
			// Single pass scale down, not looking for quality here
			$scaleValue = getImageScaleFactor($width, $height);
			$image = imagescale($image, $scaleValue[0], $scaleValue[1], IMG_NEAREST_NEIGHBOUR);
			if (!$image)
			{
				return true;
			}
		}

		$x = imagesx($image);
		$y = imagesy($image);
		for ($i = 0; $i < $x; $i++)
		{
			for ($j = 0; $j < $y; $j++)
			{
				if (imagecolorat($image, $i, $j) & 0x7F000000)
				{
					$transparency = true;
					break 2;
				}
			}
		}

		unset($image);

		return $transparency;
	}

	// Don't know so assume true
	return true;
}

/**
 * Provides image scaling factors that maintain existing aspect ratio
 *
 * @param int $width current width
 * @param int $height current height
 * @param int $limit desired width/height limit
 * @return int[]
 */
function getImageScaleFactor($width, $height, $limit = 800)
{
	$thumb_w = $limit;
	$thumb_h = $limit;

	// Landscape
	if ($width > $height)
	{
		$thumb_h = max (1, $height * ($limit / $width));
	}
	// Portrait
	elseif ($width < $height)
	{
		$thumb_w = max(1, $width * ($limit / $height));
	}

	return array((int) $thumb_w, (int) $thumb_h);
}

/**
 * Sets the best output format for a given image's thumbnail
 *
 * - If webP is on, and supported, use that as it gives the smallest size
 * - If webP support is available, but not on, save as png if it has alpha channel pixels
 * - If the image has alpha, we preserve it as PNG
 * - Finally good ol' jpeg
 *
 * @return int 2, 3, or 18
 */
function setDefaultFormat($fileName = '')
{
	global $modSettings;

	// Webp is the best choice if server supports
	if (!empty($modSettings['attachment_webp_enable']) && hasWebpSupport())
	{
		return 18;
	}

	$mime = getMimeType($fileName);

	// They uploaded a webp image, but ACP does not allow saving webp images, then
	// if the server supports and its alpha save it as a png
	if ($mime === 'image/webp' && hasWebpSupport() && hasTransparency($fileName, false))
	{
		return 3;
	}

	// If you have alpha channels, best keep them with PNG
	if ($mime === 'image/png' && hasTransparency($fileName))
	{
		return 3;
	}

	// The default, JPG
	return 2;
}

/**
 * Best determination of the mime type.
 *
 * @return string
 */
function getMimeType($fileName)
{
	// Try Exif which reads the file headers, most accurate for images
	if (function_exists('exif_imagetype'))
	{
		return image_type_to_mime_type(exif_imagetype($fileName));
	}

	return get_finfo_mime($fileName);
}

/**
 * Calls GD or ImageMagick functions to correct an images orientation
 * based on the EXIF orientation flag]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		case 8:
			$source = rotateImageGD($source, 90);
			break;
	}

	// Save the updated image, free resources
	imagejpeg($source, $image_name);
	imagedestroy($source);

	return true;]]></search>
			<add><![CDATA[		case 8:
			$source = rotateImageGD($source, 90);
			break;
		default:
			$orientation = 1;
			break;
	}

	// Save the updated image, free resources
	if ($orientation >= 2)
	{
		imagejpeg($source, $image_name);
	}

	imagedestroy($source);

	return true;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function autoRotateImageWithIM($image_name)
{
	try
	{
		// Get a new instance of Imagick for use]]></search>
			<add><![CDATA[ */
function autoRotateImageWithIM($image_name)
{
	// We only process jpeg images
	$sizes = elk_getimagesize($image_name);

	// Not a jpeg, no need to process
	if ($sizes[2] !== IMAGETYPE_JPEG)
	{
		return false;
	}

	try
	{
		// Get a new instance of Imagick for use]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			case Imagick::ORIENTATION_LEFTBOTTOM:
				$image->rotateImage('#000', -90);
				break;
		}

		// Now that it's auto-rotated, make sure the EXIF data is correctly updated
		if ($orientation >= 2)
		{
			$image->setImageOrientation(Imagick::ORIENTATION_TOPLEFT);
		}

		// Save the new image in the destination location
		$success = $image->writeImage($image_name);

		// Free resources associated with the Imagick object
		$image->clear();
	}
	catch (Exception $e)
	{
		$success = false;
	}

	return $success;
}

/**]]></search>
			<add><![CDATA[			case Imagick::ORIENTATION_LEFTBOTTOM:
				$image->rotateImage('#000', -90);
				break;
			default:
				$orientation = 1;
				break;
		}

		// Now that it's auto-rotated, make sure the EXIF data is correctly updated
		if ($orientation >= 2)
		{
			$image->setImageOrientation(Imagick::ORIENTATION_TOPLEFT);

			// Save the new image in the destination location
			$image->writeImage($image_name);
		}

		// Free resources associated with the Imagick object
		$image->clear();
	}
	catch (\ImagickException $e)
	{
		// pass through;
	}

	return true;
}

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		$font_list = !empty($font_list) ? array($font_list[0]) : $font_list;

		// Try use Screenge if we can - it looks good!
		if (in_array('VDS_New.ttf', $ttfont_list))
			$ttfont_list = array('VDS_New.ttf');
		else
			$ttfont_list = empty($ttfont_list) ? array() : array($ttfont_list[0]);
	}]]></search>
			<add><![CDATA[	{
		$font_list = !empty($font_list) ? array($font_list[0]) : $font_list;

		// Try use OpenSans if we can - it looks good!
		if (in_array('OpenSans.ttf', $ttfont_list))
			$ttfont_list = array('OpenSans.ttf');
		else
			$ttfont_list = empty($ttfont_list) ? array() : array($ttfont_list[0]);
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$loaded_fonts[$font_index] = imageloadfont($settings['default_theme_dir'] . '/fonts/' . $font_list[$font_index]);

	// Determine the dimensions of each character.
	$total_width = $character_spacing * strlen($code) + 50;
	$max_height = 0;
	foreach ($characters as $char_index => $character)
	{]]></search>
			<add><![CDATA[			$loaded_fonts[$font_index] = imageloadfont($settings['default_theme_dir'] . '/fonts/' . $font_list[$font_index]);

	// Determine the dimensions of each character.
	$extra = ($imageType == 4 || $imageType == 5) ? 80 : 45;
	$total_width = $character_spacing * strlen($code) + $extra;
	$max_height = 0;
	foreach ($characters as $char_index => $character)
	{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$img_box = imagettfbbox($font_size, 0, $settings['default_theme_dir'] . '/fonts/' . $ttfont_list[$character['font']], $character['id']);

			$characters[$char_index]['width'] = abs($img_box[2] - $img_box[0]);
			$characters[$char_index]['height'] = abs($img_box[7] - $img_box[1]);
		}
		else
		{]]></search>
			<add><![CDATA[			$img_box = imagettfbbox($font_size, 0, $settings['default_theme_dir'] . '/fonts/' . $ttfont_list[$character['font']], $character['id']);

			$characters[$char_index]['width'] = abs($img_box[2] - $img_box[0]);
			$characters[$char_index]['height'] = abs(max($img_box[1] - $img_box[7], $img_box[5] - $img_box[3]));
		}
		else
		{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$characters[$char_index]['height'] = imagefontheight($loaded_fonts[$character['font']]);
		}

		$max_height = max($characters[$char_index]['height'] + 15, $max_height);
		$total_width += $characters[$char_index]['width'] + 2;
	}

	// Create an image.]]></search>
			<add><![CDATA[			$characters[$char_index]['height'] = imagefontheight($loaded_fonts[$character['font']]);
		}

		$max_height = max($characters[$char_index]['height'] + 10, $max_height);
		$total_width += $characters[$char_index]['width'];
	}

	// Create an image.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Some squares/rectangles for new extreme level
	if ($noiseType == 'extreme')
	{
		for ($i = 0; $i < rand(1, 5); $i++)
		{
			$x1 = rand(0, $total_width / 4);
			$x2 = $x1 + round(rand($total_width / 4, $total_width));
			$y1 = rand(0, $max_height);
			$y2 = $y1 + round(rand(0, $max_height / 3));
			imagefilledrectangle($code_image, $x1, $y1, $x2, $y2, mt_rand(0, 1) ? $fg_color : $randomness_color);
		}
	}]]></search>
			<add><![CDATA[	// Some squares/rectangles for new extreme level
	if ($noiseType == 'extreme')
	{
		$width4 = (int) ($total_width / 4);
		$height3 = (int) ($max_height / 3);
		for ($i = 0; $i < mt_rand(1, 5); $i++)
		{
			$x1 = mt_rand(0, $width4);
			$x2 = $x1 + mt_rand($width4, $total_width);
			$y1 = mt_rand(0, $max_height);
			$y2 = $y1 + mt_rand(0, $height3);
			imagefilledrectangle($code_image, $x1, $y1, $x2, $y2, mt_rand(0, 1) ? $fg_color : $randomness_color);
		}
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					$can_do_ttf = false;
				elseif ($is_reverse !== false)
				{
					imagefilledpolygon($code_image, $fontcord, 4, $fg_color);

					// Put the character back!
					imagettftext($code_image, $font_size, $angle, $font_x, $font_y, $randomness_color, $fontface, $character['id']);]]></search>
			<add><![CDATA[					$can_do_ttf = false;
				elseif ($is_reverse !== false)
				{
					if (version_compare(PHP_VERSION, '8.1.0') === -1)
						imagefilledpolygon($code_image, $fontcord, 4, $fg_color);
					else
						imagefilledpolygon($code_image, $fontcord, $fg_color);

					// Put the character back!
					imagettftext($code_image, $font_size, $angle, $font_x, $font_y, $randomness_color, $fontface, $character['id']);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			// Put in some ellipse
			$num_ellipse = $noiseType == 'extreme' ? mt_rand(6, 12) : mt_rand(2, 6);
			for ($i = 0; $i < $num_ellipse; $i++)
			{
				$x1 = round(rand(($total_width / 4) * -1, $total_width + ($total_width / 4)));
				$x2 = round(rand($total_width / 2, 2 * $total_width));
				$y1 = round(rand(($max_height / 4) * -1, $max_height + ($max_height / 4)));
				$y2 = round(rand($max_height / 2, 2 * $max_height));
				imageellipse($code_image, $x1, $y1, $x2, $y2, mt_rand(0, 1) ? $fg_color : $randomness_color);
			}
		}]]></search>
			<add><![CDATA[		{
			// Put in some ellipse
			$num_ellipse = $noiseType == 'extreme' ? mt_rand(6, 12) : mt_rand(2, 6);
			$width4 = (int) ($total_width / 4);
			$width2 = (int) ($total_width / 2);
			$height4 = (int) ($max_height / 4);
			$height2 = (int) ($max_height / 2);

			for ($i = 0; $i < $num_ellipse; $i++)
			{
				$x1 = mt_rand($width4 * -1, $total_width + $width4);
				$x2 = mt_rand($width2, 2 * $total_width);
				$y1 = mt_rand($height4 * -1, $max_height + $height4);
				$y2 = mt_rand($height2, 2 * $max_height);
				imageellipse($code_image, $x1, $y1, $x2, $y2, mt_rand(0, 1) ? $fg_color : $randomness_color);
			}
		}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$metric = imagettfbbox($font_size, 0, $font, $text);
			$text_width = abs($metric[4] - $metric[0]);
			$text_height = abs($metric[5] - $metric[1]);
		}
		else
		{]]></search>
			<add><![CDATA[			$metric = imagettfbbox($font_size, 0, $font, $text);
			$text_width = abs($metric[4] - $metric[0]);
			$text_height = abs($metric[5] - $metric[1]);
			$text_offset = $metric[7];
		}
		else
		{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}
	} while ($text_width > $width && $font_size-- > 1);

	$w_offset = ($width - $text_width) / 2;
	$h_offset = $true_type ? ($height / 2) + ($text_height / 2) : ($height - $text_height) / 2;

	if ($true_type)
	{]]></search>
			<add><![CDATA[		}
	} while ($text_width > $width && $font_size-- > 1);

	$w_offset = floor(($width - $text_width) / 2);
	$h_offset = floor(($height - $text_height) / 2);
	$h_offset = $true_type ? $h_offset - $text_offset : $h_offset;

	if ($true_type)
	{]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Mail.subs.php -->		
	<file name="SUBSDIR/Mail.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.8
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$return_path = (!empty($modSettings['maillist_sitename_address']) ? $modSettings['maillist_sitename_address'] : (empty($modSettings['maillist_mail_from']) ? $webmaster_email : $modSettings['maillist_mail_from']));

	// Return path, date, mailer
	$headers .= 'Return-Path: ' . $return_path . $line_break;
	$headers .= 'Date: ' . gmdate('D, d M Y H:i:s') . ' -0000' . $line_break;
	$headers .= 'X-Mailer: ELK' . $line_break;
]]></search>
			<add><![CDATA[	$return_path = (!empty($modSettings['maillist_sitename_address']) ? $modSettings['maillist_sitename_address'] : (empty($modSettings['maillist_mail_from']) ? $webmaster_email : $modSettings['maillist_mail_from']));

	// Return path, date, mailer
	if ($use_sendmail)
		$headers .= 'Return-Path: <' . $return_path . '>' . $line_break;
	$headers .= 'Date: ' . gmdate('D, d M Y H:i:s') . ' -0000' . $line_break;
	$headers .= 'X-Mailer: ELK' . $line_break;
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	elseif (!empty($modSettings['mail_queue']) && !empty($modSettings['mail_period_limit']))
	{
		list ($last_mail_time, $mails_this_minute) = @explode('|', $modSettings['mail_recent']);
		if (empty($mails_this_minute) || time() > $last_mail_time + 60)
			$new_queue_stat = time() . '|' . 1;
		else
			$new_queue_stat = $last_mail_time . '|' . ((int) $mails_this_minute + 1);]]></search>
			<add><![CDATA[	elseif (!empty($modSettings['mail_queue']) && !empty($modSettings['mail_period_limit']))
	{
		list ($last_mail_time, $mails_this_minute) = @explode('|', $modSettings['mail_recent']);
		if (empty($mails_this_minute) || time() > (int) $last_mail_time + 60)
			$new_queue_stat = time() . '|' . 1;
		else
			$new_queue_stat = $last_mail_time . '|' . ((int) $mails_this_minute + 1);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Convert all special characters to HTML entities...just for Hotmail :-\
	if ($hotmail_fix)
	{
		// Convert all 'special' characters to HTML entities.
		return array($charset, preg_replace_callback('~([\x80-\x{10FFFF}])~u', 'entityConvert', $string), '7bit');
	}]]></search>
			<add><![CDATA[	// Convert all special characters to HTML entities...just for Hotmail :-\
	if ($hotmail_fix)
	{
		// Remove this special character
		$string = str_replace("\x00", '', $string);

		// Convert all 'special' characters to HTML entities.
		return array($charset, preg_replace_callback('~([\x80-\x{10FFFF}])~u', 'entityConvert', $string), '7bit');
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}

	// Try to connect to the SMTP server... if it doesn't exist, only wait three seconds.
	if (!$socket = fsockopen($modSettings['smtp_host'], empty($modSettings['smtp_port']) ? 25 : $modSettings['smtp_port'], $errno, $errstr, 3))
	{
		// Maybe we can still save this?  The port might be wrong.
		if (substr($modSettings['smtp_host'], 0, 4) == 'ssl:' && (empty($modSettings['smtp_port']) || $modSettings['smtp_port'] == 25))
		{
			if ($socket = fsockopen($modSettings['smtp_host'], 465, $errno, $errstr, 3))
				Errors::instance()->log_error($txt['smtp_port_ssl']);
		}
]]></search>
			<add><![CDATA[	}

	// Try to connect to the SMTP server... if it doesn't exist, only wait three seconds.
	if (!$socket = @fsockopen($modSettings['smtp_host'], empty($modSettings['smtp_port']) ? 25 : $modSettings['smtp_port'], $errno, $errstr, 3))
	{
		// Maybe we can still save this?  The port might be wrong.
		if (substr($modSettings['smtp_host'], 0, 4) == 'ssl:' && (empty($modSettings['smtp_port']) || $modSettings['smtp_port'] == 25))
		{
			if ($socket = @fsockopen($modSettings['smtp_host'], 465, $errno, $errstr, 3))
				Errors::instance()->log_error($txt['smtp_port_ssl']);
		}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$need_break = substr($headers, -1) === "\n" || substr($headers, -1) === "\r" ? false : true;
	$real_headers = $headers;
	$line_break = "\r\n";

	// !! Theoretically, we should be able to just loop the RCPT TO.
	$mail_to_array = array_values($mail_to_array);]]></search>
			<add><![CDATA[	$need_break = substr($headers, -1) === "\n" || substr($headers, -1) === "\r" ? false : true;
	$real_headers = $headers;
	$line_break = "\r\n";
	$return_path = (!empty($modSettings['maillist_sitename_address']) ? $modSettings['maillist_sitename_address'] : (empty($modSettings['maillist_mail_from']) ? $webmaster_email : $modSettings['maillist_mail_from']));

	// !! Theoretically, we should be able to just loop the RCPT TO.
	$mail_to_array = array_values($mail_to_array);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}

		// From, to, and then start the data...
		if (!server_parse('MAIL FROM: <' . (empty($modSettings['maillist_mail_from']) ? $webmaster_email : $modSettings['maillist_mail_from']) . '>', $socket, '250'))
			return false;
		if (!server_parse('RCPT TO: <' . $mail_to . '>', $socket, '250'))
			return false;]]></search>
			<add><![CDATA[		}

		// From, to, and then start the data...
		if (!server_parse('MAIL FROM: <' . $return_path . '>', $socket, '250'))
			return false;
		if (!server_parse('RCPT TO: <' . $mail_to . '>', $socket, '250'))
			return false;]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ManageSearch.subs.php -->		
	<file name="SUBSDIR/ManageSearch.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$version = '0.0.0';

	// Can we get the version that is running/installed?
	@exec('searchd --help', $sphver);
	if (!empty($sphver) && preg_match('~Sphinx (\d\.\d\.\d\d?)~', $sphver[0], $match))
	{
		$version = $match[1];
	}

	return $version;]]></search>
			<add><![CDATA[	$version = '0.0.0';

	// Can we get the version that is running/installed?
	if (function_exists('exec'))
	{
		@exec('searchd --help', $sphver);
		if (!empty($sphver) && preg_match('~Sphinx (\d\.\d\.\d\d?)~', $sphver[0], $match))
		{
			$version = $match[1];
		}
	}

	return $version;]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Memberlist.subs.php -->		
	<file name="SUBSDIR/Memberlist.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		$context['members'][$member] = $memberContext[$member];
		$context['members'][$member]['post_percent'] = round(($context['members'][$member]['real_posts'] * 100) / $most_posts);
		$context['members'][$member]['registered_date'] = strftime('%Y-%m-%d', $context['members'][$member]['registered_timestamp']);
		$context['members'][$member]['real_name'] = $context['members'][$member]['link'];
		$context['members'][$member]['avatar'] = '<a href="' . $context['members'][$member]['href'] . '">' . $context['members'][$member]['avatar']['image'] . '</a>';
		$context['members'][$member]['email_address'] = $context['members'][$member]['email'];]]></search>
			<add><![CDATA[
		$context['members'][$member] = $memberContext[$member];
		$context['members'][$member]['post_percent'] = round(($context['members'][$member]['real_posts'] * 100) / $most_posts);
		$context['members'][$member]['registered_date'] = Util::strftime('%Y-%m-%d', $context['members'][$member]['registered_timestamp']);
		$context['members'][$member]['real_name'] = $context['members'][$member]['link'];
		$context['members'][$member]['avatar'] = '<a href="' . $context['members'][$member]['href'] . '">' . $context['members'][$member]['avatar']['image'] . '</a>';
		$context['members'][$member]['email_address'] = $context['members'][$member]['email'];]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Members.subs.php -->		
	<file name="SUBSDIR/Members.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			array(
				'version' => $agreement_version,
				'id_member' => $id_member,
				'accepted_date' => strftime('%Y-%m-%d', forum_time(false)),
				'accepted_ip' => $ip,
			)
		),]]></search>
			<add><![CDATA[			array(
				'version' => $agreement_version,
				'id_member' => $id_member,
				'accepted_date' => Util::strftime('%Y-%m-%d', forum_time(false)),
				'accepted_ip' => $ip,
			)
		),]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for MembersOnline.subs.php -->		
	<file name="SUBSDIR/MembersOnline.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'mostDate' => time()
		);

	$date = strftime('%Y-%m-%d', forum_time(false));

	// No entry exists for today yet?
	if (!isset($modSettings['mostOnlineUpdated']) || $modSettings['mostOnlineUpdated'] != $date)]]></search>
			<add><![CDATA[			'mostDate' => time()
		);

	$date = Util::strftime('%Y-%m-%d', forum_time(false));

	// No entry exists for today yet?
	if (!isset($modSettings['mostOnlineUpdated']) || $modSettings['mostOnlineUpdated'] != $date)]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Mentions.subs.php -->		
	<file name="SUBSDIR/Mentions.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.2
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$db->query('', '
		UPDATE {db_prefix}log_mentions
		SET
			status = status ' . ($enable ? '-' : '+') . ' {int:toggle}
		WHERE mention_type = {string:type}
			AND status ' . ($enable ? '>=' : '<') . ' {int:toggle}
			AND is_accessible = 0',
		array(
			'type' => $type,
			'toggle' => -10,
		)
	);
}]]></search>
			<add><![CDATA[	$db->query('', '
		UPDATE {db_prefix}log_mentions
		SET
			status = status ' . ($enable ? '+' : '-') . ' {int:toggle}
		WHERE mention_type = {string:type}
			AND status ' . ($enable ? '<' : '>=') . ' 0
			AND is_accessible = 0',
		array(
			'type' => $type,
			'toggle' => 10,
		)
	);
}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Notification.subs.php -->		
	<file name="SUBSDIR/Notification.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[{
	global $modSettings;

	// Generate a 22 digit random code suitable for Blowfish crypt.
	$tokenizer = new \Token_Hash();
	$blowfish_salt = '$2a$10$' . $tokenizer->generate_hash(22);
	$now = time();

	// Ideally we would just have a larger -per user- password_salt
	if (empty($modSettings['unsubscribe_site_salt']))
	{
		// extra 10 digits of salt
		$unsubscribe_site_salt = $tokenizer->generate_hash();
		updateSettings(array('unsubscribe_site_salt' => $unsubscribe_site_salt));
	}

	// Add member salt + site salt to the otherwise deterministic data
	$hash = crypt($area . $extra . $now . $memEmail . $memSalt . $modSettings['unsubscribe_site_salt'], $blowfish_salt);

	return urlencode(implode('_',
		array(
			$memID,
			substr($hash, 7),
			$area,
			$extra,
			$now]]></search>
			<add><![CDATA[{
	global $modSettings;

	$tokenizer = new \Token_Hash();

	// Ideally we would just have a larger -per user- password_salt
	if (empty($modSettings['unsubscribe_site_salt']))
	{
		// Extra digits of salt
		$unsubscribe_site_salt = $tokenizer->generate_hash(22);
		updateSettings(array('unsubscribe_site_salt' => $unsubscribe_site_salt));
	}

	// Generate a code suitable for Blowfish crypt
	$blowfish_salt = '$2a$07$' . $memSalt . $modSettings['unsubscribe_site_salt'] . '$';
	$now = time();
	$hash = crypt($area . $extra . $now . $memEmail . $memSalt, $blowfish_salt);

	return urlencode(implode('_',
		array(
			$memID,
			substr($hash, 28),
			$area,
			$extra,
			$now]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ *
 * @param string $memEmail member email address
 * @param string $memSalt member salt
 * @param string $area area to unsubscribe
 * @param string $hash the sent hash
 * @return bool
 */]]></search>
			<add><![CDATA[ *
 * @param string $memEmail member email address
 * @param string $memSalt member salt
 * @param string $area data to validate = area + extra + time from link
 * @param string $hash the sent hash
 * @return bool
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		return false;
	}

	$expected = '$2a$10$' . $hash;
	$check = crypt($area . $memEmail . $memSalt . $modSettings['unsubscribe_site_salt'], $expected);

	// Basic safe compare as hash_equals is PHP 5.6+
	if (function_exists('hash_equals'))]]></search>
			<add><![CDATA[		return false;
	}

	$blowfish_salt = '$2a$07$' . $memSalt . $modSettings['unsubscribe_site_salt']. '$';
	$expected = substr($blowfish_salt, 0, 28) . $hash;
	$check = crypt($area . $memEmail . $memSalt, $blowfish_salt);

	// Basic safe compare as hash_equals is PHP 5.6+
	if (function_exists('hash_equals'))]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Package.subs.php -->		
	<file name="SUBSDIR/Package.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			package_chmod(BOARDDIR . '/packages/backups');

		// Name the output file, yyyy-mm-dd_before_package_name.tar.gz
		$output_file = BOARDDIR . '/packages/backups/' . strftime('%Y-%m-%d_') . preg_replace('~[$\\\\/:<>|?*"\']~', '', $id);
		$output_ext = '.tar';

		if (file_exists($output_file . $output_ext . '.gz'))]]></search>
			<add><![CDATA[			package_chmod(BOARDDIR . '/packages/backups');

		// Name the output file, yyyy-mm-dd_before_package_name.tar.gz
		$output_file = BOARDDIR . '/packages/backups/' . Util::strftime('%Y-%m-%d_') . preg_replace('~[$\\\\/:<>|?*"\']~', '', $id);
		$output_ext = '.tar';

		if (file_exists($output_file . $output_ext . '.gz'))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	return $data;
}

if (!function_exists('crc32_compat'))
{
	require_once(SUBSDIR . '/Compat.subs.php');
}

/**
 * Checks if a package is installed or not
 *]]></search>
			<add><![CDATA[	return $data;
}

/**
 * Checks if a package is installed or not
 *]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for PackagesFilterIterator.class.php -->		
	<file name="SUBSDIR/PackagesFilterIterator.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 *
	 * @return bool
	 */
	public function accept()
	{
		$current = $this->current();]]></search>
			<add><![CDATA[	 *
	 * @return bool
	 */
	#[\ReturnTypeWillChange]
	public function accept()
	{
		$current = $this->current();]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Post.subs.php -->		
	<file name="SUBSDIR/Post.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.6
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$request = $db->query('', '
		SELECT m.id_msg, m.approved, m.id_topic, m.id_board, t.id_first_msg, t.id_last_msg,
			m.body, m.subject, COALESCE(mem.real_name, m.poster_name) AS poster_name, m.id_member,
			t.approved AS topic_approved, b.count_posts
		FROM {db_prefix}messages AS m
			INNER JOIN {db_prefix}topics AS t ON (t.id_topic = m.id_topic)
			INNER JOIN {db_prefix}boards AS b ON (b.id_board = m.id_board)]]></search>
			<add><![CDATA[	$request = $db->query('', '
		SELECT m.id_msg, m.approved, m.id_topic, m.id_board, t.id_first_msg, t.id_last_msg,
			m.body, m.subject, COALESCE(mem.real_name, m.poster_name) AS poster_name, m.id_member,
			t.approved AS topic_approved, b.count_posts, mem.signature
		FROM {db_prefix}messages AS m
			INNER JOIN {db_prefix}topics AS t ON (t.id_topic = m.id_topic)
			INNER JOIN {db_prefix}boards AS b ON (b.id_board = m.id_board)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'topic' => $row['id_topic'],
				'msg' => $row['id_first_msg'],
				'poster' => $row['id_member'],
			);
		}
		else]]></search>
			<add><![CDATA[				'topic' => $row['id_topic'],
				'msg' => $row['id_first_msg'],
				'poster' => $row['id_member'],
				'signature' => $row['signature'],
			);
		}
		else]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					'subject' => $row['subject'],
					'name' => $row['poster_name'],
					'topic' => $row['id_topic'],
				);
		}
]]></search>
			<add><![CDATA[					'subject' => $row['subject'],
					'name' => $row['poster_name'],
					'topic' => $row['id_topic'],
					'signature' => $row['signature'],
				);
		}
]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Profile.subs.php -->		
	<file name="SUBSDIR/Profile.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Only thing left, a textbox for you
		else
		{
			$input_html = '<textarea id="' . $row['col_name'] . '" name="customfield[' . $row['col_name'] . ']" ' . (!empty($rows) ? 'rows="' . $row['rows'] . '"' : '') . ' ' . (!empty($cols) ? 'cols="' . $row['cols'] . '"' : '') . '>' . $value . '</textarea>';
		}

		// Parse BBCode]]></search>
			<add><![CDATA[		// Only thing left, a textbox for you
		else
		{
			$input_html = '<textarea id="' . $row['col_name'] . '" name="customfield[' . $row['col_name'] . ']" ' . (!empty($row['rows']) ? 'rows="' . $row['rows'] . '"' : '') . ' ' . (!empty($row['cols']) ? 'cols="' . $row['cols'] . '"' : '') . '>' . $value . '</textarea>';
		}

		// Parse BBCode]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			);
			if (in_array($row['field_type'], array('radio', 'select')))
			{
				$replacements['{KEY}'] = $row['col_name'] . '_' . $key;
			}
			$output_html = strtr($row['enclose'], $replacements);
		}]]></search>
			<add><![CDATA[			);
			if (in_array($row['field_type'], array('radio', 'select')))
			{
				$replacements['{KEY}'] = $row['col_name'] . '_' . (isset($key) ? $key : 0);
			}
			$output_html = strtr($row['enclose'], $replacements);
		}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		),
		'date_registered' => array(
			'type' => 'date',
			'value' => empty($cur_profile['date_registered']) ? $txt['not_applicable'] : strftime('%Y-%m-%d', $cur_profile['date_registered'] + ($user_info['time_offset'] + $modSettings['time_offset']) * 3600),
			'label' => $txt['date_registered'],
			'log_change' => true,
			'permission' => 'moderate_forum',]]></search>
			<add><![CDATA[		),
		'date_registered' => array(
			'type' => 'date',
			'value' => empty($cur_profile['date_registered']) ? $txt['not_applicable'] : Util::strftime('%Y-%m-%d', $cur_profile['date_registered'] + ($user_info['time_offset'] + $modSettings['time_offset']) * 3600),
			'label' => $txt['date_registered'],
			'log_change' => true,
			'permission' => 'moderate_forum',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				if (($value = strtotime($value)) === -1)
				{
					$value = $cur_profile['date_registered'];
					return $txt['invalid_registration'] . ' ' . strftime('%d %b %Y ' . (strpos($user_info['time_format'], '%H') !== false ? '%I:%M:%S %p' : '%H:%M:%S'), forum_time(false));
				}
				// As long as it doesn't equal "N/A"...
				elseif ($value != $txt['not_applicable'] && $value != strtotime(strftime('%Y-%m-%d', $cur_profile['date_registered'] + ($user_info['time_offset'] + $modSettings['time_offset']) * 3600)))
					$value = $value - ($user_info['time_offset'] + $modSettings['time_offset']) * 3600;
				else
					$value = $cur_profile['date_registered'];]]></search>
			<add><![CDATA[				if (($value = strtotime($value)) === -1)
				{
					$value = $cur_profile['date_registered'];
					return $txt['invalid_registration'] . ' ' . Util::strftime('%d %b %Y ' . (strpos($user_info['time_format'], '%H') !== false ? '%I:%M:%S %p' : '%H:%M:%S'), forum_time(false));
				}
				// As long as it doesn't equal "N/A"...
				elseif ($value != $txt['not_applicable'] && $value != strtotime(Util::strftime('%Y-%m-%d', $cur_profile['date_registered'] + ($user_info['time_offset'] + $modSettings['time_offset']) * 3600)))
					$value = $value - ($user_info['time_offset'] + $modSettings['time_offset']) * 3600;
				else
					$value = $cur_profile['date_registered'];]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$context['member']['time_format'] = $cur_profile['time_format'];
				$context['current_forum_time'] = standardTime(time() - $user_info['time_offset'] * 3600, false);
				$context['current_forum_time_js'] = strftime('%Y,' . ((int) strftime('%m', time() + $modSettings['time_offset'] * 3600) - 1) . ',%d,%H,%M,%S', time() + $modSettings['time_offset'] * 3600);
				$context['current_forum_time_hour'] = (int) strftime('%H', forum_time(false));
				return true;
			},
		),]]></search>
			<add><![CDATA[
				$context['member']['time_format'] = $cur_profile['time_format'];
				$context['current_forum_time'] = standardTime(time() - $user_info['time_offset'] * 3600, false);
				$context['current_forum_time_js'] = Util::strftime('%Y,' . ((int) Util::strftime('%m', time() + $modSettings['time_offset'] * 3600) - 1) . ',%d,%H,%M,%S', time() + $modSettings['time_offset'] * 3600);
				$context['current_forum_time_hour'] = (int) Util::strftime('%H', forum_time(false));
				return true;
			},
		),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			if (in_array($row['field_type'], array('radio', 'select')))
			{
				$user_profile[$memID]['options'][$row['col_name']] = $value;
				$user_profile[$memID]['options'][$row['col_name'] . '_key'] = $row['col_name'] . '_' . $key;
			}
			else
			{]]></search>
			<add><![CDATA[			if (in_array($row['field_type'], array('radio', 'select')))
			{
				$user_profile[$memID]['options'][$row['col_name']] = $value;
				$user_profile[$memID]['options'][$row['col_name'] . '_key'] = $row['col_name'] . '_' . (isset($key) ? $key : 0);
			}
			else
			{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				@unlink($_FILES['attachment']['tmp_name']);
				return 'bad_avatar';
			}
			// Check whether the image is too large.
			elseif ((!empty($modSettings['avatar_max_width']) && $sizes[0] > $modSettings['avatar_max_width']) || (!empty($modSettings['avatar_max_height']) && $sizes[1] > $modSettings['avatar_max_height']))
			{
				if (!empty($modSettings['avatar_action_too_large']) && $modSettings['avatar_action_too_large'] === 'option_download_and_resize')
				{
					// Attempt to chmod it.
					@chmod($_FILES['attachment']['tmp_name'], 0644);

					// @todo remove this require when appropriate
					require_once(SUBSDIR . '/Attachments.subs.php');
					if (!saveAvatar($_FILES['attachment']['tmp_name'], $memID, $modSettings['avatar_max_width'], $modSettings['avatar_max_height']))
					{
						// Something went wrong, so lets delete this offender]]></search>
			<add><![CDATA[				@unlink($_FILES['attachment']['tmp_name']);
				return 'bad_avatar';
			}

			require_once(SUBSDIR . '/Graphics.subs.php');
			require_once(SUBSDIR . '/Attachments.subs.php');

			// If it is a webp image, and ACP support is OFF, but server is capable, then convert it!
			if (empty($modSettings['attachment_webp_enable']) && $sizes[2] == 18 && hasWebpSupport())
			{
				// We do this before the checks as it will increase the filesize
				$format = setDefaultFormat($_FILES['attachment']['tmp_name']);
				if (reencodeImage($_FILES['attachment']['tmp_name'], $format))
				{
					// Update to what it now is (webp to png or jpg)
					$sizes = elk_getimagesize($_FILES['attachment']['tmp_name']);
				}
			}

			// Check whether the image is too large.
			if ((!empty($modSettings['avatar_max_width']) && $sizes[0] > $modSettings['avatar_max_width']) || (!empty($modSettings['avatar_max_height']) && $sizes[1] > $modSettings['avatar_max_height']))
			{
				if (!empty($modSettings['avatar_action_too_large']) && $modSettings['avatar_action_too_large'] === 'option_download_and_resize')
				{
					// Attempt to chmod it.
					@chmod($_FILES['attachment']['tmp_name'], 0644);

					if (!saveAvatar($_FILES['attachment']['tmp_name'], $memID, $modSettings['avatar_max_width'], $modSettings['avatar_max_height']))
					{
						// Something went wrong, so lets delete this offender]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					// Attempt to chmod it.
					@chmod($_FILES['attachment']['tmp_name'], 0644);

					require_once(SUBSDIR . '/Graphics.subs.php');
					if (!reencodeImage($_FILES['attachment']['tmp_name'], $sizes[2]))
					{
						@unlink($_FILES['attachment']['tmp_name']);
						return 'bad_avatar';
					}

					// @todo remove this require when appropriate
					require_once(SUBSDIR . '/Attachments.subs.php');
					if (!saveAvatar($_FILES['attachment']['tmp_name'], $memID, $modSettings['avatar_max_width'], $modSettings['avatar_max_height']))
					{
						// Something went wrong, so lets delete this offender]]></search>
			<add><![CDATA[					// Attempt to chmod it.
					@chmod($_FILES['attachment']['tmp_name'], 0644);

					if (!reencodeImage($_FILES['attachment']['tmp_name'], $sizes[2]))
					{
						@unlink($_FILES['attachment']['tmp_name']);
						return 'bad_avatar';
					}

					if (!saveAvatar($_FILES['attachment']['tmp_name'], $memID, $modSettings['avatar_max_width'], $modSettings['avatar_max_height']))
					{
						// Something went wrong, so lets delete this offender]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			elseif (is_array($sizes))
			{
				// Now try to find an infection.
				require_once(SUBSDIR . '/Graphics.subs.php');
				if (!checkImageContents($_FILES['attachment']['tmp_name'], !empty($modSettings['avatar_paranoid'])))
				{
					// It's bad. Try to re-encode the contents?]]></search>
			<add><![CDATA[			elseif (is_array($sizes))
			{
				// Now try to find an infection.
				if (!checkImageContents($_FILES['attachment']['tmp_name'], !empty($modSettings['avatar_paranoid'])))
				{
					// It's bad. Try to re-encode the contents?]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					'1' => 'gif',
					'2' => 'jpg',
					'3' => 'png',
					'6' => 'bmp'
				);

				$extension = isset($extensions[$sizes[2]]) ? $extensions[$sizes[2]] : 'bmp';
				$mime_type = 'image/' . ($extension === 'jpg' ? 'jpeg' : ($extension === 'bmp' ? 'x-ms-bmp' : $extension));
				$destName = 'avatar_' . $memID . '_' . time() . '.' . $extension;
				list ($width, $height) = elk_getimagesize($_FILES['attachment']['tmp_name']);
				$file_hash = empty($modSettings['custom_avatar_enabled']) ? getAttachmentFilename($destName, null, null, true) : '';]]></search>
			<add><![CDATA[					'1' => 'gif',
					'2' => 'jpg',
					'3' => 'png',
					'6' => 'bmp',
				);

				if (!empty($modSettings['attachment_webp_enable']))
					$extensions['18'] = 'webp';

				$extension = isset($extensions[$sizes[2]]) ? $extensions[$sizes[2]] : 'jpg';
				$mime_type = 'image/' . ($extension === 'jpg' ? 'jpeg' : $extension);
				$destName = 'avatar_' . $memID . '_' . time() . '.' . $extension;
				list ($width, $height) = elk_getimagesize($_FILES['attachment']['tmp_name']);
				$file_hash = empty($modSettings['custom_avatar_enabled']) ? getAttachmentFilename($destName, null, null, true) : '';]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for DailyDigest.php -->		
	<file name="SUBSDIR/ScheduledTask/DailyDigest.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			return true;

		// Fix the last reply message so its suitable for previewing
		if ($maillist)
		{
			foreach ($types['reply'] as $id => $board)
			{]]></search>
			<add><![CDATA[			return true;

		// Fix the last reply message so its suitable for previewing
		if ($maillist && !empty($types['reply']))
		{
			foreach ($types['reply'] as $id => $board)
			{]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Sphinxql.php -->		
	<file name="SUBSDIR/Search/API/Sphinxql.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.6
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$cleanWords = $this->_cleanString($token[2]);

			// Explode the cleanWords again in case the cleaning puts more spaces into it
			$addWords = $phrase ? array('"' . $cleanWords . '"') : preg_split('~ ~u', $cleanWords, null, PREG_SPLIT_NO_EMPTY);

			// Excluding this word?
			if ($token[1] === '-')]]></search>
			<add><![CDATA[			$cleanWords = $this->_cleanString($token[2]);

			// Explode the cleanWords again in case the cleaning puts more spaces into it
			$addWords = $phrase ? array('"' . $cleanWords . '"') : preg_split('~ ~u', $cleanWords, -1, PREG_SPLIT_NO_EMPTY);

			// Excluding this word?
			if ($token[1] === '-')]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Search.php -->		
	<file name="SUBSDIR/Search/Search.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.8
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if (empty($this->_search_params['topic']) && empty($this->_search_params['show_complete']))
		{
			$main_query['select']['id_topic'] = 't.id_topic';
			$main_query['select']['id_msg'] = 'MAX(m.id_msg) AS id_msg';
			$main_query['select']['num_matches'] = 'COUNT(*) AS num_matches';
			$main_query['weights'] = $this->_weight_factors;
			$main_query['group_by'][] = 't.id_topic';]]></search>
			<add><![CDATA[		if (empty($this->_search_params['topic']) && empty($this->_search_params['show_complete']))
		{
			$main_query['select']['id_topic'] = 't.id_topic';
			$main_query['select']['id_msg'] = 'MIN(m.id_msg) AS id_msg';
			$main_query['select']['num_matches'] = 'COUNT(*) AS num_matches';
			$main_query['weights'] = $this->_weight_factors;
			$main_query['group_by'][] = 't.id_topic';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'first_message' => array(
					'search' => 'CASE WHEN m.id_msg = t.id_first_msg THEN 1 ELSE 0 END',
				),
			);

			if (!empty($this->_search_params['topic']))]]></search>
			<add><![CDATA[				'first_message' => array(
					'search' => 'CASE WHEN m.id_msg = t.id_first_msg THEN 1 ELSE 0 END',
				),
				// experimental, give longer messages more weight
				'length' => array(
					'search' => '(CASE WHEN LENGTH(m.body) - LENGTH(REPLACE(m.body, " ", "")) > 500 THEN 1 ELSE (LENGTH(m.body) - LENGTH(REPLACE(m.body, " ", "")) / 500) END)',
				),
			);

			if (!empty($this->_search_params['topic']))]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for SearchEngines.subs.php -->		
	<file name="SUBSDIR/SearchEngines.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Attempt to update today's entry.
	if ($modSettings['spider_mode'] == 1)
	{
		$date = strftime('%Y-%m-%d', forum_time(false));
		$db->query('', '
			UPDATE {db_prefix}log_spider_stats
			SET last_seen = {int:current_time}, page_hits = page_hits + 1]]></search>
			<add><![CDATA[	// Attempt to update today's entry.
	if ($modSettings['spider_mode'] == 1)
	{
		$date = Util::strftime('%Y-%m-%d', forum_time(false));
		$db->query('', '
			UPDATE {db_prefix}log_spider_stats
			SET last_seen = {int:current_time}, page_hits = page_hits + 1]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	foreach ($spider_hits as $stat)
	{
		// We assume the max date is within the right day.
		$date = strftime('%Y-%m-%d', $stat['last_seen']);
		$db->query('', '
			UPDATE {db_prefix}log_spider_stats
			SET page_hits = page_hits + ' . $stat['num_hits'] . ',]]></search>
			<add><![CDATA[	foreach ($spider_hits as $stat)
	{
		// We assume the max date is within the right day.
		$date = Util::strftime('%Y-%m-%d', $stat['last_seen']);
		$db->query('', '
			UPDATE {db_prefix}log_spider_stats
			SET page_hits = page_hits + ' . $stat['num_hits'] . ',]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for DatabaseHandler.php -->		
	<file name="SUBSDIR/SessionHandler/DatabaseHandler.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	/**
	 * {@inheritdoc}
	 */
	public function destroy($sessionId)
	{
		// Better safe than sorry]]></search>
			<add><![CDATA[	/**
	 * {@inheritdoc}
	 */
	#[\ReturnTypeWillChange]
	public function destroy($sessionId)
	{
		// Better safe than sorry]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	/**
	 * {@inheritdoc}
	 */
	public function gc($maxLifetime)
	{
		// Just set to the default or lower?  Ignore it for a higher value. (hopefully)]]></search>
			<add><![CDATA[	/**
	 * {@inheritdoc}
	 */
	#[\ReturnTypeWillChange]
	public function gc($maxLifetime)
	{
		// Just set to the default or lower?  Ignore it for a higher value. (hopefully)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	/**
	 * {@inheritdoc}
	 */
	public function read($sessionId)
	{
		if (preg_match('~^[A-Za-z0-9,-]{16,64}$~', $sessionId) == 0)]]></search>
			<add><![CDATA[	/**
	 * {@inheritdoc}
	 */
	#[\ReturnTypeWillChange]
	public function read($sessionId)
	{
		if (preg_match('~^[A-Za-z0-9,-]{16,64}$~', $sessionId) == 0)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	/**
	 * {@inheritdoc}
	 */
	public function write($sessionId, $data)
	{
		if (preg_match('~^[A-Za-z0-9,-]{16,64}$~', $sessionId) == 0)]]></search>
			<add><![CDATA[	/**
	 * {@inheritdoc}
	 */
	#[\ReturnTypeWillChange]
	public function write($sessionId, $data)
	{
		if (preg_match('~^[A-Za-z0-9,-]{16,64}$~', $sessionId) == 0)]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for InlinePermissions.php -->		
	<file name="SUBSDIR/SettingsFormAdapter/InlinePermissions.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 */

namespace ElkArte\sources\subs\SettingsFormAdapter;]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 */

namespace ElkArte\sources\subs\SettingsFormAdapter;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Load the permission settings that guests cannot have
		$this->illegal_guest_permissions = array_intersect(
			array_map(
				function ($permission)
				{
					return str_replace(array('_any', '_own'), '', $permission[1]);
				}, $this->permissions
			), $this->permissionsObject->getIllegalGuestPermissions()
		);
	}
]]></search>
			<add><![CDATA[
		// Load the permission settings that guests cannot have
		$this->illegal_guest_permissions = array_intersect(
			$this->permissionList,
			$this->permissionsObject->getIllegalGuestPermissions()
		);
	}
]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Subscriptions-PayPal.class.php -->		
	<file name="SUBSDIR/Subscriptions-PayPal.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Now that we have received a VERIFIED response from PayPal, we perform some checks
		// before we assume that the IPN is legitimate. First check that this is intended for us.
		if ($modSettings['paypal_email'] !== $_POST['business'] && (empty($modSettings['paypal_additional_emails']) || !in_array($_POST['business'], explode(',', $modSettings['paypal_additional_emails']))))
		{
			exit;
		}]]></search>
			<add><![CDATA[
		// Now that we have received a VERIFIED response from PayPal, we perform some checks
		// before we assume that the IPN is legitimate. First check that this is intended for us.
		if (strtolower($modSettings['paypal_email']) !== strtolower($_POST['business']) && (empty($modSettings['paypal_additional_emails']) || !in_array(strtolower($_POST['business']), explode(',', strtolower($modSettings['paypal_additional_emails'])))))
		{
			exit;
		}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		// Set the post data.
		curl_setopt($curl, CURLOPT_POST, true);
		curl_setopt($curl, CURLOPT_POSTFIELDSIZE, 0);
		curl_setopt($curl, CURLOPT_POSTFIELDS, $this->requestString);

		// Set up the headers so paypal will accept the post]]></search>
			<add><![CDATA[	{
		// Set the post data.
		curl_setopt($curl, CURLOPT_POST, true);
		curl_setopt($curl, CURLOPT_POSTFIELDS, $this->requestString);

		// Set up the headers so paypal will accept the post]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for UnZip.class.php -->		
	<file name="SUBSDIR/UnZip.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			// Extract all file standard length information for this record, its the 42 bytes following the signature
			$temp = unpack('vversion/vversion_needed/vgeneral_purpose/vcompress_method/vfile_time/vfile_date/Vcrc/Vcompressed_size/Vsize/vfilename_length/vextra_field_length/vcomment_length/vdisk_number_start/vinternal_attributes/vexternal_attributes1/vexternal_attributes2/Vrelative_offset', substr($this->_data_cdr, $pointer + 4, 42));

			// Extract the variable length data, filename, etc
			$pointer = $pointer + 46;]]></search>
			<add><![CDATA[
			// Extract all file standard length information for this record, its the 42 bytes following the signature
			$temp = unpack('vversion/vversion_needed/vgeneral_purpose/vcompress_method/vfile_time/vfile_date/Vcrc/Vcompressed_size/Vsize/vfilename_length/vextra_field_length/vcomment_length/vdisk_number_start/vinternal_attributes/vexternal_attributes1/vexternal_attributes2/Vrelative_offset', substr($this->_data_cdr, $pointer + 4, 42));
			if ($temp === false)
				return false;

			// Extract the variable length data, filename, etc
			$pointer = $pointer + 46;]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Util.class.php -->		
	<file name="SUBSDIR/Util.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		global $modSettings;

		if (empty($modSettings['disableEntityCheck']))
		{
			$ent_list = '&(#\d{1,7}|quot|amp|lt|gt|nbsp);';]]></search>
			<add><![CDATA[	{
		global $modSettings;

		if (empty($string))
		{
			return 0;
		}

		if (empty($modSettings['disableEntityCheck']))
		{
			$ent_list = '&(#\d{1,7}|quot|amp|lt|gt|nbsp);';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		return @$function($string, $options);
	}
}]]></search>
			<add><![CDATA[
		return @$function($string, $options);
	}

	/*
	* Provide a PHP 8.1 version of strftime
	*
	* @param string $format of the date/time to return
	* @param int|null $timestamp to convert
	* @return string|false
	*/
	public static function strftime(string $format, int $timestamp = null)
	{
		if (function_exists('strftime') && (PHP_VERSION_ID < 80100))
			return \strftime($format, $timestamp);

		if (is_null($timestamp))
			$timestamp = time();

		$date_equivalents = array (
			'%a' => 'D',
			'%A' => 'l',
			'%d' => 'd',
			'%e' => 'j',
			'%j' => 'z',
			'%u' => 'N',
			'%w' => 'w',
			// Week
			'%U' => 'W', // Week Number of the given year
			'%V' => 'W',
			'%W' => 'W',
			// Month
			'%b' => 'M',
			'%B' => 'F',
			'%h' => 'M',
			'%m' => 'm',
			// Year
			'%C' => 'y', // Two digit representation of the century
			'%g' => 'y',
			'%G' => 'y',
			'%y' => 'y',
			'%Y' => 'Y',
			// Time
			'%H' => 'H',
			'%k' => 'G',
			'%I' => 'h',
			'%l' => 'g',
			'%M' => 'i',
			'%p' => 'A',
			'%P' => 'a',
			'%r' => 'H:i:s a',
			'%R' => 'H:i',
			'%S' => 's',
			'%T' => 'H:i:s',
			'%X' => 'h:i:s', // Preferred time representation based upon locale
			'%z' => 'O',
			'%Z' => 'T',
			// Time and Date Stamps
			'%c' => 'c',
			'%D' => 'm/d/y',
			'%F' => 'y/m/d',
			'%s' => 'U',
			'%x' => '', // Locale based date representation
			// Misc
			'%n' => "\n",
			'%t' => "\t",
			'%%' => '%',
		);

		$format = preg_replace_callback(
			'/%[A-Za-z]{1}/',
			function($matches) use ($timestamp, $date_equivalents)
			{
				$new_format = str_replace(array_keys($date_equivalents), array_values($date_equivalents), $matches[0]);
				return date($new_format, $timestamp);
			},
			$format
		);

		return $format;
	}

	/*
	* Provide a PHP 8.1 version of gmstrftime
	*
	* @param string $format of the date/time to return
	* @param int|null $timestamp to convert
	* @return string|false
	*/
	public static function gmstrftime(string $format, int $timestamp = null)
	{
		if (function_exists('gmstrftime') && (PHP_VERSION_ID < 80100))
			return \gmstrftime($format, $timestamp);

		return self::strftime($format, $timestamp);
	}

	/**
	 * Checks if the string contains any 4byte chars (emoji) and if so,
	 * converts them into &#x...; HTML entities.
	 *
	 * @param string $string
	 * @return string
	 */
	static function clean_4byte_chars($string)
	{
		global $modSettings;

		if (!empty($modSettings['using_utf8mb4']))
			return $string;

		$result = $string;

		//  If we are in the 4-byte range
		if (preg_match('~[\x{10000}-\x{10FFFF}]~u', $string))
		{
			$ord = array_map('ord', str_split($string));

			// Byte length
			$length = strlen($string);
			$result = '';

			// Look for a 4byte marker
			for ($i = 0; $i < $length; $i++)
			{
				// The first byte of a 4-byte character encoding starts with the bytes 0xF0-0xF4 (240 <-> 244)
				// but look all the way to 247 for safe measure
				$ord1 = $ord[$i];
				if ($ord1 >= 240 && $ord1 <= 247)
				{
					// Replace it with the corresponding html entity
					$entity = self::uniord(chr($ord[$i]) . chr($ord[$i + 1]) . chr($ord[$i + 2]) . chr($ord[$i + 3]));

					if ($entity === false)
						$result .= "\xEF\xBF\xBD";
					else
						$result .= '&#x' . dechex($entity) . ';';

					$i += 3;
				}
				else
					$result .= $string[$i];
			}
		}

		return $result;
	}

	/**
	 * Converts a 4byte char into the corresponding HTML entity code.
	 *
	 * This function is derived from:
	 * http://www.greywyvern.com/code/php/utf8_html
	 *
	 * @param string $c
	 * @return integer|false
	 */
	static function uniord($c)
	{
		if (ord($c[0]) >= 0 && ord($c[0]) <= 127)
			return ord($c[0]);

		if (ord($c[0]) >= 192 && ord($c[0]) <= 223)
			return (ord($c[0]) - 192) * 64 + (ord($c[1]) - 128);

		if (ord($c[0]) >= 224 && ord($c[0]) <= 239)
			return (ord($c[0]) - 224) * 4096 + (ord($c[1]) - 128) * 64 + (ord($c[2]) - 128);

		if (ord($c[0]) >= 240 && ord($c[0]) <= 247)
			return (ord($c[0]) - 240) * 262144 + (ord($c[1]) - 128) * 4096 + (ord($c[2]) - 128) * 64 + (ord($c[3]) - 128);

		if (ord($c[0]) >= 248 && ord($c[0]) <= 251)
			return (ord($c[0]) - 248) * 16777216 + (ord($c[1]) - 128) * 262144 + (ord($c[2]) - 128) * 4096 + (ord($c[3]) - 128) * 64 + (ord($c[4]) - 128);

		if (ord($c[0]) >= 252 && ord($c[0]) <= 253)
			return (ord($c[0]) - 252) * 1073741824 + (ord($c[1]) - 128) * 16777216 + (ord($c[2]) - 128) * 262144 + (ord($c[3]) - 128) * 4096 + (ord($c[4]) - 128) * 64 + (ord($c[5]) - 128);

		if (ord($c[0]) >= 254 && ord($c[0]) <= 255)
			return false;

		return 0;
	}
}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for BoardIndex.template.php -->		
	<file name="THEMEDIR/BoardIndex.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	echo '
			<li class="board_row hslice" id="recent_posts_content">
				<h3 class="ic_section_header">
					<a href="', $scripturl, '?action=recent"><i class="icon i-post-text"></i>', $txt['recent_posts'], '</a>
				</h3>';

	// Only show one post.]]></search>
			<add><![CDATA[	echo '
			<li class="board_row hslice" id="recent_posts_content">
				<h3 class="ic_section_header">
					<a href="', $scripturl, '?action=recent"><i class="icon i-post-text"></i>', empty($settings['recent_post_topics']) ? $txt['recent_posts'] : $txt['recent_topics'], '</a>
				</h3>';

	// Only show one post.]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Display.template.php -->		
	<file name="THEMEDIR/Display.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Show the post itself, finally!
		echo '
						<section id="msg_', $message['id'], '" class="messageContent', $ignoring ? ' hide"' : '"', '>',
							$message['body'], '
						</section>';

		// Assuming there are attachments...
		if (!empty($message['attachment']))
			template_display_attachments($message, $ignoring);]]></search>
			<add><![CDATA[
		// Show the post itself, finally!
		echo '
						<section id="msg_', $message['id'], '" data-msgid="',$message['id'], '" class="messageContent', $ignoring ? ' hide"' : '"', '>',
							$message['body'], '
						</section>';

		// This is the floating Quick Quote button.
		echo '
						<button id="button_float_qq_', $message['id'], '" type="submit" role="button" style="display: none" class="quick_quote_button hide">', !empty($txt['quick_quote']) ? $txt['quick_quote'] : $txt['quote'], '</button>';

		// Assuming there are attachments...
		if (!empty($message['attachment']))
			template_display_attachments($message, $ignoring);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			if ($message['can_like'] || $message['can_unlike'])
				echo '
							<li class="listlevel1', !empty($message['like_counter']) ? ' liked"' : '"', '>
								<a class="linklevel1 ', $message['can_unlike'] ? 'unlike_button' : 'like_button', '" href="javascript:void(0)"', !empty($message['like_counter']) ? ' title="' . $txt['liked_by'] . ' ' . implode(', ', $context['likes'][$message['id']]['member']) . '"' : '', ' onclick="likePosts.prototype.likeUnlikePosts(event,', $message['id'], ', ', $context['current_topic'], '); return false;">',
									!empty($message['like_counter']) ? '<span class="likes_indicator">' . $message['like_counter'] . '</span>&nbsp;' . $txt['likes'] : $txt['like_post'], '
								</a>
							</li>';]]></search>
			<add><![CDATA[			if ($message['can_like'] || $message['can_unlike'])
				echo '
							<li class="listlevel1', !empty($message['like_counter']) ? ' liked"' : '"', '>
								<a class="linklevel1 ', $message['can_unlike'] ? 'unreact_button' : 'react_button', '" href="javascript:void(0)"', !empty($message['like_counter']) ? ' title="' . $txt['liked_by'] . ' ' . implode(', ', $context['likes'][$message['id']]['member']) . '"' : '', ' onclick="likePosts.prototype.likeUnlikePosts(event,', $message['id'], ', ', $context['current_topic'], '); return false;">',
									!empty($message['like_counter']) ? '<span class="likes_indicator">' . $message['like_counter'] . '</span>&nbsp;' . $txt['likes'] : $txt['like_post'], '
								</a>
							</li>';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			else
				echo '
							<li class="listlevel1', !empty($message['like_counter']) ? ' liked"' : '"', '>
								<a href="javascript:void(0)" role="button" title="', !empty($message['like_counter']) ? $txt['liked_by'] . ' ' . implode(', ', $context['likes'][$message['id']]['member']) : '', '" class="linklevel1 likes_button">',
									!empty($message['like_counter']) ? '<span class="likes_indicator">' . $message['like_counter'] . '</span>&nbsp;' . $txt['likes'] : '&nbsp;', '
								</a>
							</li>';]]></search>
			<add><![CDATA[			else
				echo '
							<li class="listlevel1', !empty($message['like_counter']) ? ' liked"' : '"', '>
								<a href="javascript:void(0)" role="button" title="', !empty($message['like_counter']) ? $txt['liked_by'] . ' ' . implode(', ', $context['likes'][$message['id']]['member']) : '', '" class="linklevel1 reacts_button">',
									!empty($message['like_counter']) ? '<span class="likes_indicator">' . $message['like_counter'] . '</span>&nbsp;' . $txt['likes'] : '&nbsp;', '
								</a>
							</li>';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[								<input type="button" name="save_draft" value="', $txt['draft_save'], '" onclick="return confirm(' . JavaScriptEscape($txt['draft_save_note']) . ') && submitThisOnce(this);" accesskey="d" tabindex="', $context['tabindex']++, '" />
								<input type="hidden" id="id_draft" name="id_draft" value="', empty($context['id_draft']) ? 0 : $context['id_draft'], '" />';

			echo '
							</div>';
		}
		else
		{]]></search>
			<add><![CDATA[								<input type="button" name="save_draft" value="', $txt['draft_save'], '" onclick="return confirm(' . JavaScriptEscape($txt['draft_save_note']) . ') && submitThisOnce(this);" accesskey="d" tabindex="', $context['tabindex']++, '" />
								<input type="hidden" id="id_draft" name="id_draft" value="', empty($context['id_draft']) ? 0 : $context['id_draft'], '" />';

			// Show the draft last saved on area
			if (!empty($context['drafts_autosave']) && !empty($options['drafts_autosave_enabled']))
				echo '
							<div class="draftautosave">
								<span id="throbber" class="hide"><i class="icon icon-spin i-spinner"></i>&nbsp;</span>
								<span id="draft_lastautosave"></span>
							</div>';
			echo '
						</div>
					</div>';
		}
		else
		{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[							</div>';
		}

		// Show the draft last saved on area
		if (!empty($context['drafts_autosave']) && !empty($options['drafts_autosave_enabled']))
			echo '
							<div class="draftautosave">
								<span id="throbber" class="hide"><i class="icon icon-spin i-spinner"></i>&nbsp;</span>
								<span id="draft_lastautosave"></span>
							</div>';

		echo '
						</form>
					</div>]]></search>
			<add><![CDATA[							</div>';
		}

		echo '
						</form>
					</div>]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			if ($attachment['thumbnail']['has_thumb'])
				echo '
											<a href="', $attachment['href'], ';image" id="link_', $attachment['id'], '" ', $attachment['thumbnail']['lightbox'], '>
												<img class="attachment_image" src="', $attachment['thumbnail']['href'], '" alt="" id="thumb_', $attachment['id'], '" />
											</a>';
			else
				echo '
											<img class="attachment_image" src="', $attachment['href'], ';image" alt="" style="max-width:100%; max-height:' . $attachment['height'] . 'px;"/>';
		}
		elseif (!empty($modSettings['attachmentShowImages']))
			echo '							<img class="attachment_image" src="', $attachment['href'], ';thumb" alt="" style="max-width:' . $modSettings['attachmentThumbWidth'] . 'px; max-height:' . $modSettings['attachmentThumbHeight'] . 'px;" />';

		echo '
											<a href="', $attachment['href'], '" class="attachment_name">]]></search>
			<add><![CDATA[			if ($attachment['thumbnail']['has_thumb'])
				echo '
											<a href="', $attachment['href'], ';image" id="link_', $attachment['id'], '" ', $attachment['thumbnail']['lightbox'], '>
												<img class="attachment_image" src="', $attachment['thumbnail']['href'], '" alt="" id="thumb_', $attachment['id'], '" loading="lazy" />
											</a>';
			else
				echo '
											<img class="attachment_image" src="', $attachment['href'], ';image" alt="" style="max-width:100%; max-height:' . $attachment['height'] . 'px;" loading="lazy" />';
		}
		elseif (!empty($modSettings['attachmentShowImages']))
			echo '							<img class="attachment_image" src="', $attachment['href'], ';thumb" alt="" style="max-width:' . $modSettings['attachmentThumbWidth'] . 'px; max-height:' . $modSettings['attachmentThumbHeight'] . 'px;" loading="lazy" />';

		echo '
											<a href="', $attachment['href'], '" class="attachment_name">]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for GenericBoards.template.php -->		
	<file name="THEMEDIR/GenericBoards.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			if (!empty($board['last_post']['member']['avatar']))
				echo '
							<span class="board_avatar"><a href="', $board['last_post']['member']['href'], '"><img class="avatar" src="', $board['last_post']['member']['avatar']['href'], '" alt="" /></a></span>';
			else
				echo '
							<span class="board_avatar"><a href="#"></a></span>';]]></search>
			<add><![CDATA[
			if (!empty($board['last_post']['member']['avatar']))
				echo '
							<span class="board_avatar"><a href="', $board['last_post']['member']['href'], '"><img class="avatar" src="', $board['last_post']['member']['avatar']['href'], '" alt="" loading="lazy" /></a></span>';
			else
				echo '
							<span class="board_avatar"><a href="#"></a></span>';]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for MessageIndex.template.php -->		
	<file name="THEMEDIR/MessageIndex.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			if (!empty($topic['last_post']['member']['avatar']))
				echo '
						<span class="board_avatar"><a href="', $topic['last_post']['member']['href'], '"><img class="avatar" src="', $topic['last_post']['member']['avatar']['href'], '" alt="" /></a></span>';
			else
				echo '
						<span class="board_avatar"><a href="#"></a></span>';]]></search>
			<add><![CDATA[
			if (!empty($topic['last_post']['member']['avatar']))
				echo '
						<span class="board_avatar"><a href="', $topic['last_post']['member']['href'], '"><img class="avatar" src="', $topic['last_post']['member']['avatar']['href'], '" alt="" loading="lazy" /></a></span>';
			else
				echo '
						<span class="board_avatar"><a href="#"></a></span>';]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Post.template.php -->		
	<file name="THEMEDIR/Post.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if (empty($attachment['approved']))
			$label .= ' (' . $txt['awaiting_approval'] . ')';
		if (!empty($modSettings['attachmentPostLimit']) || !empty($modSettings['attachmentSizeLimit']))
			$label .= sprintf($txt['attach_kb'], comma_format(round(max($attachment['size'], 1028) / 1028), 0));

		echo '
							<dd class="smalltext">]]></search>
			<add><![CDATA[		if (empty($attachment['approved']))
			$label .= ' (' . $txt['awaiting_approval'] . ')';
		if (!empty($modSettings['attachmentPostLimit']) || !empty($modSettings['attachmentSizeLimit']))
			$label .= sprintf($txt['attach_kb'], comma_format(round(max($attachment['size'], 1024) / 1024), 0));

		echo '
							<dd class="smalltext">]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Show some useful information such as allowed extensions, maximum size and amount of attachments allowed.
	if (!empty($context['attachments']['allowed_extensions']))
		echo '
								', $txt['allowed_types'], ': ', $context['attachments']['allowed_extensions'], '<br />';

	if (!empty($context['attachments']['restrictions']))
		echo '
								', $txt['attach_restrictions'], ' ', implode(', ', $context['attachments']['restrictions']), '<br />';

	if ($context['attachments']['num_allowed'] == 0)
		echo '
								', $txt['attach_limit_nag'], '<br />';

	if (!$context['attachments']['can']['post_unapproved'])
		echo '
								<span class="alert">', $txt['attachment_requires_approval'], '</span>', '<br />';

	echo '
							</dd>]]></search>
			<add><![CDATA[	// Show some useful information such as allowed extensions, maximum size and amount of attachments allowed.
	if (!empty($context['attachments']['allowed_extensions']))
		echo '
								<p id="types">', $txt['allowed_types'], ': ', $context['attachments']['allowed_extensions'], '</p>';

	if (!empty($context['attachments']['restrictions']))
		echo '
								<p id="restrictions">', $txt['attach_restrictions'], ' ', implode(', ', $context['attachments']['restrictions']), '</p>';

	if ($context['attachments']['num_allowed'] == 0)
		echo '
								<p class="infobox">', $txt['attach_limit_nag'], '</p>';

	if (!$context['attachments']['can']['post_unapproved'])
		echo '
								<p class="warningbox">', $txt['attachment_requires_approval'], '</p>';

	echo '
							</dd>]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		var IlaDropEvents = {
			UploadSuccess: function($button, data) {
				var inlineAttach = ElkInlineAttachments(\'#postAttachment2,#postAttachment\', \'' . $context['post_box_name'] . '\', {
					trigger: $(\'<div class="share icon i-share" />\'),
					template: ' . JavaScriptEscape('<div class="insertoverlay">
						<input type="button" class="button" value="' . $txt['insert'] . '">
						<ul data-group="tabs" class="tabs">]]></search>
			<add><![CDATA[		var IlaDropEvents = {
			UploadSuccess: function($button, data) {
				var inlineAttach = ElkInlineAttachments(\'#postAttachment2,#postAttachment\', \'' . $context['post_box_name'] . '\', {
					trigger: $(\'<div class="ila icon i-ila" />\'),
					template: ' . JavaScriptEscape('<div class="insertoverlay">
						<input type="button" class="button" value="' . $txt['insert'] . '">
						<ul data-group="tabs" class="tabs">]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			},
			RemoveSuccess: function(attachid) {
				var inlineAttach = ElkInlineAttachments(\'#postAttachment2,#postAttachment\', \'' . $context['post_box_name'] . '\', {
					trigger: $(\'<div class="share icon i-share" />\')
				});
				inlineAttach.removeAttach(attachid);
			}]]></search>
			<add><![CDATA[			},
			RemoveSuccess: function(attachid) {
				var inlineAttach = ElkInlineAttachments(\'#postAttachment2,#postAttachment\', \'' . $context['post_box_name'] . '\', {
					trigger: $(\'<div class="ila icon i-ila" />\')
				});
				inlineAttach.removeAttach(attachid);
			}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	var dropAttach = new dragDropAttachment({
		board: ' . $context['current_board'] . ',
		allowedExtensions: ' . JavaScriptEscape($context['attachments']['allowed_extensions']) . ',
		totalSizeAllowed: ' . JavaScriptEscape(empty($modSettings['attachmentPostLimit']) ? '' : $modSettings['attachmentPostLimit']) . ',
		individualSizeAllowed: ' . JavaScriptEscape(empty($modSettings['attachmentSizeLimit']) ? '' : $modSettings['attachmentSizeLimit']) . ',
		numOfAttachmentAllowed: ' . $context['attachments']['num_allowed'] . ',
		totalAttachSizeUploaded: ' . (isset($context['attachments']['total_size']) && !empty($context['attachments']['total_size']) ? $context['attachments']['total_size'] : 0) . ',
		numAttachUploaded: ' . (isset($context['attachments']['quantity']) && !empty($context['attachments']['quantity']) ? $context['attachments']['quantity'] : 0) . ',
		fileDisplayTemplate: \'<div class="statusbar"><div class="info"></div><div class="progressBar"><div></div></div><div class="control icon i-close"></div></div>\',
		oTxt: {
			allowedExtensions : ' . JavaScriptEscape(sprintf($txt['cant_upload_type'], $context['attachments']['allowed_extensions'])) . ',]]></search>
			<add><![CDATA[	var dropAttach = new dragDropAttachment({
		board: ' . $context['current_board'] . ',
		allowedExtensions: ' . JavaScriptEscape($context['attachments']['allowed_extensions']) . ',
		totalSizeAllowed: ' . (empty($modSettings['attachmentPostLimit']) ? 0 : $modSettings['attachmentPostLimit'] * 1024) . ',
		totalAttachSizeUploaded: ' . $context['attachments']['total_size'] . ',
		individualSizeAllowed: ' . (empty($modSettings['attachmentSizeLimit']) ? 0 : $modSettings['attachmentSizeLimit'] * 1024) . ',
		numOfAttachmentAllowed: ' . (empty($modSettings['attachmentNumPerPostLimit']) ? 50 : $modSettings['attachmentNumPerPostLimit']) . ',
		numAttachUploaded: ' . $context['attachments']['quantity'] . ',
		resizeImageEnabled: ' . (empty($modSettings['attachment_image_resize_enabled']) ? 0 : 1) . ',
		fileDisplayTemplate: \'<div class="statusbar"><div class="info"></div><div class="progressBar"><div></div></div><div class="control icon i-close"></div></div>\',
		oTxt: {
			allowedExtensions : ' . JavaScriptEscape(sprintf($txt['cant_upload_type'], $context['attachments']['allowed_extensions'])) . ',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			individualSizeAllowed : ' . JavaScriptEscape(sprintf($txt['file_too_big'], comma_format($modSettings['attachmentSizeLimit'], 0))) . ',
			numOfAttachmentAllowed : ' . JavaScriptEscape(sprintf($txt['attachments_limit_per_post'], $modSettings['attachmentNumPerPostLimit'])) . ',
			postUploadError : ' . JavaScriptEscape($txt['post_upload_error']) . ',
			areYouSure: ' . JavaScriptEscape($txt['ila_confirm_removal']) . '
		},
		existingSelector: \'.inline_insert\',
		events: IlaDropEvents' . (isset($context['current_topic']) ? ',]]></search>
			<add><![CDATA[			individualSizeAllowed : ' . JavaScriptEscape(sprintf($txt['file_too_big'], comma_format($modSettings['attachmentSizeLimit'], 0))) . ',
			numOfAttachmentAllowed : ' . JavaScriptEscape(sprintf($txt['attachments_limit_per_post'], $modSettings['attachmentNumPerPostLimit'])) . ',
			postUploadError : ' . JavaScriptEscape($txt['post_upload_error']) . ',
			areYouSure: ' . JavaScriptEscape($txt['ila_confirm_removal']) . ',
			uploadAbort: ' . JavaScriptEscape($txt['attachment_upload_abort']) . ',
			processing: ' . JavaScriptEscape($txt['attachment_processing']) . '
		},
		existingSelector: \'.inline_insert\',
		events: IlaDropEvents' . (isset($context['current_topic']) ? ',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				<div class="postarea2" id="msg', $post['id'], '">
					<div class="keyinfo">
						<h5 class="floatleft">
							<span>', $txt['posted_by'], '</span>&nbsp;', $post['poster'], '&nbsp;-&nbsp;', $post['time'], '
						</h5>';

			if ($context['can_quote'])]]></search>
			<add><![CDATA[				<div class="postarea2" id="msg', $post['id'], '">
					<div class="keyinfo">
						<h5 class="floatleft">
							', $txt['posted_by'], ' <span class="name">', $post['poster'], '</span> &ndash; ', $post['html_time'], '
						</h5>';

			if ($context['can_quote'])]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ProfileOptions.template.php -->		
	<file name="THEMEDIR/ProfileOptions.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[									var maxLength = ', $context['signature_limits']['max_length'], ';

									$(function() {
										calcCharLeft();
										$("#preview_button").click(function() {
											return ajax_getSignaturePreview(true);
										});]]></search>
			<add><![CDATA[									var maxLength = ', $context['signature_limits']['max_length'], ';

									$(function() {
										calcCharLeft(true);
										$("#preview_button").click(function() {
											return ajax_getSignaturePreview(true);
										});]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[										</select>
									</div>
									<div>
										<img id="avatar" src="', $modSettings['avatar_url'] . '/blank.png', '" alt="" />
									</div>
								</div>';
	}]]></search>
			<add><![CDATA[										</select>
									</div>
									<div>
										<img id="avatar avatarresize" src="', $modSettings['avatar_url'] . '/blank.png', '" alt="" />
									</div>
								</div>';
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[									</div>
									<input type="text" id="userpicpersonal" name="userpicpersonal" value="', $context['member']['avatar']['external'], '" onchange="previewExternalAvatar(this.value);" class="input_text" />
									<br /><br />
									<img id="external" src="', !empty($context['member']['avatar']['allow_external']) && $context['member']['avatar']['choice'] == 'external' ? $context['member']['avatar']['external'] : $modSettings['avatar_url'] . '/blank.png', '" alt="" ', !empty($modSettings['avatar_max_height']) ? 'height="' . $modSettings['avatar_max_height'] . '" ' : '', !empty($modSettings['avatar_max_width']) ? 'width="' . $modSettings['avatar_max_width'] . '"' : '', '/>
								</div>';
	}
]]></search>
			<add><![CDATA[									</div>
									<input type="text" id="userpicpersonal" name="userpicpersonal" value="', $context['member']['avatar']['external'], '" onchange="previewExternalAvatar(this.value);" class="input_text" />
									<br /><br />
									<img id="external" src="', $context['member']['avatar']['choice'] === 'external' ? $context['member']['avatar']['external'] : $modSettings['avatar_url'] . '/blank.png', '" alt="" class="avatar avatarresize" />
								</div>';
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		echo '
								<div id="avatar_upload">
									<input type="file" name="attachment" id="avatar_upload_box" class="input_file" />
									', ($context['member']['avatar']['id_attach'] > 0 ? '
									<br /><br />
									<img src="' . $context['member']['avatar']['href'] . (strpos($context['member']['avatar']['href'], '?') === false ? '?' : '&amp;') . 'time=' . time() . '" alt="" />
									<input type="hidden" name="id_attach" value="' . $context['member']['avatar']['id_attach'] . '" />' : ''), '
								</div>';
	}]]></search>
			<add><![CDATA[	{
		echo '
								<div id="avatar_upload">
									<input type="file" name="attachment" id="avatar_upload_box" class="input_file" accept="image/*" onchange="previewUploadedAvatar(this)" />
									', ($context['member']['avatar']['id_attach'] > 0 ? '
									<br /><br />
									<img id="current_avatar" class="avatar avatarresize" src="' . $context['member']['avatar']['href'] . (strpos($context['member']['avatar']['href'], '?') === false ? '?' : '&') . 'time=' . time() . '" alt="" />
									<div id="current_avatar_new" class="hide">
										<img id="current_avatar_new_preview" class="avatar avatarresize border_error" style="vertical-align: middle" alt="" src="" />
										<span>' . $txt['preview'] . '</span>
									</div>
									<input type="hidden" name="id_attach" value="' . $context['member']['avatar']['id_attach'] . '" />' : ''), '
								</div>';
	}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Register.template.php -->		
	<file name="THEMEDIR/Register.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			</fieldset>');
	}

	if ($context['checkbox_agreement'] && $context['require_agreement'])
	{
		echo '
			<fieldset class="content">
				<div id="agreement_box">
					', $context['agreement'], '
				</div>
				<label for="checkbox_agreement">
					<input type="checkbox" name="checkbox_agreement" id="checkbox_agreement" value="1"', ($context['registration_passed_agreement'] ? ' checked="checked"' : ''), ' tabindex="', $context['tabindex']++, '" />
					', $txt['checkbox_agreement'], '
				</label>
				<div id="privacypol_box">
					', $context['privacy_policy'], '
				</div>]]></search>
			<add><![CDATA[			</fieldset>');
	}

	if ($context['checkbox_agreement'] && ($context['require_agreement'] || $context['require_privacypol']))
	{
		echo '
			<fieldset class="content">';

		if ($context['require_agreement'])
			echo '
				<h2 class="category_header">', $txt['registration_agreement'], '</h2>
				<div id="agreement_box">
					', $context['agreement'], '
				</div>
				<label for="checkbox_agreement">
					<input type="checkbox" name="checkbox_agreement" id="checkbox_agreement" value="1"', ($context['registration_passed_agreement'] ? ' checked="checked"' : ''), ' tabindex="', $context['tabindex']++, '" />
					', $txt['checkbox_agreement'], '
				</label>';

		if ($context['require_privacypol'])
			echo '
				<h2 class="category_header">', $txt['registration_privacy_policy'], '</h2>
				<div id="privacypol_box">
					', $context['privacy_policy'], '
				</div>]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Theme.php -->		
	<file name="THEMEDIR/Theme.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:    2011 Simple Machines (http://www.simplemachines.org)
 * license:      BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.8
 *
 */
]]></search>
			<add><![CDATA[ * copyright:    2011 Simple Machines (http://www.simplemachines.org)
 * license:      BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				hide_video : ' . JavaScriptEscape($txt['hide_video']) . ',
				youtube : ' . JavaScriptEscape($txt['youtube']) . ',
				vimeo : ' . JavaScriptEscape($txt['vimeo']) . ',
				dailymotion : ' . JavaScriptEscape($txt['dailymotion']) . '
			});', true);
]]></search>
			<add><![CDATA[				hide_video : ' . JavaScriptEscape($txt['hide_video']) . ',
				youtube : ' . JavaScriptEscape($txt['youtube']) . ',
				vimeo : ' . JavaScriptEscape($txt['vimeo']) . ',
				tiktok : ' . JavaScriptEscape($txt['tiktok']) . ',
				dailymotion : ' . JavaScriptEscape($txt['dailymotion']) . '
			});', true);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$this->addCSSRules('
		.wrapper {width: ' . $settings['forum_width'] . ';}');
		}
	}

	/**]]></search>
			<add><![CDATA[			$this->addCSSRules('
		.wrapper {width: ' . $settings['forum_width'] . ';}');
		}

		// Localization for the show more quote and its container height
		$quote_height = !empty($modSettings['heightBeforeShowMore']) ? $modSettings['heightBeforeShowMore'] . 'px' : 'none';
		$this->addCSSRules('
		input[type=checkbox].quote-show-more:after {content: "' . $txt['post_options'] . '";}
		.quote-read-more > .bbc_quote {--quote_height: ' . $quote_height . ';}'
		);
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$this->addCSSRules('
	.i-account:before {
		content: "";
		background-image: url("' . $user_info['avatar']['href'] . '");
	}');
		}
]]></search>
			<add><![CDATA[			$this->addCSSRules('
	.i-account:before {
		content: "";
		background-image: url("' . htmlspecialchars_decode($user_info['avatar']['href']) . '");
	}');
		}
]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Xml.template.php -->		
	<file name="THEMEDIR/Xml.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		<icon>', $context['favicon'] . '</icon>
		<logo>', $context['header_logo_url_html_safe'], '</logo>

		<updated>', gmstrftime('%Y-%m-%dT%H:%M:%SZ'), '</updated>
]]></search>
			<add><![CDATA[		<icon>', $context['favicon'] . '</icon>
		<logo>', $context['header_logo_url_html_safe'], '</logo>

		<updated>', Util::gmstrftime('%Y-%m-%dT%H:%M:%SZ'), '</updated>
]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for index_besocial.css -->		
	<file name="THEMEDIR/css/_besocial/index_besocial.css">
		<operation>
			<search position="replace"><![CDATA[/* Anchors styled to look like buttons. */
/* These have standard body text size. Can be chained with smalltext class. */
.linkbutton:link, .linkbutton_right:link, .linkbutton_left:link,
.linkbutton:visited, .linkbutton_right:visited, .linkbutton_left:visited {
	border: 1px solid #AFAFAF;
	border-top: 1px solid #CFCFCF;
	border-left: 1px solid #BFBFBF;]]></search>
			<add><![CDATA[/* Anchors styled to look like buttons. */
/* These have standard body text size. Can be chained with smalltext class. */
.linkbutton:link, .linkbutton_right:link, .linkbutton_left:link,
.linkbutton:visited, .linkbutton_right:visited, .linkbutton_left:visited, .ila {
	border: 1px solid #AFAFAF;
	border-top: 1px solid #CFCFCF;
	border-left: 1px solid #BFBFBF;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
/* Hover effects. */
input[type="submit"]:hover, button[type="submit"]:hover, input[type="button"]:hover,
.linkbutton:hover, .linkbutton_right:hover, .linkbutton_left:hover {
	border: 1px solid #CCCCCC;
	border-top: 1px solid #AFAFAF;
	border-left: 1px solid #AFAFAF;]]></search>
			<add><![CDATA[
/* Hover effects. */
input[type="submit"]:hover, button[type="submit"]:hover, input[type="button"]:hover,
.linkbutton:hover, .linkbutton_right:hover, .linkbutton_left:hover, .ila:hover {
	border: 1px solid #CCCCCC;
	border-top: 1px solid #AFAFAF;
	border-left: 1px solid #AFAFAF;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[/* Standard horizontal rule.. ([hr], etc.) */
hr {
	border-top-color: #BBBBBB;
	background: #EEEEEE;
}


/* @todo - Test this everywhere. */
.content {
	border-color: #ddd;]]></search>
			<add><![CDATA[/* Standard horizontal rule.. ([hr], etc.) */
hr {
	border-top-color: #BBBBBB;
	border-bottom-color: #E4E4E4;
	background: #EEEEEE;
}

/* @todo - Test this everywhere. */
.content {
	border-color: #ddd;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	background: #FFFFFF;
}

/* Extra quote styling */
.bbc_quote, .quoteheader {
	box-shadow: 2px 2px 2px #DDDDDD;]]></search>
			<add><![CDATA[	background: #FFFFFF;
}

input[type=checkbox].quote-show-more {
	background: linear-gradient(to bottom, transparent 0%, transparent 25%, #EFEFEF 100%);
	box-shadow: 0 1px 0 1px #DDDDDD;
}

/* Extra quote styling */
.bbc_quote, .quoteheader {
	box-shadow: 2px 2px 2px #DDDDDD;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * -------------------------------------------------------
 */

/* Level 1 Menu bar: link or button. General styling. */
.linklevel1, .linklevel1:link, .linklevel1:visited {
	border: 1px solid #AFAFAF;
	border-top: 1px solid #CFCFCF;
	border-left: 1px solid #BFBFBF;]]></search>
			<add><![CDATA[ * -------------------------------------------------------
 */

/* Overide index.css due to font change */
.listlevel1.inline_mod_check {
	font-size: 11px !important;
}

/* Level 1 Menu bar: link or button. General styling. */
.linklevel1, .linklevel1:link, .linklevel1:visited, .quickbuttons .inline_mod_check {
	border: 1px solid #AFAFAF;
	border-top: 1px solid #CFCFCF;
	border-left: 1px solid #BFBFBF;]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for index_light.css -->		
	<file name="THEMEDIR/css/_light/index_light.css">
		<operation>
			<search position="replace"><![CDATA[/* Anchors styled to look like buttons. */
/* These have standard body text size. Can be chained with smalltext class. */
.linkbutton:link, .linkbutton_right:link, .linkbutton_left:link,
.linkbutton:visited, .linkbutton_right:visited, .linkbutton_left:visited {
	border-color: #AFAFAF;
	border-top-color: #CFCFCF;
	border-left-color: #BFBFBF;]]></search>
			<add><![CDATA[/* Anchors styled to look like buttons. */
/* These have standard body text size. Can be chained with smalltext class. */
.linkbutton:link, .linkbutton_right:link, .linkbutton_left:link,
.linkbutton:visited, .linkbutton_right:visited, .linkbutton_left:visited, .ila {
	border-color: #AFAFAF;
	border-top-color: #CFCFCF;
	border-left-color: #BFBFBF;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
/* Hover effects. */
input[type="submit"]:hover, button[type="submit"]:hover, input[type="button"]:hover,
.linkbutton:hover, .linkbutton_right:hover, .linkbutton_left:hover {
	border-color: #CCCCCC;
	border-top-color: #AFAFAF;
	border-left-color: #AFAFAF;]]></search>
			<add><![CDATA[
/* Hover effects. */
input[type="submit"]:hover, button[type="submit"]:hover, input[type="button"]:hover,
.linkbutton:hover, .linkbutton_right:hover, .linkbutton_left:hover, .ila:hover {
	border-color: #CCCCCC;
	border-top-color: #AFAFAF;
	border-left-color: #AFAFAF;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[/* Standard horizontal rule.. ([hr], etc.) */
hr {
	border-top-color: #BBBBBB;
	background: #EEEEEE;
}
]]></search>
			<add><![CDATA[/* Standard horizontal rule.. ([hr], etc.) */
hr {
	border-top-color: #BBBBBB;
	border-bottom-color: #E4E4E4;
	background: #EEEEEE;
}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	background: #FEFEFE;
}

/* Extra quote styling */
.bbc_quote, .quoteheader {
	box-shadow: 2px 2px 2px #DDDDDD;]]></search>
			<add><![CDATA[	background: #FEFEFE;
}

input[type=checkbox].quote-show-more {
	background: linear-gradient(to bottom, transparent 0%, transparent 25%, #FEFEFE 100%);
	box-shadow: 0 1px 0 1px #E4E4E4;
}

/* Extra quote styling */
.bbc_quote, .quoteheader {
	box-shadow: 2px 2px 2px #DDDDDD;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */

/* Level 1 Menu bar: link or button. General styling. */
.linklevel1, .linklevel1:link, .linklevel1:visited {
	border-color: #AFAFAF;
	border-top-color: #CFCFCF;
	border-left-color: #BFBFBF;]]></search>
			<add><![CDATA[ */

/* Level 1 Menu bar: link or button. General styling. */
.linklevel1, .linklevel1:link, .linklevel1:visited, .quickbuttons .inline_mod_check {
	border-color: #AFAFAF;
	border-top-color: #CFCFCF;
	border-left-color: #BFBFBF;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}

.qaction_row {
	background: #FEFEFE;
}

.approvetopic_row, .approve_row {]]></search>
			<add><![CDATA[}

.qaction_row {
}

.approvetopic_row, .approve_row {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	color: #CCCCCC;
}

.new_post_separator {
	display: block;
}

.new_post_separator:after, .new_post_separator:before {
	border-width: 10px 10px 0;
	border-style: solid;
	border-color: #E4E4E4 transparent;
}
]]></search>
			<add><![CDATA[	color: #CCCCCC;
}

.new_post_separator:after {
	border-color: #E4E4E4 transparent;
}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	border-color: #BBBBBB transparent;
}

/* Used by video embed JS when autolinking video links */
.elk_video {
	border-color: #27A348;]]></search>
			<add><![CDATA[	border-color: #BBBBBB transparent;
}

.new_post_separator {
	display: block;
	overflow: visible;
}

/* Used by video embed JS when autolinking video links */
.elk_video {
	border-color: #27A348;]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for admin.css -->		
	<file name="THEMEDIR/css/admin.css">
		<operation>
			<search position="replace"><![CDATA[	padding: 0 .25em;
}

/* Styles for the moderation center.
------------------------------------------------- */
#modcenter {]]></search>
			<add><![CDATA[	padding: 0 .25em;
}

#admin_register_form dt span {
	display: block;
	padding: 0;
}

/* Styles for the moderation center.
------------------------------------------------- */
#modcenter {]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for icons_svg.css -->		
	<file name="THEMEDIR/css/icons_svg.css">
		<operation>
			<search position="replace"><![CDATA[	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' stroke='%23EEEEEE' stroke-width='.07em' fill='white' viewBox='0 0 32 32'%3E%3Cpath d='M27 22c-1.4 0-2.7.6-3.6 1.53L9.95 16.8c.04-.27.06-.53.06-.8s0-.53-.02-.8L23.4 8.5c.92.94 2.2 1.52 3.6 1.52 2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5c0 .27.02.54.06.8L8.6 12.52C7.67 11.6 6.4 11 5 11c-2.76 0-5 2.24-5 5s2.24 5 5 5c1.4 0 2.7-.58 3.6-1.52l13.46 6.73c-.04.3-.06.57-.06.8 0 2.8 2.24 5 5 5s5-2.2 5-5-2.24-5-5-5z'/%3E%3C/svg%3E");
}

.i-search::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23555' viewBox='0 0 32 32'%3E%3Cpath d='M31.008 27.23l-7.58-6.446c-.784-.705-1.622-1.03-2.3-.998C22.92 17.69 24 14.97 24 12c0-6.63-5.373-12-12-12S0 5.37 0 12s5.374 12 12 12c2.973 0 5.692-1.082 7.788-2.87-.03.676.293 1.514.998 2.298l6.447 7.58c1.105 1.226 2.908 1.33 4.008.23s.998-2.903-.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z'/%3E%3C/svg%3E");
}]]></search>
			<add><![CDATA[	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' stroke='%23EEEEEE' stroke-width='.07em' fill='white' viewBox='0 0 32 32'%3E%3Cpath d='M27 22c-1.4 0-2.7.6-3.6 1.53L9.95 16.8c.04-.27.06-.53.06-.8s0-.53-.02-.8L23.4 8.5c.92.94 2.2 1.52 3.6 1.52 2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5c0 .27.02.54.06.8L8.6 12.52C7.67 11.6 6.4 11 5 11c-2.76 0-5 2.24-5 5s2.24 5 5 5c1.4 0 2.7-.58 3.6-1.52l13.46 6.73c-.04.3-.06.57-.06.8 0 2.8 2.24 5 5 5s5-2.2 5-5-2.24-5-5-5z'/%3E%3C/svg%3E");
}

.i-ila::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 72 36'%3E%3Cpath fill='none' d='M-1-1h74v38H-1z'/%3E%3Cg%3E%3Cpath fill='%233f7f00' d='M31.025 12.8c0 1.722-1.337 3.12-2.984 3.12s-2.985-1.398-2.985-3.12 1.337-3.119 2.985-3.119 2.984 1.398 2.984 3.12zm15.92 6.24v7.278h-21.89v-3.12L30.032 18l2.487 2.599 7.96-8.318 6.467 6.759zm1.492-11.438H23.563c-.265 0-.498.244-.498.52v19.756c0 .276.233.52.498.52h24.874c.265 0 .498-.244.498-.52V8.122c0-.276-.233-.52-.498-.52zm2.487.52v19.756c0 1.43-1.119 2.599-2.487 2.599H23.563c-1.368 0-2.487-1.17-2.487-2.6V8.123c0-1.43 1.119-2.599 2.487-2.599h24.874c1.368 0 2.487 1.17 2.487 2.6z' stroke='null'/%3E%3Cg stroke-width='.001' stroke='red' fill='%23222'%3E%3Cpath d='M10.435 5.938h6v1.5h-6z'/%3E%3Cpath d='M10.435 7.063h2v22h-2z'/%3E%3Cpath d='M10.435 28.562h6v1.5h-6z'/%3E%3Cpath fill-opacity='null' stroke-opacity='null' d='M1.56 17.063h8.875v1.875H1.56z'/%3E%3C/g%3E%3Cg stroke-width='.001' stroke='red' fill='%23222'%3E%3Cpath d='M10.435 5.938h6v1.5h-6z'/%3E%3Cpath d='M10.435 7.063h2v22h-2z'/%3E%3Cpath d='M10.435 28.562h6v1.5h-6z'/%3E%3Cpath fill-opacity='null' stroke-opacity='null' d='M1.56 17.063h8.875v1.875H1.56z'/%3E%3C/g%3E%3Cg stroke-width='.001' stroke='red' fill='%23222'%3E%3Cpath d='M61.937 30.062h-6v-1.5h6z'/%3E%3Cpath d='M61.937 28.937h-2v-22h2z'/%3E%3Cpath d='M61.937 7.438h-6v-1.5h6z'/%3E%3Cpath fill-opacity='null' stroke-opacity='null' d='M70.812 18.937h-8.875v-1.875h8.875z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}

.i-search::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23555' viewBox='0 0 32 32'%3E%3Cpath d='M31.008 27.23l-7.58-6.446c-.784-.705-1.622-1.03-2.3-.998C22.92 17.69 24 14.97 24 12c0-6.63-5.373-12-12-12S0 5.37 0 12s5.374 12 12 12c2.973 0 5.692-1.082 7.788-2.87-.03.676.293 1.514.998 2.298l6.447 7.58c1.105 1.226 2.908 1.33 4.008.23s.998-2.903-.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z'/%3E%3C/svg%3E");
}]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for index.css -->		
	<file name="THEMEDIR/css/index.css">
		<operation>
			<search position="replace"><![CDATA[	padding: 1px 4px 2px 4px;
	font-weight: bold;
	font-size: .643em;
	font-family: verdana, sans-serif;
}

.new_posts:hover {]]></search>
			<add><![CDATA[	padding: 1px 4px 2px 4px;
	font-weight: bold;
	font-size: .643em;
	font-family: verdana, sans-serif !important;
	margin: 0 1px;
}

.new_posts:hover {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	font-weight: normal;
}

/* A quote, perhaps from another post. */
.bbc_quote,
/* A code block - maybe PHP ;) - shared styles. */]]></search>
			<add><![CDATA[	font-weight: normal;
}

/* Expanding quotes */
.quote-read-more {
	position: relative;
}

/* Constrain the quote area height.  Use max height so we can have a smooth transition */
.quote-read-more > .bbc_quote {
	overflow: auto;
	max-height: var(--quote_height);
}

/* Specific targeting of our checkbox.  100% wide with a gradient to cover/fade the bottom
   of the blockquote */
input[type=checkbox].quote-show-more {
	position: absolute;
	bottom: 0;
	width: 100%;
	min-height: 8em;
	margin: 0 1px 1px 1px;
	padding-top: 6em;
	cursor: pointer;
	text-align: center;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}

/* The read moar, with the 100% width clicking anywhere in the quote base will work
   note content: "More" is defined in themes/default/Theme.php controller for localization */
input[type=checkbox].quote-show-more:after {
	font-size: 1.1em;
	font-weight: 600;
}

/* When clicked, hide the checkbox and expand the quote */
input[type=checkbox].quote-show-more:checked {
	display: none;
}

/* max-height 750em is simply to avoid the clipping of any length quote, do not use none as
   it will not provide a smooth transition */
input[type=checkbox].quote-show-more:checked ~ .bbc_quote {
	max-height: 750em;
	transition: 1.5s max-height ease-in;
}

/* A quote, perhaps from another post. */
.bbc_quote,
/* A code block - maybe PHP ;) - shared styles. */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	width: 100%;
	margin-bottom: 10px;
	padding: 2px;
	box-sizing: border-box
}
#quick_edit_body_container .input_text {
	width: 85%;]]></search>
			<add><![CDATA[	width: 100%;
	margin-bottom: 10px;
	padding: 2px;
	box-sizing: border-box;
}
#quick_edit_body_container .input_text {
	width: 85%;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	padding: 5px 5px 0 5px;
}

.buttonlist li {
	float: left;
	margin: 0 0 0 4px;
	line-height: 2.231em;
}

/* @todo - Save code by amalgamating common button background declarations. */]]></search>
			<add><![CDATA[	padding: 5px 5px 0 5px;
}

.buttonlist > li {
	line-height: 2.231em;
	display: inline-block;
}

/* @todo - Save code by amalgamating common button background declarations. */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}

.quickbuttons .inline_mod_check {
	margin: 4px 4px 4px 0;
	padding: 0 4px;
}

/* @todo - Save code by amalgamating common button background declarations. */]]></search>
			<add><![CDATA[}

.quickbuttons .inline_mod_check {
	margin: 4px 0 0 0;
	padding: 0 4px;
	border: 1px solid;
	line-height: 2.1em;
}

/* @todo - Save code by amalgamating common button background declarations. */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[.report_button:before     {background-position: 0 -312px;}
.warn_button:before       {background-position: 0 -336px;}
.quotetonew_button:before {background-position: 0 -360px;}
.like_button:before       {background-position: 0 -384px;}
.unlike_button:before     {background-position: 0 -408px;}
.star_button:before       {background-position: 0 -432px;}
.quick_edit:before        {background-position: 0 -456px;}
.likes_button:before      {background-position: 0 -480px;}

/* Radius left end of the first (Quote) button. */
.linklevel1.quote_button {
	border-radius: 2px 0 0 2px;
}

/* Radius right end of the last button. */
.linklevel1.post_options, .linklevel1.remove_button {
	border-radius: 0 2px 2px 0;
}
]]></search>
			<add><![CDATA[.report_button:before     {background-position: 0 -312px;}
.warn_button:before       {background-position: 0 -336px;}
.quotetonew_button:before {background-position: 0 -360px;}
.react_button:before       {background-position: 0 -384px;}
.unreact_button:before     {background-position: 0 -408px;}
.star_button:before       {background-position: 0 -432px;}
.quick_edit:before        {background-position: 0 -456px;}
.reacts_button:before      {background-position: 0 -480px;}

/* Radius the ends of the first/last button. */
.quickbuttons li:last-child, .quickbuttons li:last-child a {
	border-radius: 2px 0 0 2px;
}

.quickbuttons li:first-child, .quickbuttons li:first-child a {
	border-radius: 0 2px 2px 0;
}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}

/* Show appropriate like/unlike action */
.like_button:before, .likes_button:before, .unlike_button:before {
	background-position: 0 -480px;
}

.unlike_button:before {
	background-position: 0 -408px;
}

.like_button:hover:before {
	background-position: 0 -384px;
}
]]></search>
			<add><![CDATA[}

/* Show appropriate like/unlike action */
.react_button:before, .reacts_button:before, .unreact_button:before {
	background-position: 0 -480px;
}

.unreact_button:before {
	background-position: 0 -408px;
}

.react_button:hover:before {
	background-position: 0 -384px;
}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	line-height: 2.1em;
}

/* -------------------------------------------------------
 *	$PAGELINKS
 * -------------------------------------------------------]]></search>
			<add><![CDATA[	line-height: 2.1em;
}

.quick_quote_button {
	position: absolute;
	z-index: 10000;
}

/* -------------------------------------------------------
 *	$PAGELINKS
 * -------------------------------------------------------]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}

.smiley {
	vertical-align: bottom;
}

/* All the signatures used in the forum. */]]></search>
			<add><![CDATA[}

.smiley {
	vertical-align: text-bottom;
}

/* All the signatures used in the forum. */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	display: block;
	width: 0;
	content: '';
}

.new_post_separator:before {]]></search>
			<add><![CDATA[	display: block;
	width: 0;
	content: '';
	border-width: 10px 10px 0;
	border-style: solid;
}

.new_post_separator:before {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
.elk_video a img, .elk_video embed {
	display: block;
	margin: 0 auto;
}

.elk_videoheader {
	padding: 0 4px 0 6px;
	max-width: 98%;
	width: 630px;
	border: 1px solid;
}

.elk_previewvideo {
	max-width: 640px;
	height: auto;
}

/* Basic stuff for the bottom of Display.template.php. */
#moderationbuttons {
	float: left;]]></search>
			<add><![CDATA[
.elk_video a img, .elk_video embed {
	display: block;
	width: 100%;
	margin: 0 auto;
	aspect-ratio: 16 / 9;
	max-height: 360px;
	object-fit: cover;
}

.elk_videoheader {
	width: 640px;
	max-width: 100%;
	border: 1px solid;
}

.elk_videoheader > a {
	padding: 0 4px;
}

.elk_previewvideo {
	max-width: 640px;
	height: auto;
}

/* These deal with 9/16 videos (like tiktok) */
.elk_video.portrait {
	max-width: 480px;
	min-height: 480px;
	width: 100%;
	max-height: initial;
}

.elk_videoheader.portrait {
	width: 480px;
	margin: 0px 0 -18px 0;
}

/* Basic stuff for the bottom of Display.template.php. */
#moderationbuttons {
	float: left;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
.statusbar .insertoverlay .button {
	position: absolute;
	left: 2.5em;
	top: -2em;
	margin: 0;
	font-weight: bold;
}

.info {]]></search>
			<add><![CDATA[
.statusbar .insertoverlay .button {
	position: absolute;
	margin: 0;
	font-weight: bold;
	top: -35px;
	left: 2px;
	width: 55px;
	min-height: 34px;
	border-radius: 4px;
}

.info {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	vertical-align: middle;
}

.abort, .remove, .share {
	float: right;
	padding: 4px 5px 2px 5px;
	max-width: 1em;
	cursor: pointer;
	border-radius: 4px;
}

.share {
	float: none;
}

.drop_attachmnts_error {
	overflow: hidden;
	padding: 10px 0;]]></search>
			<add><![CDATA[	vertical-align: middle;
}

.abort, .remove, .share, .ila {
	float: right;
	padding: 4px 5px 2px 5px;
	max-width: 2em;
	cursor: pointer;
	border-radius: 4px;
}

.share, .ila {
	float: none;
}

.ila {
	min-width: 3em;
	border: 1px solid;
	padding-top: 5px;
}

.drop_attachmnts_error {
	overflow: hidden;
	padding: 10px 0;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	max-width: 40em;
}

.login dl {
	clear: right;
	overflow: auto;]]></search>
			<add><![CDATA[	max-width: 40em;
}

.login .well {
	padding: 5px 35px
}

.login dl {
	clear: right;
	overflow: auto;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	vertical-align: top;
}

.login p {
	text-align: center;
}
]]></search>
			<add><![CDATA[	vertical-align: top;
}

.login p:not(.errorbox) {
	text-align: center;
}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	border-radius: 7px;
}

.well p, .roundframe p {
	padding: 6px;
}
]]></search>
			<add><![CDATA[	border-radius: 7px;
}

.well p:not(.errorbox), .roundframe p {
	padding: 6px;
}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
/* This one does 800 screens at default font size. */
@media screen and (max-width: 50em) {
	.icon-menu {
		display: inline-block;
		margin: .05em;]]></search>
			<add><![CDATA[
/* This one does 800 screens at default font size. */
@media screen and (max-width: 50em) {
	#gotop, #gobottom {
		display: none;
	}

	.icon-menu {
		display: inline-block;
		margin: .05em;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}

	.board_name {
		margin-top: 7px;
		padding: 0;
	}

	.board_lastposter {
		display: block;
	}

	.board_lastpost, .board_latest {
		min-width: 14em;
	}
]]></search>
			<add><![CDATA[	}

	.board_name {
		margin-top: 5px;
		margin-bottom: 5px;
		padding: 0;
	}

	.board_lastpost {
		min-width: 14em;
	}

	.board_lastposter {
		display: block;
	}

	.board_latest {
		min-width: 14em;
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		margin: 0 0 0 8px;
	}

	/* Playing silly buggers with a sidebar menu option for narrow screens. */
	#main_container {
		position: relative;]]></search>
			<add><![CDATA[		margin: 0 0 0 8px;
	}

	.icon_anchor {
		min-width: initial;
	}

	/* Playing silly buggers with a sidebar menu option for narrow screens. */
	#main_container {
		position: relative;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}

	.quickbuttons .modified {
		display: block;
		width: 100%;
		text-align: left;
	}]]></search>
			<add><![CDATA[	}

	.quickbuttons .modified {
		display: none;
		width: 100%;
		text-align: left;
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		white-space: normal;
	}

	#search_options {
		width: 100%;
	}]]></search>
			<add><![CDATA[		white-space: normal;
	}

	.ui-tabs .ui-tabs-panel {
		padding: 1em 0 !important;
	}

	.profile_content {
		padding: 0 2px;
	}

	#search_options {
		width: 100%;
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	.statusbar .insertoverlay .range {
		max-width: 90%;
	}
	.statusbar .insertoverlay .button {
		float: none;
	}
	.statusbar .insertoverlay .range,
	.statusbar .insertoverlay .text,
	.statusbar .insertoverlay .button {]]></search>
			<add><![CDATA[	.statusbar .insertoverlay .range {
		max-width: 90%;
	}

	.statusbar .insertoverlay .range,
	.statusbar .insertoverlay .text,
	.statusbar .insertoverlay .button {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		display: block;
	}
	.statusbar .insertoverlay .button {
		left: 0;
		top: -3em;
		border-radius: 4px;
	}

	/*.listlevel1#button_profile .linklevel1 {]]></search>
			<add><![CDATA[		display: block;
	}
	.statusbar .insertoverlay .button {
		float: none;
		left: 0;
		top: -3em;
		margin: 0;
	}

	/*.listlevel1#button_profile .linklevel1 {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		height: 30px;
	}

	.quickbuttons {
		white-space: nowrap;
	}
]]></search>
			<add><![CDATA[		height: 30px;
	}

	.quickbuttons, .quickbuttons > .listlevel1 > a {
		white-space: nowrap;
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		max-width: 95% !important;
	}

	ul.post_options li {
		width: 50%;
	}]]></search>
			<add><![CDATA[		max-width: 95% !important;
	}

	.settings > dt {
		width: 60% !important;
	}

	.settings > dd {
		width: 40% !important;
	}

	ul.post_options li {
		width: 50%;
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		float: none;
	}

	#confirm_buttons input[type="submit"] {
		max-height: none;
		height: inherit;]]></search>
			<add><![CDATA[		float: none;
	}

	.progress_tracker {
		padding-left: 0 !important;
	}

	.statusbar > .info {
		width: 50%;
	}

	.attachment_block {
		max-width: 49%;
		min-width: 49%;
		margin: 0 0 1em 0;
	}

	.attachment_block > .attachment_details, .attachment_block > .attachment_name {
		width: initial;
	}

	#confirm_buttons input[type="submit"] {
		max-height: none;
		height: inherit;]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for rtl.css -->		
	<file name="THEMEDIR/css/rtl.css">
		<operation>
			<search position="replace"><![CDATA[
/* Styles for the standard button lists.
/* ------------------------------------------------------- */
.buttonlist li {
	float: right;
	margin: 0 4px 0 0;
}

/* The quick buttons. */
/* ------------------------------------------------------- */]]></search>
			<add><![CDATA[
/* Styles for the standard button lists.
/* ------------------------------------------------------- */

/* The quick buttons. */
/* ------------------------------------------------------- */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[/*	$BOARDS		*/
/* ------------------------------------------------------- */
/* The board categories and newsfader - some shared styling. */
.icon_anchor {
	padding: 2px 0 0 6px;
	float: right;
}

.board_info .board_description, .board_info .moderators {]]></search>
			<add><![CDATA[/*	$BOARDS		*/
/* ------------------------------------------------------- */
/* The board categories and newsfader - some shared styling. */

.icon_anchor {
	float: right;
	padding: 2px 0 0 6px;
	transform: scaleX(-1);
}

.board_info .board_description, .board_info .moderators {]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for index.template.php -->		
	<file name="THEMEDIR/index.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.7
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		echo '
	<meta name="robots" content="noindex" />';

	// load in any css from addons or themes so they can overwrite if wanted
	template_css();
]]></search>
			<add><![CDATA[		echo '
	<meta name="robots" content="noindex" />';

	// If we have any Open Graph data, here is where is inserted.
	if (!empty($context['open_graph']))
	{
		echo '
	' .implode("\n\t", $context['open_graph']);
	}

	// load in any css from addons or themes so they can overwrite if wanted
	template_css();
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// load in any javascript that could be deferred to the end of the page
	theme()->template_javascript(true);

	// Anything special to put out?
	if (!empty($context['insert_after_template']))
		echo $context['insert_after_template'];]]></search>
			<add><![CDATA[	// load in any javascript that could be deferred to the end of the page
	theme()->template_javascript(true);

	// Schema microdata about the organization?
	if (!empty($context['smd_site']))
	{
		echo '
	<script type="application/ld+json">
	', json_encode($context['smd_site'], JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE), '
	</script>';
	}

	// Schema microdata about the post?
	if (!empty($context['smd_article']))
	{
		echo '
	<script type="application/ld+json">
	', json_encode($context['smd_article'], JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE), '
	</script>';
	}

	// Anything special to put out?
	if (!empty($context['insert_after_template']))
		echo $context['insert_after_template'];]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (!is_array($strip_options))
		$strip_options = array();

	// List the buttons in reverse order for RTL languages.
	if ($context['right_to_left'])
		$button_strip = array_reverse($button_strip, true);

	// Create the buttons... now with cleaner markup (yay!).
	$buttons = array();
	foreach ($button_strip as $key => $value)]]></search>
			<add><![CDATA[	if (!is_array($strip_options))
		$strip_options = array();

	// Create the buttons... now with cleaner markup (yay!).
	$buttons = array();
	foreach ($button_strip as $key => $value)]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Admin.english.php -->		
	<file name="LANGUAGEDIR/english/Admin.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['attachmentEnable_disable_new'] = 'Disable new attachments';
$txt['attachmentCheckExtensions'] = 'Check attachment\'s extension';
$txt['attachmentExtensions'] = 'Allowed attachment extensions';
$txt['attachmentRecodeLineEndings'] = 'Recode line endings in textual attachments';
$txt['attachmentShowImages'] = 'Display image attachments as pictures under post';
$txt['attachmentUploadDir'] = 'Attachments directory';
$txt['attachmentUploadDir_multiple_configure'] = 'Manage attachment directories';
$txt['attachmentDirSizeLimit'] = 'Max attachment directory space';
$txt['attachmentPostLimit'] = 'Max attachment size per post';
$txt['attachmentSizeLimit'] = 'Max size per attachment';
$txt['attachmentNumPerPostLimit'] = 'Max number of attachments per post';
$txt['attachment_img_enc_warning'] = 'Neither the GD module nor ImageMagick are currently installed. Image re-encoding is not possible.';]]></search>
			<add><![CDATA[$txt['attachmentEnable_disable_new'] = 'Disable new attachments';
$txt['attachmentCheckExtensions'] = 'Check attachment\'s extension';
$txt['attachmentExtensions'] = 'Allowed attachment extensions';
$txt['attachmentShowImages'] = 'Display image attachments as pictures under post';
$txt['attachmentUploadDir'] = 'Attachments directory';
$txt['attachmentUploadDir_multiple_configure'] = 'Manage attachment directories';
$txt['attachmentDirSizeLimit'] = 'Max attachment directory space';
$txt['attachmentPostLimit'] = 'Max attachment space per post';
$txt['attachmentSizeLimit'] = 'Max size per attachment';
$txt['attachmentNumPerPostLimit'] = 'Max number of attachments per post';
$txt['attachment_img_enc_warning'] = 'Neither the GD module nor ImageMagick are currently installed. Image re-encoding is not possible.';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$txt['attachment_image_paranoid'] = 'Perform extensive security checks on uploaded image attachments';
$txt['attachment_autorotate'] = 'Detect and fix improperly rotated images';
$txt['attachment_autorotate_na'] = '(Not available on this system)';
$txt['attachmentThumbnails'] = 'Resize images when showing under posts';
$txt['attachment_thumb_png'] = 'Save thumbnails as PNG';
$txt['attachment_thumb_memory'] = 'Adaptive thumbnail memory';
$txt['attachment_thumb_memory_note2'] = 'If the system can not get the memory no thumbnail will be created.';
$txt['attachment_thumb_memory_note1'] = 'Leave this unchecked to always attempt to create a thumbnail';]]></search>
			<add><![CDATA[$txt['attachment_image_paranoid'] = 'Perform extensive security checks on uploaded image attachments';
$txt['attachment_autorotate'] = 'Detect and fix improperly rotated images';
$txt['attachment_autorotate_na'] = '(Not available on this system)';
$txt['attachment_webp_enable'] = 'Enable WebP support';
$txt['attachment_webp_enable_na'] = '(WebP support is not available on this server)';
$txt['attachmentThumbnails'] = 'Resize images when showing under posts';
$txt['attachment_thumb_memory'] = 'Adaptive thumbnail memory';
$txt['attachment_thumb_memory_note2'] = 'If the system can not get the memory no thumbnail will be created.';
$txt['attachment_thumb_memory_note1'] = 'Leave this unchecked to always attempt to create a thumbnail';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$txt['gravatar'] = 'Gravatars';
$txt['avatar_gravatar_enabled'] = 'Enable use of gravatars';
$txt['gravatar_rating'] = 'Gravatar Rating';
$txt['avatar_download_png'] = 'Use PNG for resized avatars';
$txt['avatar_img_enc_warning'] = 'Neither the GD module nor ImageMagick are currently installed. Some avatar features are disabled.';
$txt['avatar_external'] = 'External avatars';]]></search>
			<add><![CDATA[$txt['gravatar'] = 'Gravatars';
$txt['avatar_gravatar_enabled'] = 'Enable use of gravatars';
$txt['gravatar_rating'] = 'Gravatar Rating';
$txt['gravatar_default'] = 'Default image to show when an email address has no matching Gravatar';
$txt['gravatar_none'] = 'Default of the gravatar logo';
$txt['gravatar_identicon'] = 'A geometric pattern based on an email hash';
$txt['gravatar_monsterid'] = 'A generated "monster" with different colors, faces, etc';
$txt['gravatar_wavatar'] = 'Generated faces with differing features and backgrounds';
$txt['gravatar_retro'] = 'Awesome generated, 8-bit arcade-style pixelated faces';
$txt['gravatar_robohash'] = 'A generated robot with different colors, faces, etc';
$txt['avatar_download_png'] = 'Use PNG for resized avatars';
$txt['avatar_img_enc_warning'] = 'Neither the GD module nor ImageMagick are currently installed. Some avatar features are disabled.';
$txt['avatar_external'] = 'External avatars';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$txt['mm_emailtemplates'] = 'Templates';
$txt['mm_emailsettings'] = 'Settings';

$txt['removeNestedQuotes'] = 'Remove nested quotes when quoting';
$txt['enableSpellChecking'] = 'Enable spell checking';
$txt['enableSpellChecking_warning'] = 'this does not work on all servers.';
$txt['enableSpellChecking_error'] = 'this does not work on your server.';]]></search>
			<add><![CDATA[$txt['mm_emailtemplates'] = 'Templates';
$txt['mm_emailsettings'] = 'Settings';

$txt['removeNestedQuotes'] = 'Allowed nested quoting depth';
$txt['heightBeforeShowMore'] = 'Quote height (px) before adding a "read more" link.';
$txt['enableSpellChecking'] = 'Enable spell checking';
$txt['enableSpellChecking_warning'] = 'this does not work on all servers.';
$txt['enableSpellChecking_error'] = 'this does not work on your server.';]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Help.english.php -->		
	<file name="LANGUAGEDIR/english/Help.english.php">
		<operation>
			<search position="replace"><![CDATA[$helptxt['enableErrorLogging'] = 'This will log any errors, like a failed login, so you can see what went wrong.';
$helptxt['enableErrorQueryLogging'] = 'This will include the full query sent to the database in the error log.  Requires error logging to be turned on.<br /><br /><strong>Note:  This will affect the ability to filter the error log by the error message.</strong>';
$helptxt['allow_disableAnnounce'] = 'This will allow users to opt out of notification of topics you announce by checking the &quot;announce topic&quot; checkbox when posting.';
$helptxt['disallow_sendBody'] = 'This option removes the possibility to receive the text of replies, posts and personal messages in notification emails.<br /><br />Often, members will reply to the notification email, which in most cases means the webmaster receives the reply.';
$helptxt['enable_contactform'] = 'This option adds a contact us button to the registration screen';
$helptxt['jquery_source'] = 'This will determine the source used to load the jQuery Library.  Auto will use the CDN first and if not available fall back to the local source.  Local will only use the local source, CDN will only load it from Google\'s Content Delivery Network';]]></search>
			<add><![CDATA[$helptxt['enableErrorLogging'] = 'This will log any errors, like a failed login, so you can see what went wrong.';
$helptxt['enableErrorQueryLogging'] = 'This will include the full query sent to the database in the error log.  Requires error logging to be turned on.<br /><br /><strong>Note:  This will affect the ability to filter the error log by the error message.</strong>';
$helptxt['allow_disableAnnounce'] = 'This will allow users to opt out of notification of topics you announce by checking the &quot;announce topic&quot; checkbox when posting.';
$helptxt['metadata_enabled'] = 'This will create OG (Open Graph) and Schema.org microdata suitable for HTML embedding (requires theme support).  It allows search engines to better understand the information on your site pages, and provides for a better link sharing experience on social sites.  When enabled, metadata will made available for the board listing, topic listing and topic display areas of your site.';
$helptxt['disallow_sendBody'] = 'This option removes the possibility to receive the text of replies, posts and personal messages in notification emails.<br /><br />Often, members will reply to the notification email, which in most cases means the webmaster receives the reply.';
$helptxt['enable_contactform'] = 'This option adds a contact us button to the registration screen';
$helptxt['jquery_source'] = 'This will determine the source used to load the jQuery Library.  Auto will use the CDN first and if not available fall back to the local source.  Local will only use the local source, CDN will only load it from Google\'s Content Delivery Network';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		&quot;3&quot; to display: 1 ... 4 [5] 6 ... 9 <br />
		&quot;5&quot; to display: 1 ... 3 4 [5] 6 7 ... 9';
$helptxt['timeLoadPageEnable'] = 'This will show the time in seconds taken to create that page at the bottom of the board.';
$helptxt['removeNestedQuotes'] = 'This will strip nested quotes from a post when citing the post in question via a quote link.';
$helptxt['search_dropdown'] = 'This will show a search selection dropdown next to the quick search box.  From this you can choose to search the current site, current board (if in a board), current topic (if in a topic) or search for members.';
$helptxt['max_image_width'] = 'This allows you to set a maximum size for posted pictures. Pictures smaller than the maximum will not be affected. This also determines how attached images are displayed when a thumbnail is clicked on.';
$helptxt['mail_type'] = 'This setting allows you to choose either PHP\'s default settings, or to override those settings with SMTP.  PHP doesn\'t support using authentication with SMTP (which many hosts require now) so if you want that you should select SMTP.  Please note that SMTP can be slower, and some servers will not take user names and passwords.<br /><br />You don\'t need to fill in the SMTP settings if this is set to PHP\'s default.';]]></search>
			<add><![CDATA[		&quot;3&quot; to display: 1 ... 4 [5] 6 ... 9 <br />
		&quot;5&quot; to display: 1 ... 3 4 [5] 6 7 ... 9';
$helptxt['timeLoadPageEnable'] = 'This will show the time in seconds taken to create that page at the bottom of the board.';
$helptxt['removeNestedQuotes'] = 'This will remove, or limit the number of, nested quotes in a reply when citing the post via the quote link.';
$helptxt['heightBeforeShowMore'] = 'This will limit the height of a quote block.  Quotes exceeding this size will have a "read more" option applied to allow seeing the full quote.';
$helptxt['search_dropdown'] = 'This will show a search selection dropdown next to the quick search box.  From this you can choose to search the current site, current board (if in a board), current topic (if in a topic) or search for members.';
$helptxt['max_image_width'] = 'This allows you to set a maximum size for posted pictures. Pictures smaller than the maximum will not be affected. This also determines how attached images are displayed when a thumbnail is clicked on.';
$helptxt['mail_type'] = 'This setting allows you to choose either PHP\'s default settings, or to override those settings with SMTP.  PHP doesn\'t support using authentication with SMTP (which many hosts require now) so if you want that you should select SMTP.  Please note that SMTP can be slower, and some servers will not take user names and passwords.<br /><br />You don\'t need to fill in the SMTP settings if this is set to PHP\'s default.';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$helptxt['smtp_client'] = 'Used to identify this client to the SMTP server.<br />The field should contain the fully-qualified domain name (FQDN) of the SMTP client. In situations in which the client system does not have a meaningful domain name you can instead use an address literal formatted as [ipv4] or [IPv6:ipv6 address].<br />If left blank the system will attempt to detect this value for you.';

$helptxt['attachmentEnable'] = 'Enable/Disable the attachment system or disable only new attachments leaving old one available.';
$helptxt['attachmentRecodeLineEndings'] = 'Enabling this will re-code line endings of text based files (txt, css, html, php, xml) based on your server (Windows, Mac or Unix).';
$helptxt['automanage_attachments'] = 'This will create a directory structure based on the selected option.  This can be post date (subdividing attachments by year, or by year and month or by year, month and day) or simply adding a new directory when the space limit is reached.  Each directory created will have the same file count and total size restrictions.  This will help prevent directories from reaching a file or size limit.';
$helptxt['use_sub-directories_for_attachments'] = 'This will create all new directories as sub-directories under the main attachment directory.';
$helptxt['attachmentDirSizeLimit'] = ' Set how large the attachment folder can be.';]]></search>
			<add><![CDATA[$helptxt['smtp_client'] = 'Used to identify this client to the SMTP server.<br />The field should contain the fully-qualified domain name (FQDN) of the SMTP client. In situations in which the client system does not have a meaningful domain name you can instead use an address literal formatted as [ipv4] or [IPv6:ipv6 address].<br />If left blank the system will attempt to detect this value for you.';

$helptxt['attachmentEnable'] = 'Enable/Disable the attachment system or disable only new attachments leaving old one available.';
$helptxt['automanage_attachments'] = 'This will create a directory structure based on the selected option.  This can be post date (subdividing attachments by year, or by year and month or by year, month and day) or simply adding a new directory when the space limit is reached.  Each directory created will have the same file count and total size restrictions.  This will help prevent directories from reaching a file or size limit.';
$helptxt['use_sub-directories_for_attachments'] = 'This will create all new directories as sub-directories under the main attachment directory.';
$helptxt['attachmentDirSizeLimit'] = ' Set how large the attachment folder can be.';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$helptxt['attachment_autorotate'] = 'Selecting this option will allow the system to detect rotated images, typical of phone cameras, and automatically adjust the orientation such that the image top is oriented up. Requires either ImageMagick or both GD and Exif modules to be available.';
$helptxt['attachmentShowImages'] = 'If the uploaded file is a picture, this will automatically display it underneath the post.';
$helptxt['attachmentThumbnails'] = 'Enable this to show post images as a smaller thumbnail image, which when selected will expand to the full sized image.';
$helptxt['attachment_thumb_png'] = 'When creating thumbnails to display under a post, this will only create them as png files.';
$helptxt['attachmentThumbWidth'] = 'Only used with the &quot;Resize images when showing under posts&quot; option, the maximum width to resize attachments down from.  They will be resized proportionally.';
$helptxt['attachmentThumbHeight'] = 'Only used with the &quot;Resize images when showing under posts&quot; option, the maximum height to resize attachments down from.  They will be resized proportionally.';
$helptxt['attachment_image_reencode'] = 'Selecting this option will enable trying to re-encode the uploaded image attachments. Image re-encoding offers better security. Note however that image re-encoding also renders all animated images static.<br />This feature is only possible if the GD module is installed on your server.';]]></search>
			<add><![CDATA[$helptxt['attachment_autorotate'] = 'Selecting this option will allow the system to detect rotated images, typical of phone cameras, and automatically adjust the orientation such that the image top is oriented up. Requires either ImageMagick or both GD and Exif modules to be available.';
$helptxt['attachmentShowImages'] = 'If the uploaded file is a picture, this will automatically display it underneath the post.';
$helptxt['attachmentThumbnails'] = 'Enable this to show post images as a smaller thumbnail image, which when selected will expand to the full sized image.';
$helptxt['attachment_webp_enable'] = 'Enabling this will allow the system to create/save thumbnails and avatars in WebP format.';
$helptxt['attachmentThumbWidth'] = 'Only used with the &quot;Resize images when showing under posts&quot; option, the maximum width to resize attachments down from.  They will be resized proportionally.';
$helptxt['attachmentThumbHeight'] = 'Only used with the &quot;Resize images when showing under posts&quot; option, the maximum height to resize attachments down from.  They will be resized proportionally.';
$helptxt['attachment_image_reencode'] = 'Selecting this option will enable trying to re-encode the uploaded image attachments. Image re-encoding offers better security. Note however that image re-encoding also renders all animated images static.<br />This feature is only possible if the GD module is installed on your server.';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$helptxt['themeadmin_list_reset'] = 'On rare occasions the path to the theme will be lost and your forum will not display properly. This may be due to a mistake by an Admin, database errors, failed software updates, mod installations or some other event. Resetting the themes URLs and directories will usually fix this problem.';
$helptxt['themeadmin_delete_help'] = 'The default theme cannot be deleted as doing so would break your forum and would break other themes. However, you can delete any theme that has the red \'X\' next to it by clicking on that \'X\'. <br /><br /> Remember this: Deleting a theme does not remove it from the server, it only removes the themes availability to be used on the forum. You will need to FTP into your server or use the host provided panel to remove the custom theme from the server. Do not ever delete the theme named \'default\'.';

$helptxt['enableVideoEmbeding'] = 'This allows automatic conversion of standard URLs into an embedded video when the post is viewed.  Currently only supports YouTube, Vimeo and Dailymotion video links';
$helptxt['enableCodePrettify'] = 'This will load the Prettify script which will color highlight code used in code tags.  It adds styles to code snippets so that tokens stand out and your users can more easily read the code.';
// @todo Add more information about how to use them here.
$helptxt['xmlnews_enable'] = 'Allows people to link to <a href="%1$s?action=.xml;sa=news" target="_blank" class="new_win">Recent news</a>]]></search>
			<add><![CDATA[$helptxt['themeadmin_list_reset'] = 'On rare occasions the path to the theme will be lost and your forum will not display properly. This may be due to a mistake by an Admin, database errors, failed software updates, mod installations or some other event. Resetting the themes URLs and directories will usually fix this problem.';
$helptxt['themeadmin_delete_help'] = 'The default theme cannot be deleted as doing so would break your forum and would break other themes. However, you can delete any theme that has the red \'X\' next to it by clicking on that \'X\'. <br /><br /> Remember this: Deleting a theme does not remove it from the server, it only removes the themes availability to be used on the forum. You will need to FTP into your server or use the host provided panel to remove the custom theme from the server. Do not ever delete the theme named \'default\'.';

$helptxt['enableVideoEmbeding'] = 'This allows automatic conversion of standard URLs into an embedded video when the post is viewed.  Currently only supports YouTube, Vimeo, TikTok and Dailymotion video links';
$helptxt['enableCodePrettify'] = 'This will load the Prettify script which will color highlight code used in code tags.  It adds styles to code snippets so that tokens stand out and your users can more easily read the code.';
// @todo Add more information about how to use them here.
$helptxt['xmlnews_enable'] = 'Allows people to link to <a href="%1$s?action=.xml;sa=news" target="_blank" class="new_win">Recent news</a>]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for ManageSettings.english.php -->		
	<file name="LANGUAGEDIR/english/ManageSettings.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['autoOptMaxOnline'] = 'Maximum users online when optimizing';
$txt['autoFixDatabase'] = 'Automatically fix broken tables';
$txt['allow_disableAnnounce'] = 'Allow users to disable announcements';
$txt['disallow_sendBody'] = 'Don\'t allow post text in notifications';
$txt['jquery_source'] = 'Source for the jQuery Library';
$txt['jquery_local'] = 'Local';]]></search>
			<add><![CDATA[$txt['autoOptMaxOnline'] = 'Maximum users online when optimizing';
$txt['autoFixDatabase'] = 'Automatically fix broken tables';
$txt['allow_disableAnnounce'] = 'Allow users to disable announcements';
$txt['metadata_enabled'] = 'Enable the creation of Open Graph and Schema.org microdata';
$txt['disallow_sendBody'] = 'Don\'t allow post text in notifications';
$txt['jquery_source'] = 'Source for the jQuery Library';
$txt['jquery_local'] = 'Local';]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for Post.english.php -->		
	<file name="LANGUAGEDIR/english/Post.english.php">
		<operation>
			<search position="replace"><![CDATA[
$txt['attach_drop_files'] = 'Add files by dragging & dropping or <a class="drop_area_fileselect_text" href="javascript:void(0)">selecting them</a>';
$txt['attach_drop_files_mobile'] = '<a class="drop_area_fileselect_text" href="javascript:void(0)">Add files</a>';
$txt['attach_restrict_attachmentPostLimit'] = 'maximum total size %1$s KB';
$txt['attach_restrict_attachmentSizeLimit'] = 'maximum individual size %1$s KB';
$txt['attach_restrict_attachmentNumPerPostLimit'] = '%1$d per post';
$txt['attach_restrictions'] = 'Restrictions:';
]]></search>
			<add><![CDATA[
$txt['attach_drop_files'] = 'Add files by dragging & dropping or <a class="drop_area_fileselect_text" href="javascript:void(0)">selecting them</a>';
$txt['attach_drop_files_mobile'] = '<a class="drop_area_fileselect_text" href="javascript:void(0)">Add files</a>';
$txt['attach_restrict_attachmentPostLimit'] = 'maximum total size %1$s';
$txt['attach_restrict_attachmentSizeLimit'] = 'maximum individual size %1$s';
$txt['attach_restrict_attachmentNumPerPostLimit'] = '%1$d per post';
$txt['attach_restrictions'] = 'Restrictions:';
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$txt['attach_folder_admin_warning'] = 'The path to the attachments directory (%1$s) is incorrect. Please correct it in the attachment settings area of your admin panel.';
$txt['attach_limit_nag'] = 'You have reached the maximum number of attachments allowed per post.';
$txt['attach_no_upload'] = 'There was a problem and your attachments could not be uploaded';
$txt['attach_remaining'] = '%1$d remaining';
$txt['attach_available'] = '%1$s KB available';
$txt['attach_kb'] = ' (%1$s KB)';
$txt['attach_0_byte_file'] = 'The file appears to be empty. Please contact your forum administrator if this continues to be a problem';
$txt['attached_files_in_session'] = '<em>The above underlined file(s) have been uploaded but will not be attached to this post until it is submitted.</em>';

$txt['attach_php_error'] = 'Due to an error, your attachment could not be uploaded. Please contact the forum administrator if this problem continues.';
$txt['php_upload_error_1'] = 'The uploaded file exceeds the upload_max_filesize directive in php.ini. Please contact your host if you are unable to correct this issue.';]]></search>
			<add><![CDATA[$txt['attach_folder_admin_warning'] = 'The path to the attachments directory (%1$s) is incorrect. Please correct it in the attachment settings area of your admin panel.';
$txt['attach_limit_nag'] = 'You have reached the maximum number of attachments allowed per post.';
$txt['attach_no_upload'] = 'There was a problem and your attachments could not be uploaded';
$txt['attach_remaining'] = '%1$s remaining';
$txt['attach_available'] = '%1$s available';
$txt['attach_kb'] = ' (%1$s KB)';
$txt['attach_0_byte_file'] = 'The file appears to be empty. Please contact your forum administrator if this continues to be a problem';
$txt['attached_files_in_session'] = '<em>The above underlined file(s) have been uploaded but will not be attached to this post until it is submitted.</em>';
$txt['attachment_upload_abort'] = 'The upload was canceled on user request.';
$txt['attachment_processing'] = 'Processing';

$txt['attach_php_error'] = 'Due to an error, your attachment could not be uploaded. Please contact the forum administrator if this problem continues.';
$txt['php_upload_error_1'] = 'The uploaded file exceeds the upload_max_filesize directive in php.ini. Please contact your host if you are unable to correct this issue.';]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for index.english.php -->		
	<file name="LANGUAGEDIR/english/index.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['calendar'] = 'Calendar';
$txt['members'] = 'Members';
$txt['recent_posts'] = 'Recent Posts';

$txt['admin'] = 'Admin';
// Sub menu labels]]></search>
			<add><![CDATA[$txt['calendar'] = 'Calendar';
$txt['members'] = 'Members';
$txt['recent_posts'] = 'Recent Posts';
$txt['recent_topics'] = 'Recent Topics';

$txt['admin'] = 'Admin';
// Sub menu labels]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$txt['code_select'] = '[Select]';
$txt['quote_from'] = 'Quote from';
$txt['quote'] = 'Quote';
$txt['quote_new'] = 'New topic';
$txt['follow_ups'] = 'Follow-ups';
$txt['topic_derived_from'] = 'Topic derived from %1$s';]]></search>
			<add><![CDATA[$txt['code_select'] = '[Select]';
$txt['quote_from'] = 'Quote from';
$txt['quote'] = 'Quote';
$txt['quick_quote'] = 'Quote Selected';
$txt['quote_new'] = 'New topic';
$txt['follow_ups'] = 'Follow-ups';
$txt['topic_derived_from'] = 'Topic derived from %1$s';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
// Video embedding
$txt['preview_image'] = 'Video Preview Image';
$txt['ctp_video'] = 'Click to play video, double click to load video';
$txt['hide_video'] = 'Show/Hide video';
$txt['youtube'] = 'YouTube video:';
$txt['vimeo'] = 'Vimeo video:';
$txt['dailymotion'] = 'Dailymotion video:';

// Spoiler BBC]]></search>
			<add><![CDATA[
// Video embedding
$txt['preview_image'] = 'Video Preview Image';
$txt['ctp_video'] = 'Click to play video';
$txt['hide_video'] = 'Show/Hide video';
$txt['youtube'] = 'YouTube video:';
$txt['vimeo'] = 'Vimeo video:';
$txt['tiktok'] = 'TikTok video:';
$txt['dailymotion'] = 'Dailymotion video:';

// Spoiler BBC]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for admin.js -->		
	<file name="THEMEDIR/scripts/admin.js">
		<operation>
			<search position="replace"><![CDATA[
			var release = adminIndex.normalizeVersion(elem.tag_name);

			if (!previous.hasOwnProperty('major') || verCompare.compareVersions(sCurrentVersion, elem.tag_name.replace('-', '').substring(1)))
			{
				// Using a preprelease? Then you may need to know a new one is out!
				if ((elem.prerelease && adminIndex.current.prerelease) || (!elem.prerelease))]]></search>
			<add><![CDATA[
			var release = adminIndex.normalizeVersion(elem.tag_name);

			let sCheckVersion = elem.tag_name.indexOf('v') === 0 ? elem.tag_name.substring(1) : elem.tag_name;
			sCheckVersion.replace('-', '').substring(1);
			if (!previous.hasOwnProperty('major') || verCompare.compareVersions(sCurrentVersion, sCheckVersion))
			{
				// Using a preprelease? Then you may need to know a new one is out!
				if ((elem.prerelease && adminIndex.current.prerelease) || (!elem.prerelease))]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for like_posts.js -->		
	<file name="THEMEDIR/scripts/like_posts.js">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.6
 */

/**]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 */

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					return false;

				// Set the subAction to what they are doing
				if (check.indexOf('unlike_button') >= 0) {
					if (!confirm(likemsg_are_you_sure))
						return;
]]></search>
			<add><![CDATA[					return false;

				// Set the subAction to what they are doing
				if (check.indexOf('unreact_button') >= 0) {
					if (!confirm(likemsg_are_you_sure))
						return;
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			 * @param {object} params object of new values from the ajax request
			 */
			updateUi = function (params) {
				var currentClass = (params.action === 'unlikepost') ? 'unlike_button' : 'like_button',
					nextClass = (params.action === 'unlikepost') ? 'like_button' : 'unlike_button';

				// Swap the button class as needed, update the text for the hover
				$(params.elem).removeClass(currentClass).addClass(nextClass);]]></search>
			<add><![CDATA[			 * @param {object} params object of new values from the ajax request
			 */
			updateUi = function (params) {
				var currentClass = (params.action === 'unlikepost') ? 'unreact_button' : 'react_button',
					nextClass = (params.action === 'unlikepost') ? 'react_button' : 'unreact_button';

				// Swap the button class as needed, update the text for the hover
				$(params.elem).removeClass(currentClass).addClass(nextClass);]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for mentioning.plugin.js -->		
	<file name="THEMEDIR/scripts/mentioning.plugin.js">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.6
 */

/**]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 */

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						return oMentions.opts.cache.names[query];
					}

					return [];
				},
				// Well then lets make a find member suggest call
				remoteFilter: function(query, callback) {]]></search>
			<add><![CDATA[						return oMentions.opts.cache.names[query];
					}

					return items;
				},
				// Well then lets make a find member suggest call
				remoteFilter: function(query, callback) {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						return;

					// No slamming the server either
					var current_call = parseInt(new Date().getTime() / 1000);
					if (oMentions.opts._last_call !== 0 && oMentions.opts._last_call + 0.5 > current_call) {
						callback(oMentions.opts._names);
						return;
					}]]></search>
			<add><![CDATA[						return;

					// No slamming the server either
					var current_call = parseInt(new Date().getTime());
					if (oMentions.opts._last_call !== 0 && oMentions.opts._last_call + 150 > current_call) {
						callback(oMentions.opts._names);
						return;
					}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					return value;
				},
				matcher: function(flag, subtext, should_startWithSpace, acceptSpaceBar) {
					var _a, _y, match, regexp, space;

					flag = flag.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");

					if (should_startWithSpace) {
						flag = '(?:^|\\s)' + flag;
					}

					// Allow À - ÿ
					_a = decodeURI("%C3%80");
					_y = decodeURI("%C3%BF");

					// Allow first last name entry?
					space = acceptSpaceBar ? "\ " : "";

					// regexp = new RegExp(flag + '([^ <>&"\'=\\\\\n]*)$|' + flag + '([^\\x00-\\xff]*)$', 'gi');
					regexp = new RegExp(flag + "([A-Za-z" + _a + "-" + _y + "0-9_" + space + "\\[\\]\'\.\+\-]*)$|" + flag + "([^\\x00-\\xff]*)$", 'gi');
					match = regexp.exec(subtext);

					if (match) {
						return match[2] || match[1];
					}
					else {
						return null;]]></search>
			<add><![CDATA[					return value;
				},
				matcher: function(flag, subtext, should_startWithSpace, acceptSpaceBar) {
					var match, regexp, space;

					if (!subtext || subtext.length < 2)
						return null;

					if (should_startWithSpace) {
						flag = '(?:^|\\s)' + flag;
					}

					// Allow first last name entry?
					space = acceptSpaceBar ? "\ " : "";

					// regexp = new RegExp(flag + '([^ <>&"\'=\\\\\n]*)$|' + flag + '([^\\x00-\\xff]*)$', 'gi');
					regexp = new RegExp(flag + "([\\p{L}0-9_" + space + "\\[\\]\'\.\+\-]*)$", 'mu');
					match = regexp.exec(subtext);

					if (match) {
						return match[1];
					}
					else {
						return null;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				// Found the start of @mention
				if (atPos > -1) {
					parent.insertBefore(placefinder, prev.splitText(atPos + 1));
					break;
				}
]]></search>
			<add><![CDATA[
				// Found the start of @mention
				if (atPos > -1) {
					parent.insertBefore(placefinder, prev.splitText(atPos));
					break;
				}
]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for post.js -->		
	<file name="THEMEDIR/scripts/post.js">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 */

/**]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 */

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$(this).next().children().slideToggle("fast");
	});

	// Fix and Prettify code blocks
	if (typeof elk_codefix === 'function')
		elk_codefix();]]></search>
			<add><![CDATA[		$(this).next().children().slideToggle("fast");
	});

	// Show more quote blocks
	if (typeof elk_quotefix === 'function')
		elk_quotefix();
	// Fix and Prettify code blocks
	if (typeof elk_codefix === 'function')
		elk_codefix();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	$editor_data[post_box_name].insert(text);

	ajax_indicator(false);
}
]]></search>
			<add><![CDATA[
	$editor_data[post_box_name].insert(text);

	// In wizzy mode, we need to move the cursor out of the quote block
	let
		rangeHelper = $editor_data[post_box_name].getRangeHelper(),
		parent = rangeHelper.parentNode();

	if (parent && parent.nodeName === 'BLOCKQUOTE')
	{
		let range = rangeHelper.selectedRange();

		range.setStartAfter(parent);
		rangeHelper.selectRange(range);
	}

	ajax_indicator(false);
}
]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for profile.js -->		
	<file name="THEMEDIR/scripts/profile.js">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 */

/**]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 */

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * Calculates the number of available characters remaining when filling in the
 * signature box
 */
function calcCharLeft()
{
	var oldSignature = "",
		currentSignature = document.forms.creator.signature.value,
		currentChars = 0;

	if (!document.getElementById("signatureLeft"))
		return;

	if (oldSignature !== currentSignature)
	{
		oldSignature = currentSignature;]]></search>
			<add><![CDATA[ * Calculates the number of available characters remaining when filling in the
 * signature box
 */
var oldSignature = "";
function calcCharLeft(init)
{
	var currentSignature = document.forms.creator.signature.value,
		currentChars = 0;

	if (!document.getElementById("signatureLeft"))
		return;

	init = typeof init !== 'undefined' ? init : false;

	if (oldSignature !== currentSignature)
	{
		oldSignature = currentSignature;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		var $_profile_error = $("#profile_error");
		if (currentChars > maxLength && !$_profile_error.is(":visible"))
			ajax_getSignaturePreview(false);
		else if (currentChars <= maxLength && $_profile_error.is(":visible"))
		{
			$_profile_error.css({display:"none"});
			$_profile_error.html('');]]></search>
			<add><![CDATA[		var $_profile_error = $("#profile_error");
		if (currentChars > maxLength && !$_profile_error.is(":visible"))
			ajax_getSignaturePreview(false);
		else if (currentChars <= maxLength && $_profile_error.is(":visible") && !init)
		{
			$_profile_error.css({display:"none"});
			$_profile_error.html('');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}).attr('src', src);
}

/**
 * Disable notification boxes as required.  This is in response to selecting the
 * notify user checkbox in the issue a warning screen]]></search>
			<add><![CDATA[	}).attr('src', src);
}

/**
 * Allows for the previewing of an uploaded avatar
 *
 * @param {object} src
 */
function previewUploadedAvatar(src)
{
	if (src.files && src.files[0])
	{
		let reader = new FileReader();

		reader.readAsDataURL(src.files[0]);
		reader.onload = function ()
		{
			let current_avatar = document.getElementById('current_avatar'),
				current_avatar_new = document.getElementById('current_avatar_new'),
				current_avatar_new_preview = document.getElementById('current_avatar_new_preview');

			current_avatar_new_preview.src = String(reader.result);
			current_avatar_new.classList.remove('hide');
			current_avatar.classList.add('hide');
		};
	}
}

/**
 * Disable notification boxes as required.  This is in response to selecting the
 * notify user checkbox in the issue a warning screen]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for script_elk.js -->		
	<file name="THEMEDIR/scripts/script_elk.js">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.7
 */

/**]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.9
 */

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		var $this = $(this);

		// If it has a scroll bar, allow the user to resize it vertically
		if ($this.get(0).scrollHeight > $this.innerHeight()) {
			$this.css('height', $this.height());
			$this.css('max-height', 'none');
		}]]></search>
			<add><![CDATA[		var $this = $(this);

		// If it has a scroll bar, allow the user to resize it vertically
		if ($this.get(0).scrollHeight > Math.round($this.innerHeight())) {
			$this.css('height', $this.height());
			$this.css('max-height', 'none');
		}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	});
}

/**
 * Turn a regular url button in to an ajax request
 *]]></search>
			<add><![CDATA[	});
}

/**
 * Removes the read more overlay from quote blocks that do not need them, and for
 * ones that do, hides so the read more input can expand it out.
 */
function elk_quotefix()
{
	let quotes = document.querySelectorAll('.quote-read-more');

	quotes.forEach((quote) => {
		let bbc_quote = quote.querySelector('.bbc_quote');

		if (bbc_quote.scrollHeight > bbc_quote.clientHeight)
		{
			bbc_quote.style.overflow = 'hidden';
		}
		else
		{
			let check = quote.querySelector('.quote-show-more');
			if (check)
			{
				check.remove();
			}
		}
	});
}

/**
 * Turn a regular url button in to an ajax request
 *]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for theme.js -->		
	<file name="THEMEDIR/scripts/theme.js">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 */

/**]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.9
 */

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (typeof elk_codefix === 'function')
		elk_codefix();

	// Enable the ... page expansion
	$('.expand_pages').expand_pages();
]]></search>
			<add><![CDATA[	if (typeof elk_codefix === 'function')
		elk_codefix();

	// Remove "show more" from short quotes
	if (typeof elk_quotefix === 'function')
		elk_quotefix();

	// Enable the ... page expansion
	$('.expand_pages').expand_pages();
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$(this).parent().toggleClass("collapsed");
	});

	$('legend', function () {
		if ($(this).data('collapsed'))
			$(this).click();
	});]]></search>
			<add><![CDATA[		$(this).parent().toggleClass("collapsed");
	});

	$('legend').each(function () {
		if ($(this).data('collapsed'))
			$(this).click();
	});]]></add>
		</operation>
	</file>
	
	<!-- 1.1.9 updates for topic.js -->		
	<file name="THEMEDIR/scripts/topic.js">
		<operation>
			<search position="replace"><![CDATA[		getXMLDocument(elk_prepareScriptUrl(this.opt.sScriptUrl) + 'action=quotefast;quote=' + iMessageId + ';xml', this.onQuoteReceived);

	// Move the view to the quick reply box.
	if (navigator.appName === 'Microsoft Internet Explorer')
		window.location.hash = this.opt.sJumpAnchor;
	else
		window.location.hash = '#' + this.opt.sJumpAnchor;

	return false;
};]]></search>
			<add><![CDATA[		getXMLDocument(elk_prepareScriptUrl(this.opt.sScriptUrl) + 'action=quotefast;quote=' + iMessageId + ';xml', this.onQuoteReceived);

	// Move the view to the quick reply box.
	document.getElementById(this.opt.sJumpAnchor).scrollIntoView();

	return false;
};]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}

	// Position the editor in the window
	location.hash = '#info_' + this.sCurMessageId.substr(this.sCurMessageId.lastIndexOf("_") + 1);

	// Handle custom function hook before showing the new select.
	if ('funcOnAfterCreate' in this.opt)]]></search>
			<add><![CDATA[	}

	// Position the editor in the window
	document.getElementById('info_' + this.sCurMessageId.substring(this.sCurMessageId.lastIndexOf("_") + 1)).scrollIntoView();

	// Handle custom function hook before showing the new select.
	if ('funcOnAfterCreate' in this.opt)]]></add>
		</operation>
	</file>
		<!-- 1.1.9 updates for Portal.subs.php to prevent abend on 1.1.9
 -->		
	<file name="SUBSDIR/Portal.subs.php" error="skip">
		<operation error="ignore">
			<search position="replace"><![CDATA['query' => empty($allowed) ? '0=1' : 'FIND_IN_SET(%s, \'' . implode(',', $allowed) . '\')',]]></search>
			<add><![CDATA['query' => empty($allowed) ? '0=1' : 'FIND_IN_SET(%s, "' . implode(',', $allowed) . '")',]]></add>
		</operation>
	</file>

		<!-- 1.1.9 updates for Portal.subs.php to prevent abend on 1.1.9
 -->		
	<file name="EXTDIR/bad-behavior\bad-behavior\banned.inc.php" error="ignore">
		<operation error="ignore">
			<search position="replace"><![CDATA[	// FIXME Yes, the interval's hard coded (again) for now.
	$query = "DELETE FROM `" . $settings['log_table'] . "` WHERE `date` < DATE_SUB('" . bb2_db_date() . "', INTERVAL 7 DAY)";]]></search>
			<add><![CDATA[	// FIXME Yes, the interval's hard coded (again) for now.
	$query = 'DELETE FROM `' . $settings['log_table'] . '` WHERE `date` < DATE_SUB("' . bb2_db_date() . '", INTERVAL 7 DAY)';
]]></add>
		</operation>
	</file>
</modification>